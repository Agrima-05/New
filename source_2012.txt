--.RUN FILE = 'C:\Reporting\TD_PW\HLAVSMA\UMKTNTLDBRP.txt';


--DATABASE ntl_prd_allvm;

DEL 
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3;

DEL 
FROM	hqmkt_prd_qmtbls.mm_cpni_lines;

DEL 
FROM   hqmkt_prd_qmtbls.mm_coll_accts;

--ESP = QQQQQ
--CALM = ZZZZZ
--manual inserts = UXUXUXUX
--OS Split = OSOSOSOSOS  


/*###########################################################################
--History log as of 2025-06-20

--2025_06_20:   Jen Canlas      	Added AAL_IOS_SMSPUSH_P:  AAL_IOS_P with SMS or Push
--2025_06_23:   Jen Canlas      	Added Suppression for Jeff M's RCS test into AAL_IOS_SMSPUSH_P
--2025_06_30:   Jen Canlas	Added Pega Hold Out MCs.  Updated DYN Randomization. Updated hierarchy.  
--2025_07_02:   Jen Canlas 	ACQ195 and ACQ196: Added LowProp MCs and combined Mid and LMid to 1 block. Added 2-3 line LMID and MID MCs
--2025_07_03:   Jen Canlas      	Updated hierarchy
--2025_07_08:   Jen Canlas      	Updated hierarchy
--2025_07_11:   Jen Canlas      	Updated hierarchy, added where condition to max(rpt_dt) of DYN offerset value since FWA DYN started-  in case diff rpt_dts
--2025_07_15:   Jen Canlas      	Added Samsung BOGO MCs: ACQ00380



--###########################################################################*/

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--THIS SECTION INSERTS THE MC'S BASED ON SAS MODELING FOR THE 4 DEVICE TYPES
--VOICE, TABLET, WEARABLE, MBB
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
where message_cd in
(
'AAL_VOICE_SL_P'
,'AAL_VOICE_P'
)
;
*/



/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Inserting daily full load for collection global suppressions
--Added by MM 05292025
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

---- insert the Collection temp  table 

INSERT INTO hqmkt_prd_qmtbls.mm_coll_accts
SEL DISTINCT A.SSF_CUST_ID AS CUST_ID, A.SSF_ACCT_NUM AS ACCT_NUM
FROM hqmkt_prd_qmtbls.knw_cons_base_1 a

INNER JOIN NTL_PRD_ALLVM.CACS_CUST_ACCT_COLL_DLY_HIST_V COLL ------------------COLLECTIONS TABLE
ON A.SSF_CUST_ID = COLL.CUST_ID
AND A.SSF_ACCT_NUM = COLL.ACCT_NUM

WHERE a.ssf_base_mth IN (Cast ((((Current_Date / 100) * 100) + 1) AS DATE) 
,Add_Months(Cast ((((Current_Date / 100) * 100) + 1) AS DATE),-1))
-- Picking up the current record from the historical table
AND COLL.CURR_PREV_IND = 'C'
AND
(
-- write off in the collections table
COLL.WRITE_OFF_IND = 'Y'
-- bankruptcy indicators in the collections table
OR COLL.BANKRUPTCY_IND = 'Y' OR COLL.PRI_CACS_FNCTN_CD = 'A'
-- fraud indicators in the collections table
OR Coalesce(COLL.IFD_STATUS_CD, 'N') <> 'N' OR COLL.PRI_CACS_FNCTN_CD = 'F'
-- exclude specialty codes (death, military, etc)
OR COLL.PRI_CACS_FNCTN_CD = 'S'
-- exclude those marked as a high risk of litigation
OR COLL.PRI_CACS_FNCTN_CD = 'O'
-- exclude - Hotline/Suspend
OR COLL.COLL_STATUS_CD IN ('H', 'S', 'D')
-- exclude - 0/90 Days Past Due
OR COLL.DELINQ_AMT_BY_AGE90+COLL.DELINQ_AMT_BY_AGE120+COLL.DELINQ_AMT_BY_AGE150+COLL.DELINQ_AMT_BY_AGE180 > 0
)
;


/*LEFT JOIN hqmkt_prd_qmtbls.mm_coll_accts coll
--ON a.cust_id = coll.cust_id
--AND a.acct_num = coll.acct_num
	
--.
--.
--AND coll.cust_id IS NULL;*/


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Beg of the script
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
--update SL DYN  (1 OF 4)
CASE 
WHEN mfg_nm='MOTOROLA' THEN 'AAL_VOICE_MOTO_P'	
WHEN device_grouping  IN ('Android') 
AND mfg_nm NOT IN ('APPLE','MOTOROLA','SAMSUNG') 
AND a.acct_pho_lines = 1  THEN 'AAL_VOICE_SL_GOOGLE_P'
WHEN device_grouping  IN ('Android') 
AND mfg_nm NOT IN ('APPLE','MOTOROLA','SAMSUNG')  THEN 'AAL_VOICE_GOOGLE_P'
WHEN (a.acct_aal_v_wly_orig_val >=  0.49134 
OR a.acct_aal_v_wly_cent >= 71) 
AND a.acct_pho_lines = 1  
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('00', '09', '12', '13', '15', '21', '32', '36', '38', '49',
'54', '56', '61', '63', '68', '70', '72', '78', '79', '80', 
'81', '85', '87', '89', '90'
)		--updated 6/30/25
THEN
'AAL_VOICE_SL_P'
WHEN (a.acct_aal_v_wly_orig_val >=  0.49134 
OR a.acct_aal_v_wly_cent >= 71) 
AND a.acct_pho_lines = 1  
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('01', '02', '03', '04', '05', '06', '07', '08', '10', '11',
'14', '16', '17', '18', '19', '20', '22', '23', '24', '25', 
'26', '27', '28', '29', '30', '31', '33', '34', '35', '37', 
'39', '40', '41', '42', '43', '44', '45', '46', '47', '48', 
'50', '51', '52', '53', '55', '57', '58', '59', '60', '62', 
'64', '65', '66', '67', '69', '71', '73', '74', '75', '76', 
'77', '82', '83', '84', '86', '88', '91', '92', '93', '94', 
'95', '96', '97', '98', '99'
) --updated 6/30/25
THEN
'AAL_VOICE_SL_DYN_P'
WHEN (a.acct_aal_v_wly_orig_val >=  0.49134 
OR a.acct_aal_v_wly_cent >= 71) THEN 'AAL_VOICE_P'
ELSE NULL 
end AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
OR a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND message_cd IS NOT NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025

;




/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
where message_cd in
(
'AAL_TAB_P'
)
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE 
/*WHEN a.device_grouping  IN ('Android')
AND a.mfg_nm NOT IN ('APPLE','SAMSUNG')
THEN 'AAL_WEARABLE_ESP_GOOGLE_P'*/

--updated TAB DYN  (1 OF 3)
WHEN   Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('22', '23', '25', '33', '57', '59', '61', '62', '75', '80')  --UPDATED 6/30/25
THEN 'AAL_TAB_P'
WHEN   Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('00', '01', '02', '03', '04', '05', '06', '07', '08', '09', 
'10', '11', '12', '13', '14', '15', '16', '17', '18', '19', 
'20', '21', '24', '26', '27', '28', '29', '30', '31', '32', 
'34', '35', '36', '37', '38', '39', '40', '41', '42', '43', 
'44', '45', '46', '47', '48', '49', '50', '51', '52', '53', 
'54', '55', '56', '58', '60', '63', '64', '65', '66', '67', 
'68', '69', '70', '71', '72', '73', '74', '76', '77', '78', 
'79', '81', '82', '83', '84', '85', '86', '87', '88', '89', 
'90', '91', '92', '93', '94', '95', '96', '97', '98', '99'
) --UPDATED 6/30/25
THEN 'AAL_TAB_DYN_P'

ELSE NULL
end AS message_cd,
		
		


CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

--a.acct_aal_v_wly_cent as score_centile,
--a.acct_aal_v_wly_val as score_value,
--a.acct_aal_v_wly_orig_val as orig_value,
a.acct_aal_tbl_wly_cent AS score_centile,
a.acct_aal_tbl_wly_val AS score_value,
a.acct_aal_tbl_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
--and a.acct_pho_lines between 1 and 9 --can only have 10 phones, so leaves room to add 1
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and a.acct_aal_v_wly_orig_val >= 0.08626 --propensity score above threshold
--and coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND (a.acct_aal_tbl_wly_orig_val >= 0.46866 --propensity score above threshold
OR a.acct_aal_tbl_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.tab_adds_30, 0) = 0 --account not added tablet line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;


/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
where message_cd in
(
'AAL_WEARABLE_P'
)
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

--UPDATED WEAR DYN  (1 OF 3)
CASE 
/*WHEN a.device_grouping  IN ('Android')
AND a.mfg_nm NOT IN ('APPLE','SAMSUNG')
THEN 'AAL_WEARABLE_ESP_GOOGLE_P'*/

WHEN   Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('09', '21', '42', '43', '54', '55', '78', '85', '88', '96') --updated 6/30/25
THEN 'AAL_WEARABLE_P'
WHEN   Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('00', '01', '02', '03', '04', '05', '06', '07', '08', '10', 
'11', '12', '13', '14', '15', '16', '17', '18', '19', '20', 
'22', '23', '24', '25', '26', '27', '28', '29', '30', '31', 
'32', '33', '34', '35', '36', '37', '38', '39', '40', '41', 
'44', '45', '46', '47', '48', '49', '50', '51', '52', '53', 
'56', '57', '58', '59', '60', '61', '62', '63', '64', '65', 
'66', '67', '68', '69', '70', '71', '72', '73', '74', '75', 
'76', '77', '79', '80', '81', '82', '83', '84', '86', '87', 
'89', '90', '91', '92', '93', '94', '95', '97', '98', '99'
)  --updated 6/30/25
THEN 'AAL_WEARABLE_DYN_P'

ELSE NULL
end AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

--a.acct_aal_v_wly_cent as score_centile,
--a.acct_aal_v_wly_val as score_value,
--a.acct_aal_v_wly_orig_val as orig_value,
--a.acct_aal_tbl_wly_cent as score_centile,
--a.acct_aal_tbl_wly_val as score_value,
--a.acct_aal_tbl_wly_orig_val as orig_value,
a.acct_aal_wearable_wly_cent AS score_centile,
a.acct_aal_wearable_wly_val AS score_value,
a.acct_aal_wearable_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
--and a.acct_pho_lines between 1 and 9 --can only have 10 phones, so leaves room to add 1
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and a.acct_aal_v_wly_orig_val >= 0.08626 --propensity score above threshold
--and coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
--and a.acct_aal_tbl_wly_orig_val >= 0.02192 --propensity score above threshold
--and coalesce (a.tab_adds_30, 0) = 0 --account not added tablet line within 30 days
AND (a.acct_aal_wearable_wly_orig_val >= 0.45997 --propensity score above threshold
OR a.acct_aal_wearable_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.wear_adds_30, 0) = 0 --account not added a wearable line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND Message_cd IS NOT NULL
;

/*INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
'AAL_WEARABLE_P'	 AS message_cd,
trtmnt_ctrl_ind AS trtmnt_ctrl_ind,
pull_thru,
reactive,
score_centile,
score_value,
orig_value,
aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

WHERE	Message_cd = 'AAL_WEARABLE_DYN_P'
;

*/


/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
where message_cd in
(
'AAL_MBB_P'
)
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

'AAL_MBB_P' AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

--a.acct_aal_v_wly_cent as score_centile,
--a.acct_aal_v_wly_val as score_value,
--a.acct_aal_v_wly_orig_val as orig_value,
--a.acct_aal_tbl_wly_cent as score_centile,
--a.acct_aal_tbl_wly_val as score_value,
--a.acct_aal_tbl_wly_orig_val as orig_value,
--a.acct_aal_wearable_wly_cent as score_centile,
--a.acct_aal_wearable_wly_val as score_value,
--a.acct_aal_wearable_wly_orig_val as orig_value,
a.acct_aal_mbb_wly_cent AS score_centile,
a.acct_aal_mbb_wly_val AS score_value,
a.acct_aal_mbb_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
--and a.acct_pho_lines between 1 and 9 --can only have 10 phones, so leaves room to add 1
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and a.acct_aal_v_wly_orig_val >= 0.08626 --propensity score above threshold
--and coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
--and a.acct_aal_tbl_wly_orig_val >= 0.02192 --propensity score above threshold
--and coalesce (a.tab_adds_30, 0) = 0 --account not added tablet line within 30 days
--and a.acct_aal_wearable_wly_orig_val >= 0.3493 --propensity score above threshold
--and coalesce (a.wear_adds_30, 0) = 0 --account not added tablet line within 30 days
AND (a.acct_aal_mbb_wly_orig_val >= 0.4921 --propensity score above threshold
OR a.acct_aal_mbb_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.mbb_adds_30, 0) = 0 --account not added tablet line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--THIS SECTION INSERTS THE MC'S BASED ON ASTER MODELING FOR THE 4 DEVICE TYPES
--VOICE, TABLET, WEARABLE, MBB
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
where message_cd in
(
'AAL_VOICE_SL_P'
,'AAL_VOICE_P'
)
and a.aster_ind = 'Y'
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
--update SL DYN  (2 OF 4)
CASE 
WHEN  a.acct_pho_lines = 1  
AND 
Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('00', '09', '12', '13', '15', '21', '32', '36', '38', '49',
'54', '56', '61', '63', '68', '70', '72', '78', '79', '80', 
'81', '85', '87', '89', '90'
)		--updated 6/30/25
THEN
'AAL_VOICE_SL_P'
WHEN a.acct_pho_lines = 1  
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('01', '02', '03', '04', '05', '06', '07', '08', '10', '11',
'14', '16', '17', '18', '19', '20', '22', '23', '24', '25', 
'26', '27', '28', '29', '30', '31', '33', '34', '35', '37', 
'39', '40', '41', '42', '43', '44', '45', '46', '47', '48', 
'50', '51', '52', '53', '55', '57', '58', '59', '60', '62', 
'64', '65', '66', '67', '69', '71', '73', '74', '75', '76', 
'77', '82', '83', '84', '86', '88', '91', '92', '93', '94', 
'95', '96', '97', '98', '99'
) --updated 6/30/25
THEN
'AAL_VOICE_SL_DYN_P'
ELSE 'AAL_VOICE_P'
end AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

b.decile AS score_centile,
b.aal_score AS score_value,
b.aal_score AS orig_value,
'Y' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

INNER JOIN hqcrm_prd_qmtbls.aster_aal_curr_device b
ON a.cust_id = b.predicted_cust_id
AND b.prediction_type = 'AAL_SMART'

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
	
WHERE	a.message_cd IN
(
'AAL_VOICE_SL_P'
,'AAL_VOICE_SL_DYN_P'
,'AAL_VOICE_P'
)
	
GROUP BY 1,2
	
) c 
ON a.cust_id = c.cust_id
AND a.acct_num = c.acct_num

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND a.acct_pho_lines BETWEEN 1 AND 9 --can only have 10 phones, so leaves room to add 1
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and a.acct_aal_v_wly_orig_val >= 0.08626 --propensity score above threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND c.cust_id IS NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;
	
	
/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
where message_cd in
(
'AAL_TAB_P'
)
and a.aster_ind = 'Y'
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE 
/*WHEN a.device_grouping  IN ('Android')
AND a.mfg_nm NOT IN ('APPLE','SAMSUNG')
THEN 'AAL_WEARABLE_ESP_GOOGLE_P'*/

--UPDATED TAB DYN (2 OF 3)
WHEN   Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('22', '23', '25', '33', '57', '59', '61', '62', '75', '80')  --UPDATED 6/30/25
THEN 'AAL_TAB_P'
WHEN   Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('00', '01', '02', '03', '04', '05', '06', '07', '08', '09', 
'10', '11', '12', '13', '14', '15', '16', '17', '18', '19', 
'20', '21', '24', '26', '27', '28', '29', '30', '31', '32', 
'34', '35', '36', '37', '38', '39', '40', '41', '42', '43', 
'44', '45', '46', '47', '48', '49', '50', '51', '52', '53', 
'54', '55', '56', '58', '60', '63', '64', '65', '66', '67', 
'68', '69', '70', '71', '72', '73', '74', '76', '77', '78', 
'79', '81', '82', '83', '84', '85', '86', '87', '88', '89', 
'90', '91', '92', '93', '94', '95', '96', '97', '98', '99'
) --UPDATED 6/30/25
THEN 'AAL_TAB_DYN_P'

ELSE NULL
end AS message_cd,
		

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

b.decile AS score_centile,
b.aal_score AS score_value,
b.aal_score AS orig_value,
'Y' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

INNER JOIN hqcrm_prd_qmtbls.aster_aal_curr_device b
ON a.cust_id = b.predicted_cust_id
AND b.prediction_type = 'AAL_Tablet'

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
	
WHERE	a.message_cd IN
(
'AAL_TAB_P',
'AAL_TAB_DYN_P'
)
	
GROUP BY 1,2
	
) c 
ON a.cust_id = c.cust_id
AND a.acct_num = c.acct_num

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
--and a.acct_pho_lines between 1 and 9 --can only have 10 phones, so leaves room to add 1
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and a.acct_aal_v_wly_orig_val >= 0.08626 --propensity score above threshold
--and coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
--and a.acct_aal_tbl_wly_orig_val >= 0.02192 --propensity score above threshold
AND Coalesce (a.tab_adds_30, 0) = 0 --account not added tablet line within 30 days
AND c.cust_id IS NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;


/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
where message_cd in
(
'AAL_WEARABLE_P'
)
and a.aster_ind = 'Y'
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

--UPDATED WEAR DYN (2 OF 3)
CASE WHEN   Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('09', '21', '42', '43', '54', '55', '78', '85', '88', '96') --updated 6/30/25
THEN 'AAL_WEARABLE_P'
WHEN   Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('00', '01', '02', '03', '04', '05', '06', '07', '08', '10', 
'11', '12', '13', '14', '15', '16', '17', '18', '19', '20', 
'22', '23', '24', '25', '26', '27', '28', '29', '30', '31', 
'32', '33', '34', '35', '36', '37', '38', '39', '40', '41', 
'44', '45', '46', '47', '48', '49', '50', '51', '52', '53', 
'56', '57', '58', '59', '60', '61', '62', '63', '64', '65', 
'66', '67', '68', '69', '70', '71', '72', '73', '74', '75', 
'76', '77', '79', '80', '81', '82', '83', '84', '86', '87', 
'89', '90', '91', '92', '93', '94', '95', '97', '98', '99'
)  --updated 6/30/25
THEN 'AAL_WEARABLE_DYN_P'

ELSE NULL
end AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

b.decile AS score_centile,
b.aal_score AS score_value,
b.aal_score AS orig_value,
'Y' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

INNER JOIN hqcrm_prd_qmtbls.aster_aal_curr_device b
ON a.cust_id = b.predicted_cust_id
AND b.prediction_type = 'AAL_Wear'

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
	
WHERE	a.message_cd IN
(
'AAL_WEARABLE_P',
'AAL_WEARABLE_DYN_P'
)
	
GROUP BY 1,2
	
) c 
ON a.cust_id = c.cust_id
AND a.acct_num = c.acct_num

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
--and a.acct_pho_lines between 1 and 9 --can only have 10 phones, so leaves room to add 1
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and a.acct_aal_v_wly_orig_val >= 0.08626 --propensity score above threshold
--and coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
--and a.acct_aal_tbl_wly_orig_val >= 0.02192 --propensity score above threshold
--and coalesce (a.tab_adds_30, 0) = 0 --account not added tablet line within 30 days
--and a.acct_aal_wearable_wly_orig_val >= 0.3493 --propensity score above threshold
AND Coalesce (a.wear_adds_30, 0) = 0 --account not added tablet line within 30 days
AND c.cust_id IS NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;



/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
where message_cd in
(
'AAL_MBB_P'
)
and a.aster_ind = 'Y'
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

'AAL_MBB_P' AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

b.decile AS score_centile,
b.aal_score AS score_value,
b.aal_score AS orig_value,
'Y' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

INNER JOIN hqcrm_prd_qmtbls.aster_aal_curr_device b
ON a.cust_id = b.predicted_cust_id
AND b.prediction_type = 'AAL_MBB'

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
	
WHERE	a.message_cd IN
(
'AAL_MBB_P'
)
	
GROUP BY 1,2
	
) c 
ON a.cust_id = c.cust_id
AND a.acct_num = c.acct_num

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
--and a.acct_pho_lines between 1 and 9 --can only have 10 phones, so leaves room to add 1
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and a.acct_aal_v_wly_orig_val >= 0.08626 --propensity score above threshold
--and coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
--and a.acct_aal_tbl_wly_orig_val >= 0.02192 --propensity score above threshold
--and coalesce (a.tab_adds_30, 0) = 0 --account not added tablet line within 30 days
--and a.acct_aal_wearable_wly_orig_val >= 0.3493 --propensity score above threshold
--and coalesce (a.wear_adds_30, 0) = 0 --account not added tablet line within 30 days
--and a.acct_aal_mbb_wly_orig_val >= 0.14078 --propensity score above threshold
AND Coalesce (a.mbb_adds_30, 0) = 0 --account not added tablet line within 30 days
AND c.cust_id IS NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--THIS SECTION INSERTS OTHER MC'S BEYOND THE CORE-FOUR
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */





INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
'AAL_VOICE_APPLE_INDIRECT_P' AS message_cd,
a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.mth_typ = 'C'
AND b.eom_lines = 1

WHERE	a.message_cd IN
(
'AAL_VOICE_P'
,'AAL_VOICE_SL_P'
,'AAL_VOICE_SL_DYN_P'
)
AND Lower (b.device_grouping) = 'apple'
AND b.aal_chan_pref_chan_1 = 'e) Loc Ind' 
AND b.aal_chan_pref_loc_ind_centil >= 71
;



INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
CASE 
WHEN b.last_chan_nm='a) Stores' 
AND b.device_grouping = 'Apple' THEN 'AAL_VOICE_IOS_DIRECT_P'
WHEN b.last_chan_nm='a) Stores' 
AND b.device_grouping = 'Android' THEN 'AAL_VOICE_ANDR_DIRECT_P'
WHEN b.last_chan_nm='f) Loc Ind' 
AND b.aal_chan_pref_chan_1='a) Stores' 
AND b.device_grouping = 'Apple' THEN 'AAL_VOICE_IOS_DIRECT_P'
WHEN b.last_chan_nm='f) Loc Ind' 
AND b.aal_chan_pref_chan_1='a) Stores' 
AND b.device_grouping = 'Android' THEN 'AAL_VOICE_ANDR_DIRECT_P'

WHEN b.last_chan_nm='c) Tele' 
AND b.device_grouping = 'Apple' THEN 'AAL_VOICE_IOS_INSALE_P'
WHEN b.last_chan_nm='c) Tele' 
AND b.device_grouping = 'Android' THEN 'AAL_VOICE_ANDR_INSALE_P'
WHEN b.last_chan_nm='f) Loc Ind' 
AND aal_chan_pref_chan_1='c) Tele' 
AND b.device_grouping = 'Apple' THEN 'AAL_VOICE_IOS_INSALE_P'
WHEN b.last_chan_nm='f) Loc Ind' 
AND aal_chan_pref_chan_1='c) Tele' 
AND b.device_grouping = 'Android' THEN 'AAL_VOICE_ANDR_INSALE_P'

WHEN b.last_chan_nm='f) Loc Ind' 
AND aal_chan_pref_chan_1='e) Loc Ind' 
AND b.device_grouping = 'Apple' THEN 'AAL_VOICE_IOS_INDIRECT_P'
WHEN b.last_chan_nm='f) Loc Ind' 
AND aal_chan_pref_chan_1='e) Loc Ind' 
AND b.device_grouping = 'Android' THEN 'AAL_VOICE_ANDR_INDIRECT_P'

end AS message_cd,



a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.mth_typ = 'C'
AND b.eom_lines = 1

WHERE	a.message_cd IN
(
'AAL_VOICE_P'
,'AAL_VOICE_SL_P'
,'AAL_VOICE_SL_DYN_P'
)
;


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
'AAL_VOICE_ANDROID_INDIRECT_P' AS message_cd,
a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.mth_typ = 'C'
AND b.eom_lines = 1

WHERE	a.message_cd IN
(
'AAL_VOICE_P'
,'AAL_VOICE_SL_P'
,'AAL_VOICE_SL_DYN_P'
)
AND Lower (b.device_grouping) = 'android'
AND b.aal_chan_pref_chan_1 = 'e) Loc Ind' 
AND b.aal_chan_pref_loc_ind_centil >= 71
AND Coalesce (b.mfg_nm, 'ZZ') <> 'MOTOROLA'
;





/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
where message_cd in
(
'OBRD_GRP_NEW_SL_AAL_P'
)
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

'OBRD_GRP_NEW_SL_AAL_P' AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

INNER JOIN
(
SEL
a.cust_id AS cust_id,
--a.acct_num as acct_num
a.cust_line_seq_id AS cust_line_seq_id
	
FROM
(
SEL
a.cust_id AS cust_id,
--a.acct_num as acct_num
a.cust_line_seq_id AS cust_line_seq_id
		
FROM	ntl_prd_allvm.crm_cust_acct_line_message_v a
		
WHERE	a.curr_prev_ind = 'C'
AND a.message_cd = 'OBRD_GRP_NEW_P'
		
GROUP BY 1,2
		
UNION ALL
		
SEL
a.cust_id AS cust_id,
--a.acct_num as acct_num
a.cust_line_seq_id AS cust_line_seq_id
		
FROM	udm_prdusr_tbls.cust_acct_line_message_manual a
		
WHERE	a.curr_prev_ind = 'C'
AND a.message_cd = 'OBRD_GRP_NEW_P'
		
GROUP BY 1,2
		
) a
	
GROUP BY 1,2
	
) b 
ON a.cust_id = b.cust_id
--and a.acct_num = b.acct_num
AND a.cust_line_seq_id = b.cust_line_seq_id

LEFT OUTER JOIN
(
SEL
a.cust_id AS cust_id,
a.acct_num AS acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
	
WHERE	a.message_cd IN ('AAL_VOICE_SL_P', 'AAL_VOICE_SL_DYN_P')
	
GROUP BY 1,2
	
) c 
ON a.cust_id = c.cust_id
AND a.acct_num = c.acct_num

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
--and a.acct_estb_dt < date - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
--and a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.data_tier IN ('Smartphone','Basic')
--and a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND a.acct_pho_lines = 1 --account only has 1 active phone
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND c.cust_id IS NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;


/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
where message_cd in
(
'AAL_DAILY_RESP_P'
)
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

'AAL_DAILY_RESP_P' AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	ntl_prd_allvm.dla_sum_fact_v a
	
WHERE	a.activity_dt >= DATE - 30
AND a.activity_cd = 'AC'
	
GROUP BY 1,2
	
) dla 
ON a.cust_id = dla.cust_id
AND a.acct_num = dla.acct_num

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	ntl_prd_allvm.equip_sum_fact_v a
	
WHERE	a.pymnt_dt >= DATE - 3
AND a.fin_upg_flag = 'Y'
	
GROUP BY 1,2
	
) esf 
ON a.cust_id = esf.cust_id
AND a.acct_num = esf.acct_num

INNER JOIN 
(
SEL	DISTINCT a.cust_id
	
FROM	ntl_prd_allvm.credit_app_v a
--from ntl_prd_secvm.credit_app_v a
	
WHERE	a.credit_app_status = 'AP'
AND a.credit_app_dt >= DATE - 30
AND a.prev_ind IN ('E','U','R','C') 
	
) app 
ON a.cust_id = app.cust_id

INNER JOIN udm_prd_tbls.edge_qualify_detail eqd
ON a.cust_id = eqd.cust_id
AND a.acct_num = eqd.acct_num
AND eqd.qualified_chk_ind = 'Y'
AND eqd.ssn_credit_ind NOT IN ('H','W','C','D','F')

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
AND a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND Coalesce (a.tot_adds_30, 0) = 0 --account not added any line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND dla.cust_id IS NULL
AND esf.cust_id IS NULL
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Message code to combine 3 (Voice, SL Voice and responders into one IOS Voice 
--Added MM 02142022

--Updated the cretirea to include Dynamic 
--Updated by MM 03212025
--Removed Push/EMS Eligibility filter on 4/4/25 JC
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
'AAL_VOICE_IOS_ALL_P' AS message_cd,
CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

INNER JOIN adbcmp_prd_allvm.customer_profile_univ_cons_v b

ON  a.cust_id = b.cust_id 
AND a.acct_num = b.acct_num
AND a.cust_line_seq_id = b.cust_line_seq_id 
--and (b.PUSH_ENABLED = 'Y' and b.PUSH_LESS_DNS = 'Y') OR b.EMS_LESS_DNS = 'Y'

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
	
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND message_cd IS NOT NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND a.device_grouping = 'Apple'
--AND ((b.PUSH_ENABLED = 'Y' and b.PUSH_LESS_DNS = 'Y') OR b.EMS_LESS_DNS = 'Y')  --removed 4/4/25
AND 
(
(a.acct_aal_v_wly_orig_val >=  0.49134 
OR a.acct_aal_v_wly_cent >= 71) 
OR (a.acct_aal_tbl_wly_orig_val >= 0.46866 
OR a.acct_aal_tbl_wly_cent >= 71)
OR (a.acct_aal_wearable_wly_orig_val >= 0.45997 
OR a.acct_aal_wearable_wly_cent >= 71) 

)
;


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
'AAL_VOICE_ANDR_ALL_P' AS message_cd,
CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

INNER JOIN adbcmp_prd_allvm.customer_profile_univ_cons_v b

ON  a.cust_id = b.cust_id 
AND a.acct_num = b.acct_num
AND a.cust_line_seq_id = b.cust_line_seq_id 

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
	
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND message_cd IS NOT NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND a.device_grouping = 'Android'
--AND ((b.PUSH_ENABLED = 'Y' and b.PUSH_LESS_DNS = 'Y') OR b.EMS_LESS_DNS = 'Y')  --removed 4/4/25
AND 
(
(a.acct_aal_v_wly_orig_val >=  0.49134 
OR a.acct_aal_v_wly_cent >= 71) 
OR (a.acct_aal_tbl_wly_orig_val >= 0.46866 
OR a.acct_aal_tbl_wly_cent >= 71)
OR (a.acct_aal_wearable_wly_orig_val >= 0.45997 
OR a.acct_aal_wearable_wly_cent >= 71) 

)
;



/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Message code to combine 3 (Voice, SL Voice and responders into one ANDROID Voice 
--Added MM 06172022
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
'AAL_VOICE_ANDR_ALL_P' AS message_cd,
a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
LEFT JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id=b.cust_id
AND a.cust_line_seq_id=b.cust_line_seq_id

WHERE	message_cd IN
(
'AAL_VOICE_P',
'AAL_VOICE_SL_P',
'AAL_VOICE_SL_DYN_P',
'AAL_DAILY_RESP_P'
)
AND b.device_grouping='Android'
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;




/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
where message_cd in
(
'AAL_GIZMO_WATCH_P'
)
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

'AAL_GIZMO_WATCH_P' AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_wearable_wly_cent AS score_centile,
a.acct_aal_wearable_wly_val AS score_value,
a.acct_aal_wearable_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
	
WHERE	a.message_cd IN ('AAL_WEARABLE_DYN_P', 'AAL_WEARABLE_P')
	
GROUP BY 1,2
	
) b 
ON a.cust_id = b.cust_id
AND a.acct_num = b.acct_num

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
	
WHERE	a.mth_typ = 'C'
AND a.eom_lines = 1
AND a.dev_typ_1 = 'b) Apple SP'
	
GROUP BY 1,2
	
) c 
ON a.cust_id = c.cust_id
AND a.acct_num = c.acct_num

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND a.crm_elig = 'Y' --eligible for outbound campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
AND Coalesce (a.wear_adds_30, 0) = 0 --no wearable adds for 30 days
AND a.acct_pho_lines <= 10 --10 or fewer phones on the acct
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND a.vsn_cust_type_cd IN ('BE','PE') --only target BE or PE
AND a.acct_aal_gizmo_wly_cent >= 71 --high Gizmo propensity
AND Coalesce (a.acct_aal_wearable_wly_orig_val, 0) < 0.45997 --low Wearable propensity
AND b.cust_id IS NULL
--and c.cust_id is null
AND a.dev_typ_1 <> 'b) Apple SP'
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;



/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
where message_cd in
(
'AAL_BYOD_PHONE_SVC_P'
)
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

'AAL_BYOD_PHONE_SVC_TMP_P' AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

/*
inner join ntl_prd_allvm.cust_acct_score_v c
on a.cust_id = c.cust_id
and a.acct_num = c.acct_num
and c.rpt_mth = 1210227
and c.score_model_id = 'AAL_BYOD_WLY'
and c.score_decile >= 7
*/

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
	
WHERE	a.message_cd IN ('AAL_VOICE_P',
'AAL_VOICE_SL_P', 'AAL_VOICE_SL_DYN_P')
	
GROUP BY 1,2
	
) x 
ON a.cust_id = x.cust_id
AND a.acct_num = x.acct_num

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and a.acct_aal_v_wly_orig_val >= 0.08626 --propensity score above threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND message_cd IS NOT NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND x.cust_id IS NULL
AND a.acct_aal_byod_wly_cent >= 61
;

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

'AAL_BYOD_SP_P' AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

/*
inner join ntl_prd_allvm.cust_acct_score_v c
on a.cust_id = c.cust_id
and a.acct_num = c.acct_num
and c.rpt_mth = 1210227
and c.score_model_id = 'AAL_BYOD_WLY'
and c.score_decile >= 7
*/

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
	
WHERE	a.message_cd IN ('AAL_VOICE_P',
'AAL_VOICE_SL_P', 'AAL_VOICE_SL_DYN_P')
	
GROUP BY 1,2
	
) x 
ON a.cust_id = x.cust_id
AND a.acct_num = x.acct_num

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and a.acct_aal_v_wly_orig_val >= 0.08626 --propensity score above threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND message_cd IS NOT NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND x.cust_id IS NOT NULL
AND a.acct_aal_byod_wly_cent >= 71
;




/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

--THIS SECTION INSERTS THE FOUR BOUNCEBACK and  UPG MC'S
--Ipad , Sams Tablet, Apple wear and sams wear
--Q2 2022 -- MM

--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

--UPDATED TAB DYN  (3 OF 3)
CASE 
		
WHEN b.tab_wear_fl='TAB' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('22', '23', '25', '33', '57', '59', '61', '62', '75', '80')  --UPDATED 6/30/25
THEN 'AAL_TAB_P'
WHEN b.tab_wear_fl='TAB' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('00', '01', '02', '03', '04', '05', '06', '07', '08', '09', 
'10', '11', '12', '13', '14', '15', '16', '17', '18', '19', 
'20', '21', '24', '26', '27', '28', '29', '30', '31', '32', 
'34', '35', '36', '37', '38', '39', '40', '41', '42', '43', 
'44', '45', '46', '47', '48', '49', '50', '51', '52', '53', 
'54', '55', '56', '58', '60', '63', '64', '65', '66', '67', 
'68', '69', '70', '71', '72', '73', '74', '76', '77', '78', 
'79', '81', '82', '83', '84', '85', '86', '87', '88', '89', 
'90', '91', '92', '93', '94', '95', '96', '97', '98', '99'
) --UPDATED 6/30/25
THEN 'AAL_TAB_DYN_P'
	 
--UPDATE WEAR DYN  (3 OF 3)
WHEN b.tab_wear_fl='WEAR' 
--AND b.apple_sp_aal>0 
--AND b.andr_sp_aal=0 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('09', '21', '42', '43', '54', '55', '78', '85', '88', '96') --updated 6/30/25
THEN 'AAL_WEARABLE_P'
WHEN b.tab_wear_fl='WEAR' 
--AND b.apple_sp_aal>0 
--AND b.andr_sp_aal=0 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)   IN 
('00', '01', '02', '03', '04', '05', '06', '07', '08', '10', 
'11', '12', '13', '14', '15', '16', '17', '18', '19', '20', 
'22', '23', '24', '25', '26', '27', '28', '29', '30', '31', 
'32', '33', '34', '35', '36', '37', '38', '39', '40', '41', 
'44', '45', '46', '47', '48', '49', '50', '51', '52', '53', 
'56', '57', '58', '59', '60', '61', '62', '63', '64', '65', 
'66', '67', '68', '69', '70', '71', '72', '73', '74', '75', 
'76', '77', '79', '80', '81', '82', '83', '84', '86', '87', 
'89', '90', '91', '92', '93', '94', '95', '97', '98', '99'
)  --updated 6/30/25
THEN 'AAL_WEARABLE_DYN_P'
	
end AS message_cd,
	 
CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

'N' AS pull_thru,


CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,


a.acct_aal_tbl_wly_cent AS score_centile,
a.acct_aal_tbl_wly_val AS score_value,
a.acct_aal_tbl_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
INNER JOIN 

(
SELECT	
	
a.cust_id,
a.acct_num,
b.cust_line_seq_id,
CASE 
WHEN a.acct_aal_tbl_wly_cent >= a.acct_aal_wearable_wly_cent THEN 'TAB'
ELSE 'WEAR' 
end AS tab_wear_fl,
b.apple_sp_aal,
b.andr_sp_aal,
a.device_grouping
--count(*) as lines
FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
	
INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 z
ON a.cust_id=z.cust_id
AND a.acct_num=z.acct_num
AND a.cust_line_seq_id=z.cust_line_seq_id
AND z.primary_line='Y'
	
INNER JOIN 
(
SELECT	a.cust_id,a.acct_num,
b.cust_line_seq_id,
Sum(
CASE 
WHEN eqp_desc='Apple Smartphone' THEN 1 
ELSE 0 end) apple_sp_aal,
Sum(
CASE 
WHEN eqp_desc='Android Smartphone' THEN 1 
ELSE 0 end) AS andr_sp_aal
--count(*) as accts
FROM	ntl_prd_allvm.equip_sum_fact_v a
LEFT JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id=b.cust_id
AND a.acct_num=b.acct_num
AND b.primary_line='Y'
WHERE	a.fin_tot_flag = 'Y'
AND a.net_sales > 0
AND a.pymnt_dt >= DATE - 25
GROUP BY 1,2,3
		
) b
ON a.cust_id = b.cust_id
AND a.acct_num = b.acct_num
	
	
/*
where a.cust_id not in 
(
select distinct cust_id
from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
--where message_cd in ('AAL_TAB_ESP_IOS_P')
where message_cd in ('AAL_TAB_ESP_P','AAL_WEARABLE_ESP_P')
)
	
*/
	
AND a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, second source to be extra safe
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
AND a.past_due_ind = 'N' --no past due
AND a.crm_elig = 'Y' --eligible for crm campaign, excludes certain eleu profiles
AND a.acct_tot_lines < 30 --account has under 30 lines
AND a.line_in_svc_cnt < 30 --account has under 30 lines, second source to be extra safe
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
--and a.acct_aal_tbl_wly_cent >= a.acct_aal_wearable_wly_cent
	
GROUP BY 1,2,3,4,5,6,7
) b
ON a.cust_id=b.cust_id
AND a.acct_num=b.acct_num
AND a.cust_line_seq_id=b.cust_line_seq_id

AND message_cd IS NOT NULL
--qualify row_number () over (partition by a.cust_id, a.acct_num
--order by a.cust_line_seq_id asc) = 1
;






/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--This creates NLOU for 2 voice lines , re-used the old from Dec 2022
--and create apple and android from the main MC

--Edited  by MM 10272023
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

'AAL_NLOU_2_VOICE_P' message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	 hqmkt_prd_qmtbls.knw_message_code_base_1 a

WHERE	a.acct_MM_pho = 2
AND a.Delta_Welcome=10
AND primary_line='Y'
AND a.acct_aal_v_wly_orig_val >=  0.49134
--and a.data_tier in ('basic','smartphone')
--and a.device_grouping in ('apple','android')


AND a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days

;


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE 
WHEN a.device_grouping = 'Apple' THEN 'AAL_NLOU_2_VOICE_IOS_P'
WHEN a.device_grouping = 'Android' THEN 'AAL_NLOU_2_VOICE_ANDR_P'
end AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	 hqmkt_prd_qmtbls.knw_message_code_base_1 a

WHERE	a.acct_MM_pho = 2
AND a.Delta_Welcome=10
AND primary_line='Y'
AND a.acct_aal_v_wly_orig_val >=  0.49134
--and a.data_tier in ('basic','smartphone')
--and a.device_grouping in ('apple','android')


AND a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
    
AND a.device_grouping IN ('Apple','Android')
;


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--end of NLOU 2 phones
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */





/*
--AAL_NEXTLINEONUS_3_P, AAL_NEXTLINEONUS_3_IOS_P, AAL_NEXTLINEONUS_3_ANDR_P
--Added on 6/1/23 by Dhruv Mansukhani 
--Updated on 7/13/23 by Dhruv Mansukhani to fix autopay = yes logic
*/

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE --when 1=1 then 'AAL_NEXTLINEONUS_3_P' 
WHEN device_grouping = 'apple' THEN 'AAL_NEXTLINEONUS_3_IOS_P'
WHEN device_grouping = 'android' THEN 'AAL_NEXTLINEONUS_3_ANDR_P'
end AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
--when a.device_grouping = 'android' then 'Y'
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind


FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

/*
left join ( sel cust_id, acct_num, 
CASE WHEN (p.bill_method_cd IN ('CC','DB','H1','H2')) THEN 'Yes' ELSE 'No' END AS autopay_ind,
count(*) as lines
FROM ntl_prd_allvm.cust_acct_v p
group by 1,2,3
		
) b
on a.cust_id = b.cust_id
and a.acct_num = b.acct_num
*/


WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
AND ( --                                  STANDARD CRITERIA FROM HERE
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)     --                                  STANDARD CRITERIA TO HERE. ONLY CHANGE IF WE ARE TARGETING NON-PHONE LINES

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND a.vsn_cust_type_cd IN ('BE','PE')
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.acct_MM_pho = 3
--and a.Delta_Start = 5
AND a.data_tier IN ('basic','smartphone')
AND a.device_grouping IN ('apple','android')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
--and (a.acct_aal_v_wly_orig_val >= 0.492812 or a.acct_aal_v_wly_cent >= 71)
--and a.acct_in_mkt_wk_cent >= 81

--and a.acct_pho_lines = 3
--and autopay_ind = 'yes'
;



/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

--2-3-4-5 Line account message codes for Dynamic Offers, non-ESP

--Added by JC 040242024, 
--PART 1 of Dynamic Offers:  Dynamic MC

--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

--NEW LOGIC FOR DYNAMIC OFFERS 04082024:  DYNAMIC GROUPS
CASE
WHEN  a.device_grouping='Apple' 
AND OFFER_VALUE = '300' THEN 'AAL_VOICE_IOS_300_DYN_P'
WHEN  a.device_grouping='Android' 
AND OFFER_VALUE = '300' THEN 'AAL_VOICE_ANDR_300_DYN_P'
WHEN  a.device_grouping='Apple' 
AND OFFER_VALUE = '400' THEN 'AAL_VOICE_IOS_400_DYN_P'
WHEN  a.device_grouping='Android' 
AND OFFER_VALUE = '400' THEN 'AAL_VOICE_ANDR_400_DYN_P'
WHEN  a.device_grouping='Apple' 
AND OFFER_VALUE = '500' THEN 'AAL_VOICE_IOS_500_DYN_P'
WHEN  a.device_grouping='Android' 
AND OFFER_VALUE = '500' THEN 'AAL_VOICE_ANDR_500_DYN_P'
WHEN  a.device_grouping='Apple' 
AND OFFER_VALUE = '600' THEN 'AAL_VOICE_IOS_600_DYN_P'
WHEN  a.device_grouping='Android' 
AND OFFER_VALUE = '600' THEN 'AAL_VOICE_ANDR_600_DYN_P'
ELSE NULL 
end AS message_cd,


CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
INNER JOIN udm_prd_tbls.aia_dynamic_offers P
ON A.CUST_ID = P.CUST_ID 
AND A.ACCT_NUM = P.ACCT_NUM --AND A.MTN = P.MTN
AND P.RPT_DT = (
SELECT	Max(RPT_DT) 
FROM	udm_prd_tbls.aia_dynamic_offers 	where LIST_ID = 'dynamic_offer_20230815')  --7/11/25  adding where condition since FWA DYN started-  in case diff rpt_dts
AND P.LIST_ID = 'dynamic_offer_20230815' ---dynamic offer list ID from Sai 04/15/24
AND P.offer_set='AAL_SP_DYN_050924_OS'  --- added by MM 08/20/2024 

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
OR a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND message_cd IS NOT NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
CASE
--WHEN  OFFER_VALUE = '250' THEN 'AAL_WEAR250_DYN_P'
WHEN  OFFER_VALUE = '200' THEN 'AAL_WEAR200_DYN_P'
WHEN  OFFER_VALUE = '150' THEN 'AAL_WEAR150_DYN_P'
WHEN  OFFER_VALUE = '100' THEN 'AAL_WEAR100_DYN_P'
ELSE NULL 
end AS message_cd, 
a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind
FROM 
(--DYN AUD
SELECT CUST_ID, ACCT_NUM, CUST_LINE_SEQ_ID, TRTMNT_CTRL_IND, PULL_THRU, REACTIVE, SCORE_CENTILE, SCORE_VALUE, ORIG_VALUE, ASTER_IND
FROM hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 A
WHERE MESSAGE_CD = 'AAL_WEARABLE_DYN_P'
QUALIFY Row_Number() Over (PARTITION BY A.CUST_ID, A.ACCT_NUM, A.CUST_LINE_SEQ_ID ORDER BY A.CUST_LINE_SEQ_ID) = 1
)A
INNER JOIN udm_prd_tbls.aia_dynamic_offers P
ON A.CUST_ID = P.CUST_ID 
AND A.ACCT_NUM = P.ACCT_NUM --AND A.MTN = P.MTN
AND P.RPT_DT = (
SELECT	Max(RPT_DT) 
FROM	udm_prd_tbls.aia_dynamic_offers where LIST_ID = 'dynamic_offer_20230815')  --7/11/25  adding where condition since FWA DYN started-  in case diff rpt_dts
AND P.LIST_ID = 'dynamic_offer_20230815' ---dynamic offer list ID from Sai 04/15/24
AND P.offer_set IN 
('AAL_APP_WATCH_DYN__080124_OS',
'AAL_SAM_WATCH_DYN__080124_OS')
WHERE MESSAGE_CD IS NOT NULL
;




INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
CASE
WHEN  OFFER_VALUE = '250' THEN 'AAL_TAB250_DYN_P'
WHEN  OFFER_VALUE = '200' THEN 'AAL_TAB200_DYN_P'
WHEN  OFFER_VALUE = '150' THEN 'AAL_TAB150_DYN_P'
WHEN  OFFER_VALUE = '100' THEN 'AAL_TAB100_DYN_P'
ELSE NULL 
end AS message_cd, 
a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind
FROM 
(--DYN AUD
SELECT CUST_ID, ACCT_NUM, CUST_LINE_SEQ_ID, TRTMNT_CTRL_IND, PULL_THRU, REACTIVE, SCORE_CENTILE, SCORE_VALUE, ORIG_VALUE, ASTER_IND
FROM hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 A
WHERE MESSAGE_CD = 'AAL_TAB_DYN_P'
QUALIFY Row_Number() Over (PARTITION BY A.CUST_ID, A.ACCT_NUM, A.CUST_LINE_SEQ_ID ORDER BY A.CUST_LINE_SEQ_ID) = 1
)A
INNER JOIN udm_prd_tbls.aia_dynamic_offers P
ON A.CUST_ID = P.CUST_ID 
AND A.ACCT_NUM = P.ACCT_NUM --AND A.MTN = P.MTN
AND P.RPT_DT = (
SELECT	Max(RPT_DT) 
FROM	udm_prd_tbls.aia_dynamic_offers where LIST_ID = 'dynamic_offer_20230815')  --7/11/25  adding where condition since FWA DYN started-  in case diff rpt_dts
AND P.LIST_ID = 'dynamic_offer_20230815' ---dynamic offer list ID from Sai 04/15/24
AND P.offer_set IN 
('AAL_SAM_TAB_DYN_082924_OS',
'AAL_APP_TAB_DYN_082924_OS')
WHERE MESSAGE_CD IS NOT NULL
;



/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

--NLOU 2-3-4-5 Line account message codes

--Originally Added by MM 12122023, 
--EDITIED FOR DYNAMIC OFFERS BY JC 04092024.  

--CHANGED BAU FROM 80% TO 40%,
--MOVED THE REMAINING 40% TO DYNAMIC MC.  BAU MC NAME REMAINS THE SAME - 
--WILL BE A MISNOMER SINCE NOW WILL REFLECT ONLY 40% OF POPULATION.
--PART 2 of Dynamic Offers:  BAU, CONTROL, and myOffer Dynamic GROUPS

--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,


--NEW LOGIC FOR DYNAMIC OFFERS 04052024:  BAU AND CONTROL GROUPS

--update MULTI VOICE DYN ON 6/30/25 (1 OF 1)
CASE
WHEN  a.acct_MM_pho = 2  
AND a.device_grouping='Apple' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('18', '42', '44', '63', '67', '73', '74', '89', '92', '96') THEN 'AAL_VOICE_IOS_2LINE_80_P'
WHEN  a.acct_MM_pho = 2  
AND a.device_grouping='Android' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('18', '42', '44', '63', '67', '73', '74', '89', '92', '96') THEN 'AAL_VOICE_ANDR_2LINE_80_P'
WHEN  a.acct_MM_pho = 3  
AND a.device_grouping='Apple' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('18', '42', '44', '63', '67', '73', '74', '89', '92', '96') THEN 'AAL_VOICE_IOS_3LINE_P'
WHEN  a.acct_MM_pho = 3  
AND a.device_grouping='Android' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('18', '42', '44', '63', '67', '73', '74', '89', '92', '96') THEN 'AAL_VOICE_ANDR_3LINE_P'
WHEN  a.acct_MM_pho = 4  
AND a.device_grouping='Apple' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('18', '42', '44', '63', '67', '73', '74', '89', '92', '96') THEN 'AAL_VOICE_IOS_4LINE_80_P'
WHEN  a.acct_MM_pho = 4  
AND a.device_grouping='Android' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('18', '42', '44', '63', '67', '73', '74', '89', '92', '96') THEN 'AAL_VOICE_ANDR_4LINE_80_P'
WHEN  a.acct_MM_pho >= 5  
AND a.device_grouping='Apple' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('18', '42', '44', '63', '67', '73', '74', '89', '92', '96') THEN 'AAL_VOICE_IOS_5LINE_80_P'
WHEN  a.acct_MM_pho >= 5  
AND a.device_grouping='Android' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('18', '42', '44', '63', '67', '73', '74', '89', '92', '96') THEN 'AAL_VOICE_ANDR_5LINE_80_P'
	

WHEN  a.device_grouping='Apple' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN
('00', '01', '02', '03', '04', '05', '06', '07', '08', '09', 
'10', '11', '12', '13', '14', '15', '16', '17', '19', '20', 
'21', '22', '23', '24', '25', '26', '27', '28', '29', '30', 
'31', '32', '33', '34', '35', '36', '37', '38', '39', '40', 
'41', '43', '45', '46', '47', '48', '49', '50', '51', '52', 
'53', '54', '55', '56', '57', '58', '59', '60', '61', '62', 
'64', '65', '66', '68', '69', '70', '71', '72', '75', '76', 
'77', '78', '79', '80', '81', '82', '83', '84', '85', '86', 
'87', '88', '90', '91', '93', '94', '95', '97', '98', '99'
) --UPDATED 6/30/25
THEN 'AAL_VOICE_IOS_DYN_P'
WHEN   a.device_grouping='Android' 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN
('00', '01', '02', '03', '04', '05', '06', '07', '08', '09', 
'10', '11', '12', '13', '14', '15', '16', '17', '19', '20', 
'21', '22', '23', '24', '25', '26', '27', '28', '29', '30', 
'31', '32', '33', '34', '35', '36', '37', '38', '39', '40', 
'41', '43', '45', '46', '47', '48', '49', '50', '51', '52', 
'53', '54', '55', '56', '57', '58', '59', '60', '61', '62', 
'64', '65', '66', '68', '69', '70', '71', '72', '75', '76', 
'77', '78', '79', '80', '81', '82', '83', '84', '85', '86', 
'87', '88', '90', '91', '93', '94', '95', '97', '98', '99'
) --UPDATED 6/30/25
THEN 'AAL_VOICE_ANDR_DYN_P'
WHEN  a.acct_pho_lines <> 1   THEN 'AAL_VOICE_LEGACY_P'
ELSE NULL 
end AS message_cd,


CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a


WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
OR a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND message_cd IS NOT NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND a.acct_MM_pho >= 2
;

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--PEGA PILOT VOICE ML MCs - NO OHOG.  FROM BAU COHORT ONLY
--POC: YASEEN SAYANI AND ERICA MARTINEZ

--Added by JC 4/29/25

--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SELECT A.CUST_ID, A.ACCT_NUM, CUST_LINE_SEQ_ID
,CASE WHEN A.MESSAGE_CD = 'AAL_VOICE_IOS_2LINE_80_P' THEN 'AAL_VOICE_IOS_2_PEGA_P'
WHEN A.MESSAGE_CD = 'AAL_VOICE_ANDR_2LINE_80_P' THEN 'AAL_VOICE_ANDR_2_PEGA_P'
WHEN A.MESSAGE_CD = 'AAL_VOICE_IOS_3LINE_P' THEN 'AAL_VOICE_IOS_3_PEGA_P'
WHEN A.MESSAGE_CD = 'AAL_VOICE_ANDR_3LINE_P' THEN 'AAL_VOICE_ANDR_3_PEGA_P'
WHEN A.MESSAGE_CD = 'AAL_VOICE_IOS_4LINE_80_P' THEN 'AAL_VOICE_IOS_4_PEGA_P'
WHEN A.MESSAGE_CD = 'AAL_VOICE_ANDR_4LINE_80_P' THEN 'AAL_VOICE_ANDR_4_PEGA_P'
WHEN A.MESSAGE_CD = 'AAL_VOICE_IOS_5LINE_80_P' THEN 'AAL_VOICE_IOS_5_PEGA_P'
WHEN A.MESSAGE_CD = 'AAL_VOICE_ANDR_5LINE_80_P' THEN 'AAL_VOICE_ANDR_5_PEGA_P'
ELSE NULL END AS MESSAGE_CD
,TRTMNT_CTRL_IND, PULL_THRU, REACTIVE, SCORE_CENTILE, SCORE_VALUE, ORIG_VALUE, ASTER_IND
FROM 	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 A
INNER JOIN
(
SELECT DISTINCT CUST_ID, ACCT_NUM
FROM NTL_PRD_QMTBLS.CRM_CUST_ACCT_NBX_CONTENT
WHERE pilot_grp = 'A'
AND Current_Date BETWEEN eff_dt AND exp_dt

)B ON A.CUST_ID = B.CUST_ID AND A.ACCT_NUM = B.ACCT_NUM
WHERE message_cd IN ('AAL_VOICE_IOS_2LINE_80_P',  'AAL_VOICE_ANDR_2LINE_80_P', 'AAL_VOICE_IOS_3LINE_P', 'AAL_VOICE_ANDR_3LINE_P'
, 'AAL_VOICE_IOS_4LINE_80_P', 'AAL_VOICE_ANDR_4LINE_80_P', 'AAL_VOICE_IOS_5LINE_80_P', 'AAL_VOICE_ANDR_5LINE_80_P')  --BAU ONLY. NO DYN
AND TRTMNT_CTRL_IND IN ('T', 'P')  --EXCL OHOG
;




/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--MULTI-LINE AAL VOICE DYMANIC HISTORY TABLE

--UPDATES THE HISTORY TABLE (NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_HIST) FOR ACCOUNTS THAT HAVE OR HAD A MULTI-LINE DYNAMIC OFFER MCs: 
--('AAL_VOICE_IOS_DYN_P' ,'AAL_VOICE_ANDR_DYN_P') 
--FIRST DATE IN HISTORY_TABLE: 05/02/2024

-- REV0: INITIAL SCRIPT 05/02/24 JC
--REV1: UPDATED FROM TMP TO PERM TABLES 05/24/24 JC
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxXXX */

--STEP 1 - DELETE AND INSERT - GET THE MCs AND CURRENT OFFERS 

/*CREATE SET TABLE NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_CURR ,FALLBACK ,
--NO BEFORE JOURNAL,
--NO AFTER JOURNAL,
--CHECKSUM = DEFAULT,
--DEFAULT MERGEBLOCKRATIO,
--MAP = TD_MAP2
--(
--CUST_ID VARCHAR(9) CHARACTER SET Latin NOT CaseSpecific,
--ACCT_NUM VARCHAR(3) CHARACTER SET Latin NOT CaseSpecific,
--ACCT_MM_PHO INTEGER Compress (0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,15 ,18 ),
--MESSAGE_CD VARCHAR(30) CHARACTER SET Latin NOT CaseSpecific,
--TRTMNT_CTRL_IND CHAR(1) CHARACTER SET Latin NOT CaseSpecific Compress ('C','O','P','T'),
--OFFER_VALUE VARCHAR(10) CHARACTER SET Latin NOT CaseSpecific)
--PRIMARY INDEX (CUST_ID, ACCT_NUM)
--INDEX (MESSAGE_CD)
--;	 */
DELETE 
FROM	NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_CURR ;

INSERT INTO NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_CURR 
SELECT	  A.CUST_ID
,
A.ACCT_NUM
,A.ACCT_MM_PHO
,AAL.MESSAGE_CD
,AAL.TRTMNT_CTRL_IND
,
OV.OFFER_VALUE
FROM
(--A: BASE INFO
SELECT	 DISTINCT CUST_ID,
ACCT_NUM, ACCT_MM_PHO
FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 
)A
INNER JOIN 
(--AAL:  MC LIST
SELECT	CUST_ID,
ACCT_NUM, MESSAGE_CD, TRTMNT_CTRL_IND   
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
WHERE	MESSAGE_CD IN	('AAL_VOICE_IOS_DYN_P' ,
'AAL_VOICE_ANDR_DYN_P')   --DYN Myoffers MCs 
QUALIFY	Row_Number() Over (
PARTITION BY CUST_ID, ACCT_NUM 
ORDER BY MESSAGE_CD DESC) = 1 --IN CASE DUPS, GIVE PREF TO IOS
)AAL
ON A.CUST_ID = AAL.CUST_ID 
AND A.ACCT_NUM = AAL.ACCT_NUM
LEFT OUTER JOIN 
(--OV:  OFFER VALUE
SELECT	CUST_ID,
ACCT_NUM, OFFER_VALUE 
FROM	udm_prd_tbls.aia_dynamic_offers 
WHERE	RPT_DT = (
SELECT	Max(RPT_DT) 
FROM	udm_prd_tbls.aia_dynamic_offers)
AND LIST_ID = 'dynamic_offer_20230815' ---dynamic offer list ID from Sai 04/15/24
QUALIFY	Row_Number() Over (
PARTITION BY CUST_ID, ACCT_NUM 
ORDER BY INSERT_DTTM DESC) = 1
)OV 
ON A.CUST_ID = OV.CUST_ID 
AND A.ACCT_NUM = OV.ACCT_NUM
;

--STEP 2 - GET THE CUSTOMERS WHO NO LONGER HAVE A MULTI-TIER OR DYN MC

/*CREATE SET TABLE NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_NO_MC ,FALLBACK ,
--NO BEFORE JOURNAL,
--NO AFTER JOURNAL,
--CHECKSUM = DEFAULT,
--DEFAULT MERGEBLOCKRATIO,
--MAP = TD_MAP2
--(
--CUST_ID VARCHAR(9) CHARACTER SET Latin NOT CaseSpecific,
--ACCT_NUM VARCHAR(3) CHARACTER SET Latin NOT CaseSpecific,
--ACCT_MM_PHO INTEGER Compress (0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,15 ,18 ),
--MESSAGE_CD VARCHAR(30) CHARACTER SET Latin NOT CaseSpecific,
--TRTMNT_CTRL_IND CHAR(1) CHARACTER SET Latin NOT CaseSpecific Compress ('C','O','P','T'),
--OFFER_VALUE VARCHAR(10) CHARACTER SET Latin NOT CaseSpecific)
--PRIMARY INDEX (CUST_ID, ACCT_NUM)
--INDEX (MESSAGE_CD)
--;*/
DELETE 
FROM	NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_NO_MC;

INSERT INTO NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_NO_MC
SELECT	  A.CUST_ID,
A.ACCT_NUM
,A.ACCT_MM_PHO
,'NONE' AS MESSAGE_CD
,TRTMNT_CTRL_IND
,
NULL AS OFFER_VALUE
FROM
(--A: BASE INFO
SELECT	 DISTINCT CUST_ID,
ACCT_NUM, ACCT_MM_PHO
,
CASE 
WHEN phog = 'Y' THEN 'P' 
WHEN ohog_AAL = 'Y' THEN 'O' 
ELSE 'T' 
end AS trtmnt_ctrl_ind
FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 
)A
INNER JOIN  
(--CUSTOMERS IN HIST TABLE, BUT NO LONGER ASSOCIATED W AN MC THAT WE ARE TRACKING
SELECT	DISTINCT CUST_ID,
ACCT_NUM 
FROM	NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_HIST
MINUS
SELECT	DISTINCT CUST_ID,
ACCT_NUM 
FROM	NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_CURR 
) B
ON A.CUST_ID = B.CUST_ID 
AND A.ACCT_NUM = B.ACCT_NUM
;

--STEP 3 - CREATE AND INSERT RECORDS W ACTION FLAG - PUT IN A TEMP TABLE.  

/*
CREATE SET TABLE NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_FLAG ,FALLBACK ,
NO BEFORE JOURNAL,
NO AFTER JOURNAL,
CHECKSUM = DEFAULT,
DEFAULT MERGEBLOCKRATIO,
MAP = TD_MAP2
(
CUST_ID VARCHAR(9) CHARACTER SET Latin NOT CaseSpecific,
ACCT_NUM VARCHAR(3) CHARACTER SET Latin NOT CaseSpecific,
ACCT_MM_PHO INTEGER Compress (0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,15 ,18 ),
MESSAGE_CD VARCHAR(30) CHARACTER SET Latin NOT CaseSpecific,
TRTMNT_CTRL_IND CHAR(1) CHARACTER SET Latin NOT CaseSpecific Compress ('C','O','P','T'),
OFFER_VALUE VARCHAR(10) CHARACTER SET Latin NOT CaseSpecific,
ACTION_FLAG VARCHAR(1) CHARACTER SET Latin NOT CaseSpecific)
PRIMARY INDEX (CUST_ID, ACCT_NUM)
INDEX (MESSAGE_CD)
; */
DELETE 
FROM	NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_FLAG;
	  
INSERT INTO NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_FLAG
SELECT	C.CUST_ID,
C.ACCT_NUM, C.ACCT_MM_PHO, C.MESSAGE_CD, C.TRTMNT_CTRL_IND, C.OFFER_VALUE
,
CASE 
WHEN H.CUST_ID IS NOT NULL THEN 'U'  --SAME RECORD, UPDATE THE END_DT AND LAST_UPDATED_DT IN THE HIST TABLE
ELSE 'I'  ---SOMETHING CHANGED, INSERT NEW RECORD
END AS ACTION_FLAG 
FROM	
(--MCs AND CUSTs IN HIST TABLE W NO MCs
SELECT	CUST_ID,
ACCT_NUM, ACCT_MM_PHO, MESSAGE_CD, TRTMNT_CTRL_IND, OFFER_VALUE 
FROM	NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_CURR  --TABLE FROM STEP1
UNION 
SELECT	CUST_ID,
ACCT_NUM, ACCT_MM_PHO, MESSAGE_CD, TRTMNT_CTRL_IND, OFFER_VALUE 
FROM	NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_NO_MC --TABLE FROM STEP2
)C
LEFT OUTER JOIN 
(
SELECT	* 
FROM	
NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_HIST H0
QUALIFY	Row_Number() Over (
PARTITION BY H0.CUST_ID, H0.ACCT_NUM 
ORDER BY H0.LAST_UPDATED DESC) = 1 --MOST RECENT RECORD
)H
ON C.CUST_ID = H.CUST_ID 
AND C.ACCT_NUM = H.ACCT_NUM
AND C.ACCT_MM_PHO = H.ACCT_MM_PHO 
AND C.MESSAGE_CD = H.MESSAGE_CD
AND C.TRTMNT_CTRL_IND = H.TRTMNT_CTRL_IND
AND Coalesce(C.OFFER_VALUE,
'-') = Coalesce(H.OFFER_VALUE,'-')
;

--STEP 4 - UPDATE THE HIST TABLE TIMESTAMPS FOR THE RECORDS WITH NO CHANGE

UPDATE H1
FROM	NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_HIST H1,
		
(
SELECT	H.CUST_ID, H.ACCT_NUM, H.ACCT_MM_PHO, H.MESSAGE_CD,
H.TRTMNT_CTRL_IND, H.OFFER_VALUE, H.UPDATE_DT, H.LAST_UPDATED
FROM	NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_HIST H
INNER JOIN NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_FLAG F 
ON H.CUST_ID = F.CUST_ID 
AND H.ACCT_NUM = F.ACCT_NUM
AND H.ACCT_MM_PHO = F.ACCT_MM_PHO 
AND H.MESSAGE_CD = F.MESSAGE_CD
AND H.TRTMNT_CTRL_IND = F.TRTMNT_CTRL_IND
AND Coalesce(H.OFFER_VALUE,
'-') = Coalesce(F.OFFER_VALUE,'-')
AND F.ACTION_FLAG = 'U' --EXISTING RECORD, UPDATE TIMESTAMP
QUALIFY	Row_Number() Over (
PARTITION BY H.CUST_ID, H.ACCT_NUM 
ORDER BY H.LAST_UPDATED DESC) = 1  --MOST RECENT RECORD
)X
SET END_DT = Current_Date,
LAST_UPDATED = Current_Timestamp
WHERE	H1.CUST_ID = X.CUST_ID 
AND H1.ACCT_NUM = X.ACCT_NUM
AND H1.ACCT_MM_PHO = X.ACCT_MM_PHO 
AND H1.MESSAGE_CD = X.MESSAGE_CD
AND H1.TRTMNT_CTRL_IND = X.TRTMNT_CTRL_IND
AND Coalesce(H1.OFFER_VALUE,'-') = Coalesce(X.OFFER_VALUE,'-')
AND H1.LAST_UPDATED = X.LAST_UPDATED
;

--STEP 5 - INSERT NEW RECORDS, DROP TEMP TABLE

INSERT INTO NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_HIST
SELECT	CUST_ID,
ACCT_NUM, ACCT_MM_PHO, MESSAGE_CD, TRTMNT_CTRL_IND, OFFER_VALUE
,
Current_Date AS START_DT
,Current_Date AS END_DT
,Current_Date AS UPDATE_DT
,
Current_Timestamp AS LAST_UPDATED
FROM	NTL_PRD_QMTBLS.AAL_DYN_VOICE_CUST_ACCT_MC_FLAG
WHERE	ACTION_FLAG = 'I'
;

	
--END OF MULTI-LINE AAL VOICE DYMANIC HISTORY TABLE



/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Digital channel prefered  MC
--Added by MM 04032024
--Commented out by DH 12202024
--Added back in JC - 01102025
--Changed to Push only - JC 02042025, removed 2/12
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE 
WHEN device_grouping  IN ('Apple') 
THEN 'AAL_VOICE_IOS_DIGITAL_P'
WHEN device_grouping  IN ('Android')  THEN 'AAL_VOICE_ANDR_DIGITAL_P'
ELSE NULL 
end AS message_cd,




CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
INNER JOIN adbcmp_prd_allvm.customer_profile_univ_cons_v b 

ON a.cust_id = b.cust_id
AND a.acct_num = b.acct_num
AND a.cust_line_seq_id = b.cust_line_seq_id

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
--or a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND message_cd IS NOT NULL
AND last_chan_nm ='b) Online'
AND aal_chan_pref_chan_1= 'b) Online'
--AND B.PUSH_BASE = 'Y'
--AND B.PUSH_ENABLED = 'Y'
--AND B.PUSH_LESS_DNS = 'Y'
;


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Low to Mid Voice Propensity (deciles 1-7)  MC : SL and ML
--Added by JC 04032024
--JC: 07022025 - combined LMIDPROP MCs to this block.  Added LOWPROP
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE 
WHEN device_grouping  IN ('Apple') and a.acct_aal_v_wly_cent BETWEEN 51 AND 70 THEN 'AAL_VOICE_IOS_MIDPROP_P'
WHEN device_grouping  IN ('Android') and a.acct_aal_v_wly_cent BETWEEN 51 AND 70  THEN 'AAL_VOICE_ANDR_MIDPROP_P'
WHEN device_grouping  IN ('Apple') and a.acct_aal_v_wly_cent BETWEEN 31 AND 50 THEN 'AAL_VOICE_IOS_LMIDPROP_P'
WHEN device_grouping  IN ('Android') and a.acct_aal_v_wly_cent BETWEEN 31 AND 50  THEN 'AAL_VOICE_ANDR_LMIDPROP_P'
WHEN device_grouping  IN ('Apple') and a.acct_aal_v_wly_cent BETWEEN 1 AND 30 THEN 'AAL_VCE_IOS_LOWPROP_P'
WHEN device_grouping  IN ('Android') and a.acct_aal_v_wly_cent BETWEEN 1 AND 30  THEN 'AAL_VCE_ANDR_LOWPROP_P'
ELSE NULL 
end AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
--or a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND a.acct_aal_v_wly_orig_val <  0.49134   --not high
AND  a.acct_aal_v_wly_cent BETWEEN 1 AND 70 --not high
AND message_cd IS NOT NULL
;

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--LOW to mid Voice Propensity (deciles 1-7)  MC
--2 and 3 LINE MM accounts
--Added by MM 032425 and updated 03252025 to include MM phones only

--JC: 07022025 - combined Low 2 line MCs to this block.  Added LowMid and Mid Prop 2 and 3 line accts
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE 
WHEN device_grouping  IN ('Apple') and a.acct_aal_v_wly_cent BETWEEN 1 AND 30 and acct_mm_pho = 3 THEN 'AAL_VOICE_IOS_3_LOW_P'
WHEN device_grouping  IN ('Android') and a.acct_aal_v_wly_cent BETWEEN 1 AND 30 and acct_mm_pho = 3 THEN 'AAL_VOICE_ANDR_3_LOW_P'
WHEN device_grouping  IN ('Apple') and a.acct_aal_v_wly_cent BETWEEN 1 AND 30 and acct_mm_pho = 2 THEN 'AAL_VOICE_IOS_2_LOW_P'
WHEN device_grouping  IN ('Android') and a.acct_aal_v_wly_cent BETWEEN 1 AND 30 and acct_mm_pho = 2 THEN 'AAL_VOICE_ANDR_2_LOW_P'
WHEN device_grouping  IN ('Apple') and a.acct_aal_v_wly_cent BETWEEN 31 AND 50 and acct_mm_pho = 3 THEN 'AAL_VCE_IOS_LMIDPROP_3_P'
WHEN device_grouping  IN ('Android') and a.acct_aal_v_wly_cent BETWEEN 31 AND 50 and acct_mm_pho = 3 THEN 'AAL_VCE_ANDR_LMIDPROP_3_P'
WHEN device_grouping  IN ('Apple') and a.acct_aal_v_wly_cent BETWEEN 31 AND 50 and acct_mm_pho = 2 THEN 'AAL_VCE_IOS_LMIDPROP_2_P'
WHEN device_grouping  IN ('Android') and a.acct_aal_v_wly_cent BETWEEN 31 AND 50 and acct_mm_pho = 2 THEN 'AAL_VCE_ANDR_LMIDPROP_2_P'
WHEN device_grouping  IN ('Apple') and a.acct_aal_v_wly_cent BETWEEN 51 AND 70 and acct_mm_pho = 3 THEN 'AAL_VCE_IOS_MIDPROP_3_P'
WHEN device_grouping  IN ('Android') and a.acct_aal_v_wly_cent BETWEEN 51 AND 70 and acct_mm_pho = 3 THEN 'AAL_VCE_ANDR_MIDPROP_3_P'
WHEN device_grouping  IN ('Apple') and a.acct_aal_v_wly_cent BETWEEN 51 AND 70 and acct_mm_pho = 2 THEN 'AAL_VCE_IOS_MIDPROP_2_P'
WHEN device_grouping  IN ('Android') and a.acct_aal_v_wly_cent BETWEEN 51 AND 70 and acct_mm_pho = 2 THEN 'AAL_VCE_ANDR_MIDPROP_2_P'
ELSE NULL 
end AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
--or a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND a.acct_aal_v_wly_orig_val <  0.49134 --not high
AND  a.acct_aal_v_wly_cent BETWEEN 1 AND 70 --not high
AND device_grouping  IN ('Android','Apple')
AND acct_MM_pho in (2, 3) --2 and 3 mm line accts 
AND message_cd IS NOT NULL
;




/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--AAL 3Line LATINO MC
--Added by MM 06282024
--Updated for iOS and Split WEB and IHQ on 07062024
--added Epsilon criteria to the IHQ MC on 11/29/24
--removing 2 lines: 1/10/25 JC
--adding back 2 lines into seperate MC  - JC 1/22/25
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */




INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL 
a.cust_id,
a.acct_num,
a.cust_line_seq_id,


/*CASE
WHEN   Substr (a.cust_id, Length (a.cust_id), 1) IN ('1','2','3','4','5') THEN 'AAL_NLOU_WEB_ENG_IOS_P'
WHEN   Substr (a.cust_id, Length (a.cust_id), 1) IN ('6','7','8','9','0') THEN 'AAL_NLOU_WEB_LAT_IOS_P'

ELSE NULL
end AS message_cd,*/
--'AAL_NLOU_WEB_LAT_IOS_P' AS message_cd,

CASE WHEN acct_MM_pho = 2 THEN 	'AAL_NLOU_2_WEB_LAT_IOS_P'
WHEN acct_MM_pho = 3 THEN 'AAL_NLOU_WEB_LAT_IOS_P' 
ELSE NULL END AS message_cd,

CASE WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE WHEN a.crm_elig = 'N' THEN 'Y' ELSE 'N' end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind
FROM hqmkt_prd_qmtbls.knw_message_code_base_1 a

LEFT JOIN 
(SEL cust_id,acct_num,cust_line_seq_id,mtn, Max(event_dt) event_dt
FROM vzweb_prd_allvm.digital_page_view_vcg_v
WHERE display_chnl_cd IN ('DOTCOM','VZ','VZW','MVA','MOBILEFIRST', 'VZF','VFA') 
AND (page_url LIKE '%espanol%' OR page_url LIKE '%es.verizon%')
AND event_dt > DATE - 30
AND cust_id IS NOT NULL
AND Length(cust_id) <= 9
AND mtn IS NOT NULL
GROUP BY 1,2,3,4

) c
ON a.cust_id = c.cust_id
AND a.acct_num = c.acct_num
AND a.cust_line_seq_id = c.cust_line_seq_id

LEFT JOIN 
(
SEL cust_id, acct_num, cust_line_seq_id, 
LANG_PREF_IND,ETHNICITY_SEGMT, Count(*) lines
FROM NTL_PRD_SECVM.SUBS_SUM_FACT_V a
WHERE a.sor_id = 'V'
AND a.prepaid_ind = 'N'
AND a.line_type_cd IN ('I','W')
AND a.rev_gen_ind = 'Y'
AND a.ending_customers = 1
AND a.rpt_mth = (SEL Max(rpt_mth) FROM NTL_PRD_SECVM.SUBS_SUM_FACT_V
WHERE rpt_mth > Current_Date - 60)
AND a.vz2_segmt_cd IN
('PFSGL00015',
'PFSGL00016',
'PFSGL00017')
AND lang_pref_ind='S'
GROUP BY 1,2,3,4,5

) d
ON a.cust_id = d.cust_id
AND a.acct_num = d.acct_num
AND a.cust_line_seq_id = d.cust_line_seq_id

WHERE a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
/*AND (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
OR a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold*/
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND a.acct_MM_pho IN (2,3) 
--and a.acct_MM_pho = 3
AND device_grouping ='Apple'
AND ( c.cust_id IS NOT NULL 
OR  d.cust_id IS NOT NULL );


--updated 11/29, added Epsilon criteria
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL 
a.cust_id,
a.acct_num,
a.cust_line_seq_id,


/*CASE
WHEN   Substr (a.cust_id, Length (a.cust_id), 1) IN ('1','2','3','4','5') THEN 'AAL_NLOU_IHQ_ENG_IOS_P'
WHEN   Substr (a.cust_id, Length (a.cust_id), 1) IN ('6','7','8','9','0') THEN 'AAL_NLOU_IHQ_LAT_IOS_P'

ELSE NULL
end AS message_cd,*/
		
--'AAL_NLOU_IHQ_LAT_IOS_P' AS message_cd,

CASE WHEN acct_MM_pho = 2 THEN 	'AAL_NLOU_2_IHQ_LAT_IOS_P'
WHEN acct_MM_pho = 3 THEN 'AAL_NLOU_IHQ_LAT_IOS_P' 
ELSE NULL END AS message_cd,

CASE WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE WHEN a.crm_elig = 'N' THEN 'Y' ELSE 'N' end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind
FROM hqmkt_prd_qmtbls.knw_message_code_base_1 a

LEFT JOIN ntl_prd_allvm.crm_cust_acct_line_message_v  b
ON a.cust_id=b.cust_id
AND a.acct_num = b.acct_num
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.curr_prev_ind = 'C'
AND b.message_cd='IHQ_BASE_VIX_SPAN_RSTRCTD_USE'

LEFT JOIN --added 11/29
(--EPSILON SPANISH
SEL c.CUST_ID, C.ACCT_NUM
FROM RCMS_USERV.WKLY_TSPP_DEMOGRAPHICS a 
INNER JOIN crd_prd_tbls.base_address_all_acct b ON a.LOC12 = b.tspp_ext_id AND B.data_source_summ = 'TSPP'
INNER JOIN crd_prd_tbls.base_address_all_acct c                                     -- UPDATED 6/26
ON b.uq_address_sk=c.uq_address_sk AND c.data_source_summ = 'VZW_CUSTOMER'
WHERE A.LANGUAGE_CD = 'S8'
GROUP BY 1,2
)Z ON a.CUST_ID = Z.CUST_ID AND a.ACCT_NUM = Z.ACCT_NUM 

LEFT JOIN 
(
SEL cust_id, acct_num
FROM ADBCMP_PRD_ALLVM.CUSTOMER_PROFILE_UNIV_ALL_V A
WHERE A.DNSST_IND='N'
AND (A.CE_IND='Opt In' OR A.SELECTS_IND='Opt In')
GROUP BY 1,2
) x
ON a.cust_id = x.cust_id
AND a.acct_num = x.acct_num

WHERE a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
/*AND (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
OR a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold*/
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND a.acct_MM_pho IN (2,3) 
--and a.acct_MM_pho = 3
AND device_grouping ='Apple'

AND 
(b.cust_id IS NOT NULL OR z.cust_id IS NOT NULL)
AND x.cust_id IS NOT NULL;

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*/
---AAL LATINO Watch Party

--added JC 2/27/25

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*/

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
CASE WHEN main_message_cd = 'AAL_NLOU_WEB_LAT_IOS_P' THEN 'AAL_NLOU_WEB_LATWP_IOS_P'
WHEN main_message_cd = 'AAL_NLOU_IHQ_LAT_IOS_P' THEN 'AAL_NLOU_IHQ_LATWP_IOS_P'
WHEN main_message_cd = 'AAL_NLOU_2_WEB_LAT_IOS_P' THEN 'AAL_NLOU_2_WEBLATWP_IOS_P'
WHEN main_message_cd = 'AAL_NLOU_2_IHQ_LAT_IOS_P' THEN 'AAL_NLOU_2_IHQLATWP_IOS_P'
ELSE NULL END AS MESSAGE_CD,    
a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind
FROM 
(--A: AUDIENCE FROM AAL_NLOU_WEB_LAT_IOS_P, excluding DNNST
SELECT A.CUST_ID, A.ACCT_NUM, A.CUST_LINE_SEQ_ID, TRTMNT_CTRL_IND, PULL_THRU, REACTIVE, SCORE_CENTILE, SCORE_VALUE, ORIG_VALUE, ASTER_IND, B.ZIP5_CD
,a.message_cd AS main_message_cd
FROM hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 A
INNER JOIN ADBCMP_PRD_ALLVM.CUSTOMER_PROFILE_UNIV_ALL_V B 
ON A.CUST_ID = B.CUST_ID AND A.ACCT_NUM = B.ACCT_NUM AND A.CUST_LINE_SEQ_ID = B.CUST_LINE_SEQ_ID 
WHERE A.MESSAGE_CD IN ('AAL_NLOU_WEB_LAT_IOS_P', 'AAL_NLOU_2_WEB_LAT_IOS_P', 'AAL_NLOU_2_IHQ_LAT_IOS_P', 'AAL_NLOU_IHQ_LAT_IOS_P' )
AND B.DNSST_IND = 'N'
)A
INNER JOIN 
(--WP ZIPS
SELECT zip5_cd 
FROM ntl_prd_qmtbls.ACQ_PROMO_GEO_LIST
WHERE promo = 'AAL LATINO WATCH PARTY'
AND Current_Date BETWEEN eff_dt AND exp_dt
)B ON A.ZIP5_CD = B.ZIP5_CD
WHERE message_cd IS NOT NULL
;





/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--SL Retail channel MC 
--MM 09202024
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE WHEN  Substr (a.cust_id, Length (a.cust_id)-1 , 2)  IN
('00','01','03','04','08','12','13','14','15','17','18','21','28','31',
'32','33','34','37','41','43','45','47','51','52','53','58','59','60',
'61','62','67','70','76','78','80','81','82','83','84','85','87','88',
'89','91','94','95','96','97','98','99'
) THEN 'AAL_SL_RET_RET_P'
WHEN  Substr (a.cust_id, Length (a.cust_id)-1 , 2)  IN
('02','05','06','07','09','10','11','16','19','20','22','23','24','25',
'26','27','29','30','35','36','38','39','40','42','44','46','48','49',
'50','54','55','56','57','63','64','65','66','68','69','71','72','73',
'74','75','77','79','86','90','92','93'
) THEN 'AAL_SL_RET_DIG_P'
ELSE NULL
end
AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM    hqmkt_prd_qmtbls.knw_message_code_base_1 a

LEFT JOIN
(
SEL a.*
FROM
(SEL a.*,
Row_Number() Over (PARTITION BY a.cust_id
ORDER BY a.score_decile  DESC) 
AS ranked
FROM
(
SELECT cust_id, acct_num, lvl_txt, Max(score_decile) score_decile

FROM udm_prdusr_tbls.score_wless_multi_line
WHERE score_model_id = 'DIR_CHNL_PREF_AAL'
AND rpt_dt =(
SELECT Max(rpt_dt)
FROM udm_prdusr_tbls.score_wless_multi_line
WHERE score_model_id = 'DIR_CHNL_PREF_AAL'
AND rpt_dt > Current_Date - 60
) 
GROUP BY 1,2,3
--order by 1, 4 desc
/* group by 1 
order by 1;*/
) a
) a
WHERE ranked=1
AND lvl_txt IN ('retail','internet')
) b
ON a.cust_id = b.cust_id
AND a.acct_num = b.acct_num

WHERE   a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
OR a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND a.acct_pho_lines = 1
AND b.cust_id IS NOT NULL
AND em_elig ='Y'
AND message_cd IS NOT NULL
;

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--SL DYNAMIC MC VOICE

--added by MM 10182024
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

--NEW LOGIC FOR DYNAMIC OFFERS 04082024:  DYNAMIC GROUPS
--null as message_cd,
		
		
CASE
WHEN  a.device_grouping='APPLE' AND OFFER_VALUE = '630' THEN 'AAL_VCE_SL_DYN630_IOS_P'
WHEN  a.device_grouping='APPLE' AND OFFER_VALUE = '730' THEN 'AAL_VCE_SL_DYN730_IOS_P'
WHEN  a.device_grouping='APPLE' AND OFFER_VALUE = '830' THEN 'AAL_VCE_SL_DYN830_IOS_P'
WHEN  a.device_grouping='APPLE' AND OFFER_VALUE = '930' THEN 'AAL_VCE_SL_DYN930_IOS_P'
WHEN  a.device_grouping='APPLE' AND OFFER_VALUE = '1030' THEN 'AAL_VCE_SL_DYN1030_IOS_P'
			
WHEN  a.device_grouping='ANDROID' AND OFFER_VALUE = '600' THEN 'AAL_VCE_SL_DYN600_ANDR_P'
WHEN  a.device_grouping='ANDROID' AND OFFER_VALUE = '700' THEN 'AAL_VCE_SL_DYN700_ANDR_P'
WHEN  a.device_grouping='ANDROID' AND OFFER_VALUE = '800' THEN 'AAL_VCE_SL_DYN800_ANDR_P'
WHEN  a.device_grouping='ANDROID' AND OFFER_VALUE = '900' THEN 'AAL_VCE_SL_DYN900_ANDR_P'
WHEN  a.device_grouping='ANDROID' AND OFFER_VALUE = '1000' THEN 'AAL_VCE_SL_DYN1K_ANDR_P'
			
ELSE NULL 
end AS message_cd,


CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

INNER JOIN hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 b
ON a.cust_id = b.cust_id
AND a.acct_num = b.acct_num
AND a.cust_line_seq_id = b.cust_line_seq_id 
AND b.message_cd IN ('AAL_VOICE_SL_DYN_P')
INNER JOIN udm_prd_tbls.aia_dynamic_offers P
ON A.CUST_ID = P.CUST_ID 
AND A.ACCT_NUM = P.ACCT_NUM --AND A.MTN = P.MTN
AND P.RPT_DT = (
SELECT	Max(RPT_DT) 
FROM	udm_prd_tbls.aia_dynamic_offers where LIST_ID = 'dynamic_offer_20230815')  --7/11/25  adding where condition since FWA DYN started-  in case diff rpt_dts
AND P.LIST_ID = 'dynamic_offer_20230815' ---dynamic offer list ID from Sai 04/15/24
AND P.offer_set IN 
('AAL_SL_DYN_APL_102224_OS',
--'AAL_SL_DYN_SAM_102224_OS'
'AAL_SL_DYN_SAM_020625_OS'
)


WHERE 	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
--AND a.primary_line = 'Y' --only need one line per acct for add-a-line
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND message_cd IS NOT NULL

;

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--AAL WATCH RECONNECT  MC; SMS ONLY
--Added by JC 02122025
--ACQ00069

--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */
/*
CREATE SET TABLE NTL_PRD_QMTBLS.AAL_WEAR_DISCO ,FALLBACK ,
NO BEFORE JOURNAL,
NO AFTER JOURNAL,
CHECKSUM = DEFAULT,
DEFAULT MERGEBLOCKRATIO,
MAP = TD_MAP2
(
CUST_ID VARCHAR(9) CHARACTER SET Latin NOT CaseSpecific,
ACCT_NUM VARCHAR(3) CHARACTER SET Latin NOT CaseSpecific,
LAST_WEAR_VOL_DISCO_DT DATE FORMAT 'YYYY-MM-DD',
WEAR_DISCO_MTH_PREM_FLAG VARCHAR(1) CHARACTER SET Unicode NOT CaseSpecific,
LAST_WEAR_AAL_DT DATE FORMAT 'YYYY-MM-DD',
WEAR_AAL_AFTER_DISCO_FLAG VARCHAR(1) CHARACTER SET Unicode NOT CaseSpecific,
DAYS_SINCE_WEAR_DISCO INTEGER,
DAYS_SINCE_WEAR_AAL INTEGER
)  
PRIMARY INDEX (CUST_ID, ACCT_NUM)
;	*/

--DISCO DATA

DELETE FROM	NTL_PRD_QMTBLS.AAL_WEAR_DISCO ;


INSERT INTO NTL_PRD_QMTBLS.AAL_WEAR_DISCO 
SELECT X.CUST_ID, X.ACCt_NUM, LAST_WEAR_VOL_DISCO_DT
,CASE WHEN WEAR_DISCO_MTH_PREM_FLAG_NUM IS NULL AND WEAR_DISCO_RPT_MTH = Td_Month_Begin(Current_Date) THEN 'Y' --FROM BASE - BASE ALL ONLY PREM
WHEN WEAR_DISCO_MTH_PREM_FLAG_NUM = 1 THEN 'Y' ELSE 'N' END AS WEAR_DISCO_MTH_PREM_FLAG
,LAST_WEAR_AAL_DT
,CASE WHEN LAST_WEAR_AAL_DT IS NULL OR LAST_WEAR_AAL_DT < LAST_WEAR_VOL_DISCO_DT THEN 'N' ELSE 'Y' END AS WEAR_AAL_AFTER_DISCO_FLAG
,CASE WHEN LAST_WEAR_VOL_DISCO_DT IS NULL THEN NULL ELSE Current_Date - LAST_WEAR_VOL_DISCO_DT END AS DAYS_SINCE_WEAR_DISCO
,CASE WHEN LAST_WEAR_AAL_DT IS NULL THEN NULL ELSE Current_Date - LAST_WEAR_AAL_DT END AS DAYS_SINCE_WEAR_AAL
FROM
(--X
SELECT A.*
,Max(CASE WHEN E.SSF_pplan_sub_type_desc IS NULL THEN NULL
WHEN E.SSF_pplan_sub_type_desc IN
('Do Unlimited', 'Get Unlimited','Play Unlimited'
,'Do Unlimited 3.0', 'Get Unlimited 3.0','Play Unlimited 3.0'
,'Do Unlimited 4.0','Get Unlimited 4.0','Play Unlimited 4.0'
,'One Unlimited','Unlimited Plus','Unlimited Ultimate') THEN 1 ELSE 0 end) AS WEAR_DISCO_MTH_PREM_FLAG_NUM
FROM
(--A
SELECT A.CUST_ID, A.ACCT_NUM, A.ACTIVITY_DT AS LAST_WEAR_VOL_DISCO_DT
,Td_Month_Begin(LAST_WEAR_VOL_DISCO_DT) AS WEAR_DISCO_RPT_MTH
FROM udm_prdusr_allvm.crmbi_trans_20_v a
INNER JOIN udm_prd_tbls.device_dp_map C ON A.PROD_NM = C.PROD_NM 
WHERE activity_dt >= Current_Date - 365  --past 1 year
AND trans_grp IN ('vol') --added invol
AND a.consumer_20 IN ('Consumer')
AND C.DEVICE_GROUPING = 'Wearable Devices' 
AND C.device_brand_nm NOT LIKE '%GIZMO%' 
AND C.device_brand_nm NOT LIKE '%CARE%SMART%'
QUALIFY Row_Number() Over (PARTITION BY A.CUST_ID, A.ACCT_NUM ORDER BY ACTIVITY_DT DESC) = 1 --LAST DISCO DATE
)A
LEFT JOIN HQMKT_PRD_QMTBLS.knw_cons_base_1 E ON E.SSF_CUST_ID = A.CUST_ID AND E.SSF_ACCT_NUM = A.ACCT_NUM AND E.SSF_RPT_MTH = WEAR_DISCO_RPT_MTH AND WEAR_DISCO_RPT_MTH IS NOT NULL 
GROUP BY 1,2,3,4
)X
LEFT JOIN
(--WEAR AALS
SELECT CUST_ID, ACCT_NUM, Max(ACTIVITY_DT) AS LAST_WEAR_AAL_DT
FROM
(--WA
SEL cust_id, acct_num, activity_dt 
, Sum(wear_adds) AS WEAR_adds
FROM hqmkt_prd_qmtbls.knw_aal_4 a
WHERE  activity_dt >= Current_Date - 365
AND acct_typ ='AAL'
GROUP BY 1,2,3
HAVING Sum(wear_adds) > 0
)WA 
GROUP BY 1,2
)W ON X.CUST_ID = W.CUST_ID AND X.ACCT_NUM = W.ACCT_NUM 
;
 
--MC

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SELECT A.CUST_ID, A.ACCT_NUM, A.CUST_LINE_SEQ_ID
,CASE WHEN MC_IOS = 'IOS' THEN 'AAL_WEAR_DISCO_PREM_IOS_P'
ELSE 'AAL_WEAR_DISCO_PREM_ANDR_P' END AS MESSAGE_CD
,TRTMNT_CTRL_IND
,'N' AS pull_thru
,REACTIVE
,a.acct_aal_wearable_wly_cent AS score_centile
,a.acct_aal_wearable_wly_val AS score_value
,a.acct_aal_wearable_wly_orig_val AS orig_value
,'N' AS aster_ind
FROM
(--A
SELECT a.CUST_ID, A.ACCT_NUM
, 		CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_UPGRADE = 'Y' THEN 'O'
WHEN a.ohog_AAL = 'Y' THEN 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind
, acct_pho_lines
,CASE WHEN ACCT_PHO_LINES = 1 THEN 'SL' WHEN ACCT_PHO_LINES > 1 THEN 'ML' ELSE NULL END AS ACCT_PHO_LINES_GRP
, acct_wearable_lines
,Max(CASE WHEN PRIMARY_LINE = 'Y' THEN 	(CASE WHEN a.crm_elig = 'N' THEN 'Y' ELSE 'N' end) ELSE NULL END) AS reactive
,Max(CASE WHEN primary_line = 'Y' THEN cust_line_seq_id ELSE NULL end) AS cust_line_seq_id	
,Max(CASE WHEN primary_line = 'Y' THEN (CASE WHEN (a.acct_aal_wearable_wly_orig_val >= 0.45997 OR a.acct_aal_wearable_wly_cent >= 71) THEN 'HIGH' ELSE 'NOT HIGH' END) ELSE NULL END) AS WEAR_PROP
,Max(CASE WHEN PRIMARY_LINE = 'Y' AND DEVICE_GROUPING = 'APPLE' THEN 'IOS' 
WHEN PRIMARY_LINE = 'Y' AND DEVICE_GROUPING <> 'APPLE' THEN 'ANDR' 
ELSE NULL END) AS MC_IOS	
,Max(CASE WHEN line_plan_unl_prem = 'Y' THEN 1 ELSE 0 END) AS CURR_MTH_PREM_FLAG
,Max(CASE WHEN PRIMARY_LINE = 'Y' THEN a.acct_aal_wearable_wly_cent ELSE NULL END) AS acct_aal_wearable_wly_cent
,Max(CASE WHEN PRIMARY_LINE = 'Y' THEN a.acct_aal_wearable_wly_val ELSE NULL END) AS acct_aal_wearable_wly_val
,Max(CASE WHEN PRIMARY_LINE = 'Y' THEN a.acct_aal_wearable_wly_orig_val ELSE NULL END) AS acct_aal_wearable_wly_orig_val
FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
--AND a.primary_line = 'Y' --only need one line per acct for add-a-line
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure

/* ****removing propensity from base ******/
/*	AND (a.acct_aal_wearable_wly_orig_val >= 0.45997 --propensity score above threshold
OR a.acct_aal_wearable_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold*/
		
AND Coalesce (a.wear_adds_30, 0) = 0 --account not added a wearable line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND acct_pho_lines >= 1  --AT LEAST 1 PHONE LINE
GROUP BY 1,2,3,4,5,6
)A
INNER JOIN NTL_PRD_QMTBLS.AAL_WEAR_DISCO B ON A.CUST_ID = B.CUST_ID AND A.ACCT_NUM = B.ACCT_NUM
INNER JOIN ADBCMP_PRD_ALLVM.CUSTOMER_PROFILE_UNIV_ALL_V P ON A.CUST_ID = P.CUST_ID AND A.ACCT_NUM = P.ACCT_NUM AND A.CUST_LINE_SEQ_ID = P.CUST_LINE_SEQ_ID
WHERE WEAR_DISCO_MTH_PREM_FLAG = 'N'
AND WEAR_AAL_AFTER_DISCO_FLAG = 'N'
AND CURR_MTH_PREM_FLAG = 1 --1: YES
AND (ACCT_PHO_LINES_GRP = 'ML' OR (ACCT_PHO_LINES_GRP = 'SL' AND ACCT_WEARABLE_LINES > 0))
AND SMS_BASE = 'Y'  --SMS ONLY PROMO
AND SMS_SPRSS_IND = 'N'
;


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--AAL WATCH - GOOGLE 50% OFF 
--Added by JC 02282025
--ACQ00133

--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SELECT A.CUST_ID, A.ACCT_NUM, A.CUST_LINE_SEQ_ID
,'AAL_WEAR_GOOG_50_OFF_P' AS MESSAGE_CD
,CASE WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' end AS trtmnt_ctrl_ind
,'N' AS pull_thru
,CASE WHEN a.crm_elig = 'N' THEN 'Y' ELSE 'N' end AS reactive
,a.acct_aal_wearable_wly_cent AS score_centile
,a.acct_aal_wearable_wly_val AS score_value
,a.acct_aal_wearable_wly_orig_val AS orig_value
,'N' AS aster_ind
FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
INNER JOIN 
(--AUDIENCE W TARGET CRITERIA
SELECT SP.cust_id, SP.acct_num
FROM
(--purchase or upgrade of google sp on or after 1/1/25
SELECT  DISTINCT cust_id, acct_num
FROM hqmkt_prd_qmtbls.knw_message_code_base_1 a
WHERE data_tier = 'Smartphone'
AND mfg_nm = 'GOOGLE'
AND (line_act_dt >= 1250101 OR max_upg_dt >= 1250101)
)SP
LEFT OUTER JOIN 
(--suppress accts w google wear devices
SELECT DISTINCT cust_id, acct_num  --136125
FROM hqmkt_prd_qmtbls.knw_message_code_base_1 
WHERE device_grouping = 'Wearable Devices'
AND mfg_nm = 'GOOGLE'
)W ON SP.CUST_ID = W.CUST_ID AND SP.ACCT_NUM = W.ACCT_NUM
LEFT OUTER JOIN 
(--suppress wear_disco mcs
SELECT DISTINCT CUST_ID, ACCT_NUM
FROM hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
WHERE MESSAGE_CD IN ('AAL_WEAR_DISCO_PREM_IOS_P', 'AAL_WEAR_DISCO_PREM_ANDR_P')
)MC ON SP.CUST_ID = MC.CUST_ID AND SP.ACCT_NUM = MC.ACCT_NUM
WHERE W.CUST_ID IS NULL --EXCL ACCTS W GOOGLE WATCHES
AND MC.CUST_ID IS NULL --EXCL ACCTS IN DISCO PREM MC
) b ON a.cust_id = b.cust_id AND a.acct_num = b.acct_num
WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
--AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period   --acct can be new or AAL
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure

/* ****removing propensity from base ******/
/*	AND (a.acct_aal_wearable_wly_orig_val >= 0.45997 --propensity score above threshold
OR a.acct_aal_wearable_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold*/
		
AND Coalesce (a.wear_adds_30, 0) = 0 --account not added a wearable line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--AAL WATCH 50% OFF 
--Added by JC 031325
--ACQ00060

--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

CREATE VOLATILE TABLE AAL_ACQ60_WEAR_AAL_BASE AS (
SELECT a.CUST_ID, A.ACCT_NUM
,Max(CASE WHEN a.acct_estb_dt < DATE - 60 THEN 'N' ELSE 'Y' END) AS NEW_ACCT_FLAG
,Max(CASE WHEN line_plan_unl_prem = 'Y' THEN 1 ELSE 0 END) AS CURR_MTH_PREM_FLAG
,Max(CASE WHEN DATA_TIER = 'Smartphone' AND line_plan_unl_prem = 'Y' THEN 1 ELSE 0 end) AS CURR_MTH_PREM_SP_FLAG
,Max(CASE WHEN DATA_TIER = 'Smartphone' THEN max_upg_dt ELSE NULL end) AS LAST_SP_UPG_DT
,Max(CASE WHEN DATA_TIER = 'Smartphone' THEN LINE_ACT_DT ELSE NULL end) AS LAST_SP_ACT_DT
,Td_Month_Begin(Add_Months(LAST_SP_UPG_DT, -1)) AS PREV_SP_UPG_RPT_MTH
,Td_Month_Begin(LAST_SP_UPG_DT) AS SP_UPG_RPT_MTH
FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
--AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
--AND a.primary_line = 'Y' --only need one line per acct for add-a-line
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure		
AND Coalesce (a.wear_adds_30, 0) = 0 --account not added a wearable line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND ACCT_WEARABLE_LINES= 0 --NO WEARABLES
GROUP BY 1,2
HAVING CURR_MTH_PREM_FLAG = 1 --CURRENT AT LEAST 1 LINE ON PREM
)WITH DATA PRIMARY INDEX (CUST_ID, ACCT_NUM) ON COMMIT PRESERVE ROWS
;

SELECT Count(*), Count(DISTINCT CUST_ID||'-'||ACCT_NUM) FROM AAL_ACQ60_WEAR_AAL_BASE;

CREATE VOLATILE TABLE AAL_ACQ60_WEAR_AAL_BASE_1 AS (
SELECT A.*
,Max(CASE WHEN B.SSF_pplan_sub_type_desc IS NULL THEN NULL
WHEN B.SSF_pplan_sub_type_desc IN
('Do Unlimited', 'Get Unlimited','Play Unlimited'
,'Do Unlimited 3.0', 'Get Unlimited 3.0','Play Unlimited 3.0'
,'Do Unlimited 4.0','Get Unlimited 4.0','Play Unlimited 4.0'
,'One Unlimited','Unlimited Plus','Unlimited Ultimate') THEN 1 ELSE 0 end) AS PREV_SP_UPG_MTH_PREM_FLAG_num
,CASE WHEN PREV_SP_UPG_MTH_PREM_FLAG_num IS NULL THEN NULL WHEN PREV_SP_UPG_MTH_PREM_FLAG_num = 1 THEN 'Y' ELSE 'N' END AS PREV_SP_UPG_MTH_PREM_FLAG
,Max(CASE WHEN C.SSF_pplan_sub_type_desc IS NULL THEN NULL
WHEN C.SSF_pplan_sub_type_desc IN
('Do Unlimited', 'Get Unlimited','Play Unlimited'
,'Do Unlimited 3.0', 'Get Unlimited 3.0','Play Unlimited 3.0'
,'Do Unlimited 4.0','Get Unlimited 4.0','Play Unlimited 4.0'
,'One Unlimited','Unlimited Plus','Unlimited Ultimate') THEN 1 ELSE 0 end) AS UPG_MTH_PREM_FLAG_num
,CASE WHEN UPG_MTH_PREM_FLAG_num IS NULL THEN NULL WHEN UPG_MTH_PREM_FLAG_num = 1 THEN 'Y' ELSE 'N' END AS UPG_MTH_PREM_FLAG
,Max(CASE WHEN D.SSF_pplan_sub_type_desc IS NULL THEN NULL
WHEN D.SSF_pplan_sub_type_desc IN
('Do Unlimited', 'Get Unlimited','Play Unlimited'
,'Do Unlimited 3.0', 'Get Unlimited 3.0','Play Unlimited 3.0'
,'Do Unlimited 4.0','Get Unlimited 4.0','Play Unlimited 4.0'
,'One Unlimited','Unlimited Plus','Unlimited Ultimate') THEN 1 ELSE 0 end) AS PREV_ACCT_PREM_FLAG_num
,CASE WHEN PREV_ACCT_PREM_FLAG_num IS NULL THEN NULL WHEN PREV_ACCT_PREM_FLAG_num = 1 THEN 'Y' ELSE 'N' END AS PREV_ACCT_MTH_PREM_FLAG
FROM AAL_ACQ60_WEAR_AAL_BASE A
LEFT JOIN HQMKT_PRD_QMTBLS.knw_cons_base_1 B ON B.SSF_CUST_ID = A.CUST_ID AND B.SSF_ACCT_NUM = A.ACCT_NUM AND B.SSF_RPT_MTH = A.PREV_SP_UPG_RPT_MTH AND b.SSF_DATA_TIER = 'Smartphone' AND PREV_SP_UPG_RPT_MTH IS NOT NULL AND NEW_ACCT_FLAG = 'N'
LEFT JOIN HQMKT_PRD_QMTBLS.knw_cons_base_1 C ON C.SSF_CUST_ID = A.CUST_ID AND C.SSF_ACCT_NUM = A.ACCT_NUM AND C.SSF_RPT_MTH = A.SP_UPG_RPT_MTH AND C.SSF_DATA_TIER = 'Smartphone' AND SP_UPG_RPT_MTH IS NOT NULL AND NEW_ACCT_FLAG = 'N'
LEFT JOIN HQMKT_PRD_QMTBLS.knw_cons_base_1 D ON D.SSF_CUST_ID = A.CUST_ID AND D.SSF_ACCT_NUM = A.ACCT_NUM AND D.SSF_RPT_MTH = Td_Month_Begin(Add_Months(Current_Date, -1)) AND NEW_ACCT_FLAG = 'N'
GROUP BY 1,2,3,4,5,6,7,8,9
)WITH DATA PRIMARY INDEX (CUST_ID, ACCT_NUM) ON COMMIT PRESERVE ROWS
;

SELECT Count(*), Count(DISTINCT CUST_ID||'-'||ACCT_NUM) FROM AAL_ACQ60_WEAR_AAL_BASE_1;

--most recent SP AAL
CREATE VOLATILE TABLE AAL_ACQ60_SP_AALS  AS (
SEL A.cust_id, A.acct_num
, Max(CASE WHEN SP_ADDS > 0 THEN activity_dt ELSE NULL END) AS last_sp_aal_dt
, Max(CASE WHEN WEAR_ADDS > 0 THEN activity_dt ELSE NULL END) AS last_WEAR_aal_dt
,Td_Month_Begin(Add_Months(last_sp_aal_dt, -1)) AS PREV_AAL_RPT_MTH
,Td_Month_Begin(last_sp_aal_dt) AS AAL_RPT_MTH
FROM hqmkt_prd_qmtbls.knw_aal_4_line A
INNER JOIN (SELECT DISTINCT CUST_ID, ACCT_NUM FROM AAL_ACQ60_WEAR_AAL_BASE_1)B ON A.CUST_ID = B.CUST_ID AND A.ACCT_NUM = B.ACCT_NUM
WHERE  activity_dt >= 1240101
AND acct_typ ='AAL'
--AND sp_adds > 0
GROUP BY 1,2
HAVING Max(CASE WHEN SP_ADDS > 0 THEN activity_dt ELSE NULL END) IS NOT NULL
)WITH DATA PRIMARY INDEX (CUST_ID, ACCT_NUM) ON COMMIT PRESERVE ROWS
;
	
SELECT Count(*) FROM  AAL_ACQ60_SP_AALS  ;	
	
CREATE VOLATILE TABLE AAL_ACQ60_SP_AALS_1  AS (
SELECT a.cust_id, a.acct_num, a.last_sp_aal_dt, last_WEAR_aal_dt
,a.PREV_AAL_RPT_MTH
,a.AAL_RPT_MTH
,Max(CASE WHEN B.SSF_pplan_sub_type_desc IN
('Do Unlimited', 'Get Unlimited','Play Unlimited'
,'Do Unlimited 3.0', 'Get Unlimited 3.0','Play Unlimited 3.0'
,'Do Unlimited 4.0','Get Unlimited 4.0','Play Unlimited 4.0'
,'One Unlimited','Unlimited Plus','Unlimited Ultimate') THEN 1 ELSE 0 end) AS PREV_AAL_MTH_PREM_FLAG_num
,CASE WHEN PREV_AAL_MTH_PREM_FLAG_num = 1 THEN 'Y' ELSE 'N' END AS PREV_AAL_MTH_PREM_FLAG
,Max(CASE WHEN C.SSF_pplan_sub_type_desc IN
('Do Unlimited', 'Get Unlimited','Play Unlimited'
,'Do Unlimited 3.0', 'Get Unlimited 3.0','Play Unlimited 3.0'
,'Do Unlimited 4.0','Get Unlimited 4.0','Play Unlimited 4.0'
,'One Unlimited','Unlimited Plus','Unlimited Ultimate') THEN 1 ELSE 0 end) AS AAL_MTH_PREM_FLAG_num
,CASE WHEN AAL_MTH_PREM_FLAG_num = 1 THEN 'Y' ELSE 'N' END AS AAL_MTH_PREM_FLAG
FROM AAL_ACQ60_SP_AALS  A
LEFT JOIN HQMKT_PRD_QMTBLS.knw_cons_base_1 B ON B.SSF_CUST_ID = A.CUST_ID AND B.SSF_ACCT_NUM = A.ACCT_NUM AND B.SSF_RPT_MTH = A.PREV_AAL_RPT_MTH AND b.SSF_DATA_TIER = 'Smartphone'
LEFT JOIN HQMKT_PRD_QMTBLS.knw_cons_base_1 C ON C.SSF_CUST_ID = A.CUST_ID AND C.SSF_ACCT_NUM = A.ACCT_NUM AND C.SSF_RPT_MTH = A.AAL_RPT_MTH AND C.SSF_DATA_TIER = 'Smartphone'
GROUP BY 1,2,3,4,5,6
)WITH DATA PRIMARY INDEX (CUST_ID, ACCT_NUM) ON COMMIT PRESERVE ROWS
;

SELECT Count(*) FROM AAL_ACQ60_SP_AALS_1;

CREATE VOLATILE TABLE AAL_ACQ60_AUD  AS (
SELECT A.CUST_ID, A.ACCT_NUM
, B.LAST_SP_AAL_DT
,last_WEAR_aal_dt
,LAST_SP_UPG_DT, LAST_SP_ACT_DT
, PREV_AAL_MTH_PREM_FLAG,  AAL_MTH_PREM_FLAG
, PREV_SP_UPG_MTH_PREM_FLAG, UPG_MTH_PREM_FLAG
, PREV_ACCT_MTH_PREM_FLAG
,CASE WHEN CURR_MTH_PREM_FLAG = 1 THEN 'Y' ELSE 'N' END AS CURR_ACCT_MTH_PREM_FLAG
,CASE WHEN CURR_MTH_PREM_SP_FLAG = 1 THEN 'Y' ELSE 'N' END AS CURR_MTH_PREM_SP_FLAG
,CASE WHEN LAST_SP_AAL_DT IS NULL THEN NULL ELSE Current_Date - LAST_SP_AAL_DT END AS DAYS_SINCE_LAST_SP_AAL
,CASE WHEN LAST_SP_UPG_DT IS NULL THEN NULL ELSE Current_Date - LAST_SP_UPG_DT END AS DAYS_SINCE_LAST_SP_UPG
,NEW_ACCT_FLAG	
,CASE WHEN (CASE WHEN PREV_AAL_MTH_PREM_FLAG IS NULL OR AAL_MTH_PREM_FLAG IS NULL THEN 'N' 
WHEN PREV_AAL_MTH_PREM_FLAG = 'N' AND AAL_MTH_PREM_FLAG = 'Y' THEN 'Y'
ELSE 'N' END) = 'Y'
AND DAYS_SINCE_LAST_SP_AAL IS NOT NULL AND DAYS_SINCE_LAST_SP_AAL <=365 AND  CURR_ACCT_MTH_PREM_FLAG = 'Y'  THEN 'Y' ELSE 'N' END AS SP_AAL_360_DAYS_CURR_PREM
,CASE WHEN (CASE WHEN PREV_SP_UPG_MTH_PREM_FLAG IS NULL OR UPG_MTH_PREM_FLAG IS NULL THEN 'N' 
WHEN PREV_SP_UPG_MTH_PREM_FLAG = 'N' AND UPG_MTH_PREM_FLAG = 'Y' THEN 'Y'
ELSE 'N' END) = 'Y'
AND DAYS_SINCE_LAST_SP_UPG IS NOT NULL AND DAYS_SINCE_LAST_SP_UPG <= 365 AND  CURR_ACCT_MTH_PREM_FLAG = 'Y'  THEN 'Y' ELSE 'N' END AS SP_UPG_360_DAYS_CURR_PREM	  
,CASE WHEN PREV_ACCT_MTH_PREM_FLAG ='N' AND  CURR_ACCT_MTH_PREM_FLAG = 'Y' THEN 'Y' ELSE 'N' END AS ACCT_NONPREM_TO_PREM
,CASE WHEN NEW_ACCT_FLAG ='Y' AND  CURR_ACCT_MTH_PREM_FLAG = 'Y' THEN 'Y' ELSE 'N' END AS NEW_ACCT_CURR_PREM
,CASE WHEN SP_AAL_360_DAYS_CURR_PREM = 'N' AND SP_UPG_360_DAYS_CURR_PREM = 'N' AND  ACCT_NONPREM_TO_PREM = 'N' AND  NEW_ACCT_CURR_PREM = 'N'  THEN 'N' ELSE 'Y' END AS MC_AUD_FLAG
FROM AAL_ACQ60_WEAR_AAL_BASE_1 A
LEFT OUTER JOIN AAL_ACQ60_SP_AALS_1 B ON A.CUST_ID = B.CUST_ID AND A.ACCT_NUM = B.ACCT_NUM
WHERE MC_AUD_FLAG = 'Y'
QUALIFY Row_Number() Over (PARTITION BY A.CUST_ID, A.ACCT_NUM ORDER BY MC_AUD_FLAG DESC) = 1
)WITH DATA PRIMARY INDEX (CUST_ID, ACCT_NUM) ON COMMIT PRESERVE ROWS
;

SELECT Count(*) FROM AAL_ACQ60_AUD ;

--MC INSERT
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SELECT A.CUST_ID, A.ACCT_NUM, A.CUST_LINE_SEQ_ID
,CASE WHEN device_grouping = 'Apple' THEN 'AAL_WEAR_750_COMM_IOS_P'
ELSE 'AAL_WEAR_750_COMM_ANDR_P' END AS MESSAGE_CD
	  
,CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
,'N' AS pull_thru

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
,	CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive
,a.acct_aal_wearable_wly_cent AS score_centile
,a.acct_aal_wearable_wly_val AS score_value
,a.acct_aal_wearable_wly_orig_val AS orig_value
,'N' AS aster_ind
FROM hqmkt_prd_qmtbls.knw_message_code_base_1 a
INNER JOIN AAL_ACQ60_AUD  B ON A.CUST_ID = B.CUST_ID AND A.ACCT_NUM = B.ACCT_NUM
--INNER JOIN ADBCMP_PRD_ALLVM.CUSTOMER_PROFILE_UNIV_ALL_V P ON A.CUST_ID = P.CUST_ID AND A.ACCT_NUM = P.ACCT_NUM AND A.CUST_LINE_SEQ_ID = P.CUST_LINE_SEQ_ID
WHERE 	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
--AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure

/* ****removing propensity from base ******/
/*	AND (a.acct_aal_wearable_wly_orig_val >= 0.45997 --propensity score above threshold
OR a.acct_aal_wearable_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold*/
		
AND Coalesce (a.wear_adds_30, 0) = 0 --account not added a wearable line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025


;


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Mid to MidLow Voice Propensity (deciles 4-7)  MC for Samsung and Google
--SL and ML
--ACQ00160:  $700 off Android and 50% of watch promo 
--Added by JC 032525
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE 
WHEN MFG_NM = 'SAMSUNG' THEN 'AAL_VOICE_SAMS_MID_LMID_P'
WHEN MFG_NM = 'GOOGLE' THEN 'AAL_VOICE_GOOG_MID_LMID_P'
ELSE NULL 
end AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM    hqmkt_prd_qmtbls.knw_message_code_base_1 a

WHERE   a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
--or a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND a.acct_aal_v_wly_orig_val <  0.49134 
AND  a.acct_aal_v_wly_cent BETWEEN 31 AND 70 --mid to midlowprop criteria
AND DEVICE_GROUPING = 'Android'  --android smartphones
AND MFG_NM IN ('GOOGLE', 'SAMSUNG')  --ONLY SS AND GOOGLE
AND message_cd IS NOT NULL
;

--- ##### URGENT by MM 04302025; removed by JC 05052025
/*
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
distinct 
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE 
WHEN b.device_grouping = 'apple' THEN 'AAL_VOICE_IOS_MIDPROP_P'
WHEN  b.device_grouping = 'android' THEN 'AAL_VOICE_ANDR_MIDPROP_P'
end 
AS message_cd,

a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.mth_typ = 'C'
AND b.eom_lines = 1

WHERE	message_cd in
(
'AAL_NLOU_WEB_LAT_IOS_P',
'AAL_NLOU_IHQ_LAT_IOS_P',
'AAL_NLOU_2_WEB_LAT_IOS_P', 
'AAL_NLOU_2_IHQ_LAT_IOS_P',
'AAL_VOICE_SL_PEGA_IOS_P',
'AAL_VOICE_SL_IOS_P',
'AAL_VOICE_SL_PEGA_ANDR_P',
'AAL_VOICE_SL_ANDR_P',
'AAL_VCE_SL_DYN630_IOS_P', 
'AAL_VCE_SL_DYN600_ANDR_P', 
'AAL_VCE_SL_DYN730_IOS_P', 
'AAL_VCE_SL_DYN700_ANDR_P', 
'AAL_VCE_SL_DYN830_IOS_P ',
'AAL_VCE_SL_DYN800_ANDR_P', 
'AAL_VCE_SL_DYN930_IOS_P', 
'AAL_VCE_SL_DYN900_ANDR_P',
'AAL_VOICE_IOS_2LINE_80_P',
'AAL_VOICE_ANDR_2LINE_80_P',
'AAL_VOICE_IOS_3LINE_P',
'AAL_VOICE_ANDR_3LINE_P',
'AAL_VOICE_IOS_4LINE_80_P',
'AAL_VOICE_ANDR_4LINE_80_P',
'AAL_VOICE_IOS_5LINE_80_P',
'AAL_VOICE_ANDR_5LINE_80_P',
'AAL_VOICE_IOS_300_DYN_P',
'AAL_VOICE_ANDR_300_DYN_P',
'AAL_VOICE_IOS_400_DYN_P',
'AAL_VOICE_ANDR_400_DYN_P',
'AAL_VOICE_IOS_500_DYN_P',
'AAL_VOICE_ANDR_500_DYN_P',
'AAL_VOICE_IOS_500_DYN_P',
'AAL_VOICE_ANDR_500_DYN_P',
'AAL_VOICE_IOS_600_DYN_P',
'AAL_VOICE_ANDR_600_DYN_P',	
'AAL_VOICE_IOS_ALL_P', 
'AAL_VOICE_ANDR_ALL_P',
'AAL_WEARABLE_IOS_P',
'AAL_WEARABLE_ANDR_P',
'AAL_WEAR100_DYN_IOS_P',
'AAL_WEAR100_DYN_ANDR_P',
'AAL_WEAR150_DYN_IOS_P',
'AAL_WEAR150_DYN_ANDR_P',
'AAL_WEAR200_DYN_IOS_P',
'AAL_WEAR200_DYN_ANDR_P',
'AAL_TAB_IOS_P',
'AAL_TAB_ANDR_P',
'AAL_TAB250_DYN_IOS_P',
'AAL_TAB200_DYN_IOS_P',
'AAL_TAB150_DYN_IOS_P',
'AAL_TAB100_DYN_IOS_P',
'AAL_TAB250_DYN_ANDR_P',
'AAL_TAB200_DYN_ANDR_P',
'AAL_TAB150_DYN_ANDR_P',
'AAL_TAB100_DYN_ANDR_P'

)
and message_cd is not null;
*/

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--BYOD Q2-Q3 whole base
--Added by MM 05292025
--updated 06022025
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
CASE WHEN a.acct_pho_lines = 1
AND a.LINE_PLAN_TYPE
IN ('Play More Unlimited','Do More Unlimited','Get More Unlimited','Start Unlimited','Just Kids',  ---  MM
'BAYOU Welcome','BAYOU Plus','BAYOU Ultimate') -- MyPlan)
THEN 'AAL_VOICE_BYOD_FREE_1_P'
        
WHEN a.acct_pho_lines = 2
AND a.LINE_PLAN_TYPE
IN ('Play More Unlimited','Do More Unlimited','Get More Unlimited','Start Unlimited','Just Kids',  ---  MM
'BAYOU Welcome','BAYOU Plus','BAYOU Ultimate') -- MyPlan)
THEN 'AAL_VOICE_BYOD_FREE_2_P'
    
WHEN a.acct_pho_lines = 3
AND a.LINE_PLAN_TYPE
IN ('Play More Unlimited','Do More Unlimited','Get More Unlimited','Start Unlimited','Just Kids',  ---  MM
'BAYOU Welcome','BAYOU Plus','BAYOU Ultimate') -- MyPlan)
THEN 'AAL_VOICE_BYOD_FREE_3_P'
        
WHEN --a.acct_pho_lines = 3
--AND 
a.LINE_PLAN_TYPE
IN ('Play More Unlimited','Do More Unlimited','Get More Unlimited','Start Unlimited','Just Kids',  ---  MM
'BAYOU Welcome','BAYOU Plus','BAYOU Ultimate') -- MyPlan)
THEN 'AAL_VOICE_BYOD_FREE_4_9_P'
        
WHEN a.acct_pho_lines = 1 THEN 'AAL_VOICE_BYODFREE_1MTR_P'
        
WHEN a.acct_pho_lines = 2 THEN 'AAL_VOICE_BYODFREE_2MTR_P'
        
WHEN a.acct_pho_lines = 3 THEN 'AAL_VOICE_BYODFREE_3MTR_P'
        
ELSE 'AAL_VOICE_BYODFREE_4_9MTR_P'
        
END 
AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM    hqmkt_prd_qmtbls.knw_message_code_base_1 a

LEFT JOIN
(
SELECT cust_id, acct_num FROM ntl_prd_allvm.crm_cust_acct_line_message_v 
WHERE message_cd IN (

'LY_DEL_BALANCE_REL_1',
'LY_DEL_BALANCE_RELIEF',
'LY_DEL_BALANCE_RELIEF_5_16',
'LY_DEL_BALANCE_RELIEF_5_9' )
AND curr_prev_ind = 'C'
GROUP BY 1,2

) MC
ON a.cust_id = MC.cust_id
AND a.acct_num = MC.acct_num

LEFT JOIN
(
SEL 
cust_id, acct_num 
FROM cust_acct_line_svc_prod_tran_v a
WHERE a.svc_prod_id IN ('3493', '3494', '3495', '2496', '3448', '3449', -- store closure SPOs
'3408', '3409', '3410', '3411') -- NGPO SPO) 
AND DATE BETWEEN SVC_PROD_EFF_DT AND Coalesce(SVC_PROD_DEACT_DT,DATE)
GROUP BY 1,2

) SC
ON a.cust_id = SC.cust_id
AND a.acct_num = SC.acct_num


LEFT JOIN 
(
SEL DISTINCT A.SSF_CUST_ID AS CUST_ID, A.SSF_ACCT_NUM AS ACCT_NUM
FROM hqmkt_prd_qmtbls.knw_cons_base_1 a

INNER JOIN NTL_PRD_ALLVM.CACS_CUST_ACCT_COLL_DLY_HIST_V COLL ------------------COLLECTIONS TABLE
ON A.SSF_CUST_ID = COLL.CUST_ID
AND A.SSF_ACCT_NUM = COLL.ACCT_NUM

WHERE a.ssf_base_mth IN (Cast ((((Current_Date / 100) * 100) + 1) AS DATE) 
,Add_Months(Cast ((((Current_Date / 100) * 100) + 1) AS DATE),-1))
-- Picking up the current record from the historical table
AND COLL.CURR_PREV_IND = 'C'
AND
(
-- write off in the collections table
COLL.WRITE_OFF_IND = 'Y'
-- bankruptcy indicators in the collections table
OR COLL.BANKRUPTCY_IND = 'Y' OR COLL.PRI_CACS_FNCTN_CD = 'A'
-- fraud indicators in the collections table
OR Coalesce(COLL.IFD_STATUS_CD, 'N') <> 'N' OR COLL.PRI_CACS_FNCTN_CD = 'F'
-- exclude specialty codes (death, military, etc)
OR COLL.PRI_CACS_FNCTN_CD = 'S'
-- exclude those marked as a high risk of litigation
OR COLL.PRI_CACS_FNCTN_CD = 'O'
-- exclude - Hotline/Suspend
OR COLL.COLL_STATUS_CD IN ('H', 'S', 'D')
-- exclude - 0/90 Days Past Due
OR COLL.DELINQ_AMT_BY_AGE90+COLL.DELINQ_AMT_BY_AGE120+COLL.DELINQ_AMT_BY_AGE150+COLL.DELINQ_AMT_BY_AGE180 > 0
)
) COLL

ON a.cust_id = COLL.cust_id
AND a.acct_num = COLL.acct_num


LEFT JOIN hqmkt_prd_qmtbls.mm_SH_accts sh
ON a.cust_id = sh.cust_id
AND a.acct_num = sh.acct_num
WHERE   a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
/*  AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)*/

AND a.acct_pho_lines BETWEEN 1 AND 9
AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--  AND (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
--  OR a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
--  AND message_cd IS NOT NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND MC.CUST_ID IS  NULL   --- exclude accounts in Debt releife MC's from Thomas's team
AND SC.CUST_ID IS  NULL   --- exclude account in Store closer Promo ID's
AND COLL.CUST_ID IS  NULL
AND SH.CUST_ID IS  NULL
;

---  30,050,044 base with standard suppressions
---  30,032,888 Base Caps at 9 line accounts
---  29,985,250 Suppressing Debt Releif Pricing program
---  29,985,176 Suppressing Store closure 
---  29,973,615 Suppressing NGPO
---  28,697,224 After suppressing collections, fraud etc 



/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--BYOD FREE PEGA:  non-MTR accounts only, Pega cohort
--Added by JC 06032025
--Edited JC 06122025
--Added Pega MCs by OS and propensity - based on BYOD MCs 6/27/25 - these will be used for pega hold outs
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


--6/12/25

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SELECT A.CUST_ID, A.ACCT_NUM, a.CUST_LINE_SEQ_ID
, case when message_cd = 'AAL_VOICE_BYOD_FREE_2_P' then  'AAL_VCE_BYODFREE_PEGA_2_P' 
when message_cd = 'AAL_VOICE_BYOD_FREE_3_P' then 'AAL_VCE_BYODFREE_PEGA_3_P'
when message_cd = 'AAL_VOICE_BYOD_FREE_4_9_P' then 'AAL_VCE_BYODFREE_PEGA_4_P'
else null
end 	AS  MESSAGE_CD
,TRTMNT_CTRL_IND, PULL_THRU, REACTIVE, SCORE_CENTILE, SCORE_VALUE, ORIG_VALUE, ASTER_IND
FROM 	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 A
INNER JOIN
(
SELECT DISTINCT CUST_ID, ACCT_NUM
FROM NTL_PRD_QMTBLS.CRM_CUST_ACCT_NBX_CONTENT
WHERE pilot_grp = 'A'
AND Current_Date BETWEEN eff_dt AND exp_dt

)B ON A.CUST_ID = B.CUST_ID AND A.ACCT_NUM = B.ACCT_NUM
INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 c ON a.cust_id = c.cust_id AND a.acct_num = c.acct_num AND a.cust_line_seq_id = c.cust_line_seq_id
WHERE message_cd IN ('AAL_VOICE_BYOD_FREE_2_P', 'AAL_VOICE_BYOD_FREE_3_P', 'AAL_VOICE_BYOD_FREE_4_9_P')
AND TRTMNT_CTRL_IND IN ('T', 'P')  --EXCL OHOG
;

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Pega by Decile  (ACQ373)
--Added by JC 06302025
--Based on BYOD MCs  - these will be used for pega hold outs and allocations in the future
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SELECT A.CUST_ID, A.ACCT_NUM, a.CUST_LINE_SEQ_ID
, CASE WHEN device_grouping = 'Apple' AND (a.acct_aal_v_wly_orig_val >=  0.49134  OR a.acct_aal_v_wly_cent >= 71) THEN  'AAL_VCE_IOS_PEGA_HIGH_P' 
WHEN device_grouping = 'Android' AND (a.acct_aal_v_wly_orig_val >=  0.49134  OR a.acct_aal_v_wly_cent >= 71) THEN  'AAL_VCE_ANDR_PEGA_HIGH_P' 
WHEN device_grouping = 'Apple' AND a.acct_aal_v_wly_cent BETWEEN 51 AND 70 THEN  'AAL_VCE_IOS_PEGA_MID_P' 
WHEN device_grouping = 'Android' AND a.acct_aal_v_wly_cent BETWEEN 51 AND 70 THEN  'AAL_VCE_ANDR_PEGA_MID_P' 
WHEN device_grouping = 'Apple' AND a.acct_aal_v_wly_cent BETWEEN 31 AND 50 THEN  'AAL_VCE_IOS_PEGA_LMID_P' 
WHEN device_grouping = 'Android' AND a.acct_aal_v_wly_cent BETWEEN 31 AND 50 THEN  'AAL_VCE_ANDR_PEGA_LMID_P' 
WHEN device_grouping = 'Apple' AND Coalesce(a.acct_aal_v_wly_cent,0) BETWEEN 0 AND 30 THEN  'AAL_VCE_IOS_PEGA_LOW_P' 
WHEN device_grouping = 'Android' AND Coalesce(a.acct_aal_v_wly_cent,0) BETWEEN 0 AND 30 THEN  'AAL_VCE_ANDR_PEGA_LOW_P' 
ELSE NULL
end 	AS  MESSAGE_CD,
	   
CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM hqmkt_prd_qmtbls.knw_message_code_base_1 A
INNER JOIN 
(--C	
--CURRENT PEGA AAL COHORT - USING byod 2+ lines M&M MC 
SELECT A.cust_id, A.acct_num, A.CUST_LINE_SEQ_ID
FROM hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 A
WHERE message_cd IN ('AAL_VCE_BYODFREE_PEGA_2_P' , 'AAL_VCE_BYODFREE_PEGA_3_P', 'AAL_VCE_BYODFREE_PEGA_4_P')
GROUP BY 1,2 ,3
 
)c ON a.cust_id = c.cust_id AND a.acct_num = c.acct_num AND A.CUST_LINE_SEQ_ID = C.CUST_LINE_SEQ_ID
WHERE message_cd IS NOT NULL
	
;



/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Mid to Low Voice Propensity (deciles 1-7)  MC for Samsung Accts with Note/Flip/Fold
--SL and ML
--ACQ00380:  VZE Samsung BOGO Campaign
--Added by JC 071525
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,


CASE WHEN a.acct_aal_v_wly_cent BETWEEN 51 AND 70 THEN  'AAL_VOICE_SAMS_MID_P' 
WHEN a.acct_aal_v_wly_cent BETWEEN 31 AND 50 THEN  'AAL_VOICE_SAMS_LMID_P' 
WHEN Coalesce(a.acct_aal_v_wly_cent,0) BETWEEN 0 AND 30 THEN  'AAL_VOICE_SAMS_LOW_P' 
ELSE NULL
end 	AS  MESSAGE_CD,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM    hqmkt_prd_qmtbls.knw_message_code_base_1 a
INNER JOIN 
(--ACCTS W SAMSUNG SMARTPHONES: Note/ZFlip/Zfold only
SELECT cust_id, acct_num
FROM hqmkt_prd_qmtbls.knw_message_code_base_1 a
WHERE DATA_TIER = 'Smartphone'
AND device_grouping = 'Android'
AND mfg_nm = 'SAMSUNG'
AND (device_brand_nm LIKE '%NOTE%' OR device_brand_nm LIKE '%Z%FLIP%' OR device_brand_nm LIKE '%FOLD%')
GROUP BY 1,2
)B ON A.CUST_ID = B.CUST_ID AND A.ACCT_NUM = B.ACCT_NUM
WHERE   a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--and (a.acct_aal_v_wly_orig_val >=  0.49134 --propensity score above threshold
--or a.acct_aal_v_wly_cent >= 71) --catch the top 3 deciles as a backup to the threshold
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
AND a.acct_aal_v_wly_orig_val <  0.49134 
AND  a.acct_aal_v_wly_cent BETWEEN 1 AND 70 --mid to lowprop criteria
AND DEVICE_GROUPING = 'Android'  --android smartphones
AND MFG_NM = 'SAMSUNG'  --only SS 
AND message_cd IS NOT NULL
;



/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--QQQQQ
--THIS SECTION INSERTS THE "ESP" MC'S THAT ARE DEDUPED
--ADD NEW MC SECTIONS RIGHT ABOVE HERE
--ONLY TOUCH THE SECTION BELOW TO ADJUST THE DEDUPING LOGIC
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
where message_cd like '%ESP%'
and message_cd not like '%RESP%'
;
*/

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

Substr (a.message_cd, 1, Length (a.message_cd)-2) || '_ESP_P' AS new_message_cd,

a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM
(
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
a.message_cd,
a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind,
	
CASE 
			
--WHEN a.message_cd = 'AAL_NLOU_WEB_LAT_IOS_P' THEN 1
--WHEN a.message_cd = 'AAL_NLOU_IHQ_LAT_IOS_P' THEN 2
--WHEN a.message_cd = 'AAL_NLOU_2_WEB_LAT_IOS_P' THEN 3
--WHEN a.message_cd = 'AAL_NLOU_2_IHQ_LAT_IOS_P' THEN 4								
				
--WHEN a.message_cd = 'AAL_VOICE_BYODFREE_PEGA_P' THEN 1

--WHEN a.message_cd = 'AAL_VCE_BYODFREE_PEGA_2_P' THEN 2
--WHEN a.message_cd = 'AAL_VCE_BYODFREE_PEGA_3_P' THEN 3
--WHEN a.message_cd = 'AAL_VCE_BYODFREE_PEGA_4_P' THEN 4
				
--WHEN a.message_cd = 'AAL_VOICE_BYOD_FREE_1_P' THEN 5
--WHEN a.message_cd = 'AAL_VOICE_BYOD_FREE_2_P' THEN 6
--WHEN a.message_cd = 'AAL_VOICE_BYOD_FREE_3_P' THEN 7
--WHEN a.message_cd = 'AAL_VOICE_BYOD_FREE_4_9_P' THEN 8				
				
				
				
				
--WHEN a.message_cd = 'AAL_VOICE_IOS_MIDPROP_P' THEN 5
--WHEN a.message_cd = 'AAL_VOICE_ANDR_MIDPROP_P' THEN 6
--WHEN a.message_cd = 'AAL_VOICE_IOS_LMIDPROP_P' THEN 7
--WHEN a.message_cd = 'AAL_VOICE_ANDR_LMIDPROP_P' THEN 8
				
WHEN a.message_cd = 'AAL_VCE_IOS_PEGA_MID_P' THEN 3
WHEN a.message_cd = 'AAL_VCE_ANDR_PEGA_MID_P' THEN 4
WHEN a.message_cd = 'AAL_VCE_IOS_PEGA_LMID_P' THEN 5
WHEN a.message_cd = 'AAL_VCE_ANDR_PEGA_LMID_P' THEN 6
WHEN a.message_cd = 'AAL_VCE_IOS_PEGA_LOW_P' THEN 7
WHEN a.message_cd = 'AAL_VCE_ANDR_PEGA_LOW_P' THEN 8

				
WHEN a.message_cd = 'AAL_VOICE_SL_P' THEN 10
WHEN a.message_cd = 'AAL_VCE_SL_DYN630_IOS_P' THEN 11
WHEN a.message_cd = 'AAL_VCE_SL_DYN730_IOS_P' THEN 12
WHEN a.message_cd = 'AAL_VCE_SL_DYN830_IOS_P' THEN 13
WHEN a.message_cd = 'AAL_VCE_SL_DYN930_IOS_P' THEN 14
WHEN a.message_cd = 'AAL_VCE_SL_DYN600_ANDR_P' THEN 15
WHEN a.message_cd = 'AAL_VCE_SL_DYN700_ANDR_P' THEN 16
WHEN a.message_cd = 'AAL_VCE_SL_DYN800_ANDR_P' THEN 17
WHEN a.message_cd = 'AAL_VCE_SL_DYN900_ANDR_P' THEN 18	
				

WHEN a.message_cd = 'AAL_VOICE_IOS_2LINE_80_P' THEN 31
WHEN a.message_cd = 'AAL_VOICE_ANDR_2LINE_80_P' THEN 33
WHEN a.message_cd = 'AAL_VOICE_IOS_3LINE_P' THEN 35
WHEN a.message_cd = 'AAL_VOICE_ANDR_3LINE_P' THEN 36
WHEN a.message_cd = 'AAL_VOICE_IOS_4LINE_80_P' THEN 37
WHEN a.message_cd = 'AAL_VOICE_ANDR_4LINE_80_P' THEN 38
WHEN a.message_cd = 'AAL_VOICE_IOS_5LINE_80_P' THEN 39
WHEN a.message_cd = 'AAL_VOICE_ANDR_5LINE_80_P' THEN 40					
WHEN a.message_cd = 'AAL_VOICE_IOS_300_DYN_P' THEN 41
WHEN a.message_cd = 'AAL_VOICE_ANDR_300_DYN_P' THEN 42
WHEN a.message_cd = 'AAL_VOICE_IOS_400_DYN_P' THEN 43
WHEN a.message_cd = 'AAL_VOICE_ANDR_400_DYN_P' THEN 44
WHEN a.message_cd = 'AAL_VOICE_IOS_500_DYN_P' THEN 45
WHEN a.message_cd = 'AAL_VOICE_ANDR_500_DYN_P' THEN 46
WHEN a.message_cd = 'AAL_VOICE_IOS_600_DYN_P' THEN 47
WHEN a.message_cd = 'AAL_VOICE_ANDR_600_DYN_P' THEN 48
				
WHEN a.message_cd = 'AAL_VOICE_IOS_ALL_P' THEN 51
WHEN a.message_cd = 'AAL_VOICE_ANDR_ALL_P' THEN 52
				
				
WHEN a.message_cd = 'AAL_WEARABLE_P' THEN 67
WHEN a.message_cd = 'AAL_WEAR200_DYN_P' THEN 69
WHEN a.message_cd = 'AAL_WEAR150_DYN_P' THEN 70
WHEN a.message_cd = 'AAL_WEAR100_DYN_P' THEN 71
					
WHEN a.message_cd = 'AAL_TAB_P' THEN 75						
WHEN a.message_cd = 'AAL_TAB250_DYN_P' THEN 77
WHEN a.message_cd = 'AAL_TAB200_DYN_P' THEN 78
WHEN a.message_cd = 'AAL_TAB150_DYN_P' THEN 79
WHEN a.message_cd = 'AAL_TAB100_DYN_P' THEN 80				

WHEN a.message_cd = 'AAL_NEXTLINEONUS_3_IOS_P' THEN 87
WHEN a.message_cd = 'AAL_NEXTLINEONUS_3_ANDR_P' THEN 88		

WHEN a.message_cd = 'AAL_VCE_IOS_MIDPROP_2_P' THEN 90
WHEN a.message_cd = 'AAL_VCE_ANDR_MIDPROP_2_P' THEN 91	
WHEN a.message_cd = 'AAL_VCE_IOS_LMIDPROP_2_P' THEN 92
WHEN a.message_cd = 'AAL_VCE_ANDR_LMIDPROP_2_P' THEN 93	
				
	
WHEN a.message_cd = 'AAL_DAILY_RESP_P' THEN 96

	
ELSE 99 
end AS dedupe_order3
	
FROM
(
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
a.message_cd,
a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind,
		
CASE 
			
--WHEN a.message_cd = 'AAL_NLOU_WEB_LAT_IOS_P' THEN 1
--WHEN a.message_cd = 'AAL_NLOU_IHQ_LAT_IOS_P' THEN 2
--WHEN a.message_cd = 'AAL_NLOU_2_WEB_LAT_IOS_P' THEN 3
--WHEN a.message_cd = 'AAL_NLOU_2_IHQ_LAT_IOS_P' THEN 4								
				
--WHEN a.message_cd = 'AAL_VOICE_BYODFREE_PEGA_P' THEN 1

--WHEN a.message_cd = 'AAL_VCE_BYODFREE_PEGA_2_P' THEN 2
--WHEN a.message_cd = 'AAL_VCE_BYODFREE_PEGA_3_P' THEN 3
--WHEN a.message_cd = 'AAL_VCE_BYODFREE_PEGA_4_P' THEN 4
				
--WHEN a.message_cd = 'AAL_VOICE_BYOD_FREE_1_P' THEN 5
--WHEN a.message_cd = 'AAL_VOICE_BYOD_FREE_2_P' THEN 6
--WHEN a.message_cd = 'AAL_VOICE_BYOD_FREE_3_P' THEN 7
--WHEN a.message_cd = 'AAL_VOICE_BYOD_FREE_4_9_P' THEN 8				
				
				
				
				
--WHEN a.message_cd = 'AAL_VOICE_IOS_MIDPROP_P' THEN 5
--WHEN a.message_cd = 'AAL_VOICE_ANDR_MIDPROP_P' THEN 6
--WHEN a.message_cd = 'AAL_VOICE_IOS_LMIDPROP_P' THEN 7
--WHEN a.message_cd = 'AAL_VOICE_ANDR_LMIDPROP_P' THEN 8
				
			
WHEN a.message_cd = 'AAL_VCE_IOS_PEGA_MID_P' THEN 3
WHEN a.message_cd = 'AAL_VCE_ANDR_PEGA_MID_P' THEN 4
WHEN a.message_cd = 'AAL_VCE_IOS_PEGA_LMID_P' THEN 5
WHEN a.message_cd = 'AAL_VCE_ANDR_PEGA_LMID_P' THEN 6
WHEN a.message_cd = 'AAL_VCE_IOS_PEGA_LOW_P' THEN 7
WHEN a.message_cd = 'AAL_VCE_ANDR_PEGA_LOW_P' THEN 8

				
WHEN a.message_cd = 'AAL_VOICE_SL_P' THEN 10
WHEN a.message_cd = 'AAL_VCE_SL_DYN630_IOS_P' THEN 11
WHEN a.message_cd = 'AAL_VCE_SL_DYN730_IOS_P' THEN 12
WHEN a.message_cd = 'AAL_VCE_SL_DYN830_IOS_P' THEN 13
WHEN a.message_cd = 'AAL_VCE_SL_DYN930_IOS_P' THEN 14
WHEN a.message_cd = 'AAL_VCE_SL_DYN600_ANDR_P' THEN 15
WHEN a.message_cd = 'AAL_VCE_SL_DYN700_ANDR_P' THEN 16
WHEN a.message_cd = 'AAL_VCE_SL_DYN800_ANDR_P' THEN 17
WHEN a.message_cd = 'AAL_VCE_SL_DYN900_ANDR_P' THEN 18	

					

WHEN a.message_cd = 'AAL_VOICE_IOS_2LINE_80_P' THEN 31
WHEN a.message_cd = 'AAL_VOICE_ANDR_2LINE_80_P' THEN 33
WHEN a.message_cd = 'AAL_VOICE_IOS_3LINE_P' THEN 35
WHEN a.message_cd = 'AAL_VOICE_ANDR_3LINE_P' THEN 36
WHEN a.message_cd = 'AAL_VOICE_IOS_4LINE_80_P' THEN 37
WHEN a.message_cd = 'AAL_VOICE_ANDR_4LINE_80_P' THEN 38
WHEN a.message_cd = 'AAL_VOICE_IOS_5LINE_80_P' THEN 39
WHEN a.message_cd = 'AAL_VOICE_ANDR_5LINE_80_P' THEN 40					
WHEN a.message_cd = 'AAL_VOICE_IOS_300_DYN_P' THEN 41
WHEN a.message_cd = 'AAL_VOICE_ANDR_300_DYN_P' THEN 42
WHEN a.message_cd = 'AAL_VOICE_IOS_400_DYN_P' THEN 43
WHEN a.message_cd = 'AAL_VOICE_ANDR_400_DYN_P' THEN 44
WHEN a.message_cd = 'AAL_VOICE_IOS_500_DYN_P' THEN 45
WHEN a.message_cd = 'AAL_VOICE_ANDR_500_DYN_P' THEN 46
WHEN a.message_cd = 'AAL_VOICE_IOS_600_DYN_P' THEN 47
WHEN a.message_cd = 'AAL_VOICE_ANDR_600_DYN_P' THEN 48
				
WHEN a.message_cd = 'AAL_VOICE_IOS_ALL_P' THEN 51
WHEN a.message_cd = 'AAL_VOICE_ANDR_ALL_P' THEN 52
				
WHEN a.message_cd = 'AAL_WEARABLE_P' THEN 67
WHEN a.message_cd = 'AAL_WEAR200_DYN_P' THEN 69
WHEN a.message_cd = 'AAL_WEAR150_DYN_P' THEN 70
WHEN a.message_cd = 'AAL_WEAR100_DYN_P' THEN 71
					
WHEN a.message_cd = 'AAL_TAB_P' THEN 75						
WHEN a.message_cd = 'AAL_TAB250_DYN_P' THEN 77
WHEN a.message_cd = 'AAL_TAB200_DYN_P' THEN 78
WHEN a.message_cd = 'AAL_TAB150_DYN_P' THEN 79
WHEN a.message_cd = 'AAL_TAB100_DYN_P' THEN 80				

WHEN a.message_cd = 'AAL_NEXTLINEONUS_3_IOS_P' THEN 87
WHEN a.message_cd = 'AAL_NEXTLINEONUS_3_ANDR_P' THEN 88			
	
WHEN a.message_cd = 'AAL_VCE_IOS_MIDPROP_2_P' THEN 90
WHEN a.message_cd = 'AAL_VCE_ANDR_MIDPROP_2_P' THEN 91	
WHEN a.message_cd = 'AAL_VCE_IOS_LMIDPROP_2_P' THEN 92
WHEN a.message_cd = 'AAL_VCE_ANDR_LMIDPROP_2_P' THEN 93	
				
	
WHEN a.message_cd = 'AAL_DAILY_RESP_P' THEN 96
		

		
ELSE 99 
end AS dedupe_order1
		
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
		
LEFT OUTER JOIN hqmkt_prd_qmtbls.knw_vbm_test_lines_1 c
ON a.cust_id = c.cust_id
AND a.cust_line_seq_id = c.cust_line_seq_id
		
WHERE	a.reactive = 'N'
AND c.cust_id IS NULL
AND a.message_cd IN
(
		
'AAL_DAILY_RESP_P'	
		
--,'AAL_VOICE_BYODFREE_PEGA_P'
		
--,'AAL_VCE_BYODFREE_PEGA_2_P'
--,'AAL_VCE_BYODFREE_PEGA_3_P'
--,'AAL_VCE_BYODFREE_PEGA_4_P'
		
--,'AAL_VOICE_BYOD_FREE_1_P'
--,'AAL_VOICE_BYOD_FREE_2_P'
--,'AAL_VOICE_BYOD_FREE_3_P'
--,'AAL_VOICE_BYOD_FREE_4_9_P'
		
--,'AAL_NLOU_WEB_LAT_IOS_P'
--,'AAL_NLOU_IHQ_LAT_IOS_P'
--,'AAL_NLOU_2_WEB_LAT_IOS_P'
--,'AAL_NLOU_2_IHQ_LAT_IOS_P'

,'AAL_VCE_SL_DYN630_IOS_P'
,'AAL_VCE_SL_DYN730_IOS_P'
,'AAL_VCE_SL_DYN830_IOS_P'
,'AAL_VCE_SL_DYN930_IOS_P'
,'AAL_VCE_SL_DYN600_ANDR_P'
,'AAL_VCE_SL_DYN700_ANDR_P'
,'AAL_VCE_SL_DYN800_ANDR_P'
,'AAL_VCE_SL_DYN900_ANDR_P'
,'AAL_VOICE_SL_P'

,'AAL_VOICE_IOS_300_DYN_P'
,'AAL_VOICE_ANDR_300_DYN_P'
,'AAL_VOICE_IOS_400_DYN_P'
,'AAL_VOICE_ANDR_400_DYN_P'
,'AAL_VOICE_IOS_500_DYN_P'
,'AAL_VOICE_ANDR_500_DYN_P'
,'AAL_VOICE_IOS_600_DYN_P'
,'AAL_VOICE_ANDR_600_DYN_P'
,'AAL_VOICE_IOS_2LINE_80_P'
,'AAL_VOICE_ANDR_2LINE_80_P'
,'AAL_VOICE_IOS_3LINE_P'
,'AAL_VOICE_ANDR_3LINE_P'
,'AAL_VOICE_IOS_4LINE_80_P'
,'AAL_VOICE_ANDR_4LINE_80_P'
,'AAL_VOICE_IOS_5LINE_80_P'
,'AAL_VOICE_ANDR_5LINE_80_P'
		
,'AAL_VOICE_IOS_ALL_P'
,'AAL_VOICE_ANDR_ALL_P'
		
--,'AAL_VOICE_IOS_MIDPROP_P'
--,'AAL_VOICE_ANDR_MIDPROP_P'
--,'AAL_VOICE_IOS_LMIDPROP_P'
--,'AAL_VOICE_ANDR_LMIDPROP_P'
		
,'AAL_WEAR200_DYN_P'
,'AAL_WEAR150_DYN_P'
,'AAL_WEAR100_DYN_P'	
,'AAL_WEARABLE_P'
		
,'AAL_TAB250_DYN_P'
,'AAL_TAB200_DYN_P'
,'AAL_TAB150_DYN_P'
,'AAL_TAB100_DYN_P'
,'AAL_TAB_P'		
		
,'AAL_NEXTLINEONUS_3_IOS_P'
,'AAL_NEXTLINEONUS_3_ANDR_P'

,'AAL_VCE_IOS_MIDPROP_2_P'
,'AAL_VCE_ANDR_MIDPROP_2_P'
,'AAL_VCE_IOS_LMIDPROP_2_P'
,'AAL_VCE_ANDR_LMIDPROP_2_P'
		
,'AAL_VCE_IOS_PEGA_MID_P'
,'AAL_VCE_ANDR_PEGA_MID_P'
,'AAL_VCE_IOS_PEGA_LMID_P'
,'AAL_VCE_ANDR_PEGA_LMID_P'
,'AAL_VCE_IOS_PEGA_LOW_P'
,'AAL_VCE_ANDR_PEGA_LOW_P'
			

)
		
QUALIFY	Row_Number () Over (
PARTITION BY a.cust_id, a.acct_num
ORDER BY dedupe_order1, a.aster_ind,
				
a.score_value DESC, 
a.message_cd, a.cust_line_seq_id) = 1
		
UNION ALL
		
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
a.message_cd,
a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind,
		
CASE 
WHEN a.message_cd = 'AAL_HOLIDAY_IPHONE_P' THEN 12
WHEN a.message_cd = 'AAL_IHQ_DEC_IOS_V_P' THEN 13
ELSE 99 
end AS dedupe_order2
		
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
		
LEFT OUTER JOIN hqmkt_prd_qmtbls.knw_vbm_test_lines_1 c
ON a.cust_id = c.cust_id
AND a.cust_line_seq_id = c.cust_line_seq_id
		
WHERE	a.reactive = 'N'
AND c.cust_id IS NULL
AND a.message_cd IN
(
'AAL_HOLIDAY_IPHONE_P'
,'AAL_IHQ_DEC_IOS_V_P'
)
--quick trick to turn off this section, but leave the framework here for next time
AND 1 = 2 
		
QUALIFY	Row_Number () Over (
PARTITION BY a.cust_id, a.acct_num
ORDER BY dedupe_order2, a.aster_ind,
				
a.score_value DESC, 
a.message_cd, a.cust_line_seq_id) = 1
		
) a
	
QUALIFY	Row_Number () Over (
PARTITION BY a.cust_id, a.acct_num
ORDER BY dedupe_order3, a.aster_ind,
			
a.score_value DESC, 
a.message_cd, a.cust_line_seq_id) = 1
	
) a
;




/*
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
'AAL_VOICE_SL_ESP_P' as message_cd,
a.trtmnt_ctrl_ind,
a.pull_thru,

a.reactive,

a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

WHERE	message_cd='AAL_VOICE_SL_DYN_ESP_P';


*/


--THIS PART FORCES THE REST OF THE MBB TARGETS INTO SL VOICE: INBOUND (new 11/19)
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
--update SL DYN (3 OF 4)		
CASE
/*		WHEN b.acct_pho_lines > 1 THEN
'AAL_VOICE_ESP_P'  */
		
WHEN b.acct_pho_lines = 1 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('00', '09', '12', '13', '15', '21', '32', '36', '38', '49',
'54', '56', '61', '63', '68', '70', '72', '78', '79', '80', 
'81', '85', '87', '89', '90'
)		--updated 6/30/25
				
THEN
'AAL_VOICE_SL_P'		
		
WHEN b.acct_pho_lines = 1 AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('01', '02', '03', '04', '05', '06', '07', '08', '10', '11',
'14', '16', '17', '18', '19', '20', '22', '23', '24', '25', 
'26', '27', '28', '29', '30', '31', '33', '34', '35', '37', 
'39', '40', '41', '42', '43', '44', '45', '46', '47', '48', 
'50', '51', '52', '53', '55', '57', '58', '59', '60', '62', 
'64', '65', '66', '67', '69', '71', '73', '74', '75', '76', 
'77', '82', '83', '84', '86', '88', '91', '92', '93', '94', 
'95', '96', '97', '98', '99'
) --updated 6/30/25
THEN 
'AAL_VOICE_SL_DYN_P'

end AS message_cd,

a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.eom_lines = 1
AND b.mth_typ = 'C'

LEFT OUTER JOIN hqmkt_prd_qmtbls.knw_vbm_test_lines_1 c
ON a.cust_id = c.cust_id
AND a.cust_line_seq_id = c.cust_line_seq_id

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
	
WHERE a.message_cd LIKE '%ESP%'   --changed to ESP filter vs list 04112025 JC
	
GROUP BY 1,2	
) d 
ON a.cust_id = d.cust_id
AND a.acct_num = d.acct_num

WHERE	a.message_cd = 'AAL_MBB_P'
AND c.cust_id IS NULL
AND d.cust_id IS NULL
AND Acct_pho_lines = 1  --LIMIT TO SL
;
--4/29/25 - SL removed from hierarchy, 5/5/25 - added back 
--5/30/25 - SL removed from hierarchy
--6/30/25 -- added back

--THIS PART FORCES THE REST OF THE MBB TARGETS INTO VOICE: ESP
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
--update SL DYN  (4 OF 4)		
CASE
WHEN b.acct_pho_lines > 1 THEN
'AAL_VOICE_ESP_P'  
		
WHEN b.acct_pho_lines = 1 
AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('00', '09', '12', '13', '15', '21', '32', '36', '38', '49',
'54', '56', '61', '63', '68', '70', '72', '78', '79', '80', 
'81', '85', '87', '89', '90'
)		--updated 6/30/25
				
THEN
'AAL_VOICE_SL_ESP_P'		
		
WHEN b.acct_pho_lines = 1 AND Substr (a.cust_id, Length (a.cust_id)-1 , 2)  
IN ('01', '02', '03', '04', '05', '06', '07', '08', '10', '11',
'14', '16', '17', '18', '19', '20', '22', '23', '24', '25', 
'26', '27', '28', '29', '30', '31', '33', '34', '35', '37', 
'39', '40', '41', '42', '43', '44', '45', '46', '47', '48', 
'50', '51', '52', '53', '55', '57', '58', '59', '60', '62', 
'64', '65', '66', '67', '69', '71', '73', '74', '75', '76', 
'77', '82', '83', '84', '86', '88', '91', '92', '93', '94', 
'95', '96', '97', '98', '99'
) --updated 6/30/25
THEN 
CASE 
			
WHEN  b.device_grouping='APPLE' AND OFFER_VALUE = '630' THEN 'AAL_VCE_SL_DYN630_IOS_ESP_P'
WHEN  b.device_grouping='APPLE' AND OFFER_VALUE = '730' THEN 'AAL_VCE_SL_DYN730_IOS_ESP_P'
WHEN  b.device_grouping='APPLE' AND OFFER_VALUE = '830' THEN 'AAL_VCE_SL_DYN830_IOS_ESP_P'
WHEN  b.device_grouping='APPLE' AND OFFER_VALUE = '930' THEN 'AAL_VCE_SL_DYN930_IOS_ESP_P'
--WHEN  b.device_grouping='APPLE' AND OFFER_VALUE = '1030' THEN 'AAL_VCE_SL_DYN1030_IOS_ESP_P'
			
WHEN  b.device_grouping='ANDROID' AND OFFER_VALUE = '600' THEN 'AAL_VCE_SL_DYN600_ANDR_ESP_P'
WHEN  b.device_grouping='ANDROID' AND OFFER_VALUE = '700' THEN 'AAL_VCE_SL_DYN700_ANDR_ESP_P'
WHEN  b.device_grouping='ANDROID' AND OFFER_VALUE = '800' THEN 'AAL_VCE_SL_DYN800_ANDR_ESP_P'
WHEN  b.device_grouping='ANDROID' AND OFFER_VALUE = '900' THEN 'AAL_VCE_SL_DYN900_ANDR_ESP_P'
--WHEN  b.device_grouping='ANDROID' AND OFFER_VALUE = '1000' THEN 'AAL_VCE_SL_DYN1K_ANDR_ESP_P'
end	
end AS message_cd,

a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.eom_lines = 1
AND b.mth_typ = 'C'

LEFT OUTER JOIN hqmkt_prd_qmtbls.knw_vbm_test_lines_1 c
ON a.cust_id = c.cust_id
AND a.cust_line_seq_id = c.cust_line_seq_id

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
where a.message_cd like '%ESP%'   --changed to ESP filter vs list 04112025 JC
GROUP BY 1,2
) d 
ON a.cust_id = d.cust_id
AND a.acct_num = d.acct_num

LEFT JOIN udm_prd_tbls.aia_dynamic_offers P
ON A.CUST_ID = P.CUST_ID 
AND A.ACCT_NUM = P.ACCT_NUM --AND A.MTN = P.MTN
AND P.RPT_DT = (SELECT	Max(RPT_DT) FROM  udm_prd_tbls.aia_dynamic_offers where LIST_ID = 'dynamic_offer_20230815')  --7/11/25  adding where condition since FWA DYN started-  in case diff rpt_dts
AND P.LIST_ID = 'dynamic_offer_20230815' ---dynamic offer list ID from Sai 04/15/24
AND P.offer_set IN 
('AAL_SL_DYN_APL_102224_OS',
--'AAL_SL_DYN_SAM_102224_OS'
'AAL_SL_DYN_SAM_020625_OS'
)

WHERE	a.message_cd = 'AAL_MBB_P'
AND c.cust_id IS NULL
AND d.cust_id IS NULL	
;




--THIS PART is WORK AROUND to INCLUDE BYOD in ESP rotation without having the name ENDS with ESP. MM04082022


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

'AAL_BYOD_PHONE_SVC_P' AS message_cd,

a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
WHERE	message_cd='AAL_BYOD_PHONE_SVC_TMP_ESP_P';




--4/29/25 - SL removed from hierarchy, 5/5/25  - added back
--5/30/25 - SL removed from hierarchy
--6/30/25 -- added back

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE WHEN message_cd ='AAL_VCE_SL_DYN630_IOS_ESP_P' THEN 'AAL_VCE_SL_DYN630_ESP_IOS_P'
WHEN message_cd='AAL_VCE_SL_DYN730_IOS_ESP_P' THEN 'AAL_VCE_SL_DYN730_ESP_IOS_P'
WHEN message_cd='AAL_VCE_SL_DYN830_IOS_ESP_P' THEN 'AAL_VCE_SL_DYN830_ESP_IOS_P'
WHEN message_cd='AAL_VCE_SL_DYN930_IOS_ESP_P' THEN 'AAL_VCE_SL_DYN930_ESP_IOS_P'
--WHEN message_cd='AAL_VCE_SL_DYN1030_IOS_ESP_P' THEN 'AAL_VCE_SL_DYN1030_ESP_IOS_P'
WHEN message_cd='AAL_VCE_SL_DYN600_ANDR_ESP_P' THEN 'AAL_VCE_SL_DYN600_ESP_ANDR_P'
WHEN message_cd='AAL_VCE_SL_DYN700_ANDR_ESP_P' THEN 'AAL_VCE_SL_DYN700_ESP_ANDR_P'
WHEN message_cd='AAL_VCE_SL_DYN800_ANDR_ESP_P' THEN 'AAL_VCE_SL_DYN800_ESP_ANDR_P'
WHEN message_cd='AAL_VCE_SL_DYN900_ANDR_ESP_P' THEN 'AAL_VCE_SL_DYN900_ESP_ANDR_P'
--WHEN message_cd='AAL_VCE_SL_DYN1K_ANDR_ESP_P' THEN 'AAL_VCE_SL_DYN1K_ESP_ANDR_P'


end AS message_cd,

a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
WHERE	message_cd
IN
('AAL_VCE_SL_DYN630_IOS_ESP_P',
'AAL_VCE_SL_DYN730_IOS_ESP_P',
'AAL_VCE_SL_DYN830_IOS_ESP_P',
'AAL_VCE_SL_DYN930_IOS_ESP_P',
--'AAL_VCE_SL_DYN1030_IOS_ESP_P',
'AAL_VCE_SL_DYN600_ANDR_ESP_P',
'AAL_VCE_SL_DYN700_ANDR_ESP_P',
'AAL_VCE_SL_DYN800_ANDR_ESP_P',
'AAL_VCE_SL_DYN900_ANDR_ESP_P'
--'AAL_VCE_SL_DYN1K_ANDR_ESP_P'

)
;


DELETE FROM hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
WHERE  message_cd IN
('AAL_VCE_SL_DYN630_IOS_ESP_P',
'AAL_VCE_SL_DYN730_IOS_ESP_P',
'AAL_VCE_SL_DYN830_IOS_ESP_P',
'AAL_VCE_SL_DYN930_IOS_ESP_P',
'AAL_VCE_SL_DYN1030_IOS_ESP_P',
'AAL_VCE_SL_DYN600_ANDR_ESP_P',
'AAL_VCE_SL_DYN700_ANDR_ESP_P',
'AAL_VCE_SL_DYN800_ANDR_ESP_P',
'AAL_VCE_SL_DYN900_ANDR_ESP_P',
'AAL_VCE_SL_DYN1K_ANDR_ESP_P'

)
;


--THIS PART is to DELETE  google accts from some ESP MC's MM 05102024


DELETE  hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
WHERE	message_cd IN		
('AAL_WEAR250_DYN_ESP_ANDR_P'
,'AAL_WEAR200_DYN_ESP_ANDR_P'
,'AAL_WEAR150_DYN_ESP_ANDR_P'
,'AAL_WEAR100_DYN_ESP_ANDR_P'
,'AAL_WEARABLE_ESP_P'
)

AND (cust_id,acct_num) IN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.acct_num = b.acct_num
AND a.cust_line_seq_id = b.cust_line_seq_id
WHERE	message_cd IN		
('AAL_WEAR250_DYN_ESP_ANDR_P'
,'AAL_WEAR200_DYN_ESP_ANDR_P'
,'AAL_WEAR150_DYN_ESP_ANDR_P'
,'AAL_WEAR100_DYN_ESP_ANDR_P'
,'AAL_WEARABLE_ESP_P'
)
	
AND  b.mfg_nm = 'GOOGLE')
;


DELETE  hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
WHERE	message_cd IN
('AAL_VCE_SL_DYN1K_ESP_ANDR_P'
,'AAL_VCE_SL_DYN900_ESP_ANDR_P'
,'AAL_VCE_SL_DYN800_ESP_ANDR_P'
,'AAL_VCE_SL_DYN700_ESP_ANDR_P'
,'AAL_VCE_SL_DYN600_ESP_ANDR_P'
,'AAL_VOICE_SL_ESP_P'
)

AND (cust_id,acct_num) IN
(
SEL
a.cust_id,
a.acct_num
	
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.acct_num = b.acct_num
AND a.cust_line_seq_id = b.cust_line_seq_id
WHERE	message_cd IN
('AAL_VCE_SL_DYN1K_ESP_ANDR_P'
,'AAL_VCE_SL_DYN900_ESP_ANDR_P'
,'AAL_VCE_SL_DYN800_ESP_ANDR_P'
,'AAL_VCE_SL_DYN700_ESP_ANDR_P'
,'AAL_VCE_SL_DYN600_ESP_ANDR_P'
,'AAL_VOICE_SL_ESP_P'
)
AND  b.mfg_nm = 'GOOGLE')
;











/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--EMPLOYEE Message code includes Base and sales 

--added by MM 02272024
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

'AAL_EMPLOYEE_ACCTS_P' AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.vsn_cust_type_cd IN ('ME','SL')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;









--------------------------------------------------------------------------------------------
------------ Split AAL_DAILY_RESP_P into AAL_DAILY_RESP_IOS_P and AAL_DAILY_RESP_ANDR_P ----
------------ 09/20/2022 --------------------------------------------------------------------
--------------------------------------------------------------------------------------------

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL	a.cust_id
,
a.acct_num
,a.cust_line_seq_id

,
CASE 
WHEN b.device_grouping='Apple' THEN 'AAL_DAILY_RESP_ESP_IOS_P'
ELSE 'AAL_DAILY_RESP_ESP_ANDR_P' 
end AS message_cd
	
,a.trtmnt_ctrl_ind
,a.pull_thru
,a.reactive
,
a.score_centile
,a.score_value
,a.orig_value
,a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id=b.cust_id
AND a.acct_num=b.acct_num
AND a.cust_line_seq_id=b.cust_line_seq_id

WHERE	a.message_cd IN ('AAL_DAILY_RESP_ESP_P')
AND b.mth_typ='C'
;


/*
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

--THIS SECTION INSERTS THE FOUR BOUNCEBACK and  UPG MC'S
--Ipad , Sams Tablet, Apple wear and sams wear
--Q2 2022 -- MM

--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 

insert into hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
sel
a.cust_id,
a.acct_num,
a.cust_line_seq_id,


case when b.tab_wear_fl='TAB' and b.apple_sp_aal>0 and b.andr_sp_aal=0 then 'AAL_IPAD_BOUNCEBACK_150_ESP_P'
when b.tab_wear_fl='TAB' and b.apple_sp_aal=0 and b.andr_sp_aal>0 then 'AAL_SSTAB_BOUNCEBACK_P'
when b.tab_wear_fl='TAB' and b.apple_sp_aal>0 and b.andr_sp_aal>0 and b.device_grouping='Apple' then 'AAL_IPAD_BOUNCEBACK_150_ESP_P'
when b.tab_wear_fl='TAB' and b.apple_sp_aal>0 and b.andr_sp_aal>0 and b.device_grouping='Android' then 'AAL_SSTAB_BOUNCEBACK_P'
when b.tab_wear_fl='WEAR' and b.apple_sp_aal>0 and b.andr_sp_aal=0 then 'AAL_APPLE_WATCH_BOUNCEBACK_P'
when b.tab_wear_fl='WEAR' and b.apple_sp_aal=0 and b.andr_sp_aal>0 then 'AAL_SAMSUNG_WATCH_BOUNCEBACK_P'
when b.tab_wear_fl='WEAR' and b.apple_sp_aal>0 and b.andr_sp_aal>0 and b.device_grouping='Apple' then 'AAL_APPLE_WATCH_BOUNCEBACK_P'
when b.tab_wear_fl='WEAR' and b.apple_sp_aal>0 and b.andr_sp_aal>0 and b.device_grouping='Android' then 'AAL_SAMSUNG_WATCH_BOUNCEBACK_P'
end as message_cd,
	 
case when a.phog = 'Y' then 'P'
when a.ohog_AAL = 'Y' then 'O'
else 'T' end as trtmnt_ctrl_ind,

'N' as pull_thru,


case when a.crm_elig = 'N' then 'Y' else 'N' end as reactive,


a.acct_aal_tbl_wly_cent as score_centile,
a.acct_aal_tbl_wly_val as score_value,
a.acct_aal_tbl_wly_orig_val as orig_value,
'N' as aster_ind

from hqmkt_prd_qmtbls.knw_message_code_base_1 a
inner join 

(select 

a.cust_id,
a.acct_num,
b.cust_line_seq_id,
case when a.acct_aal_tbl_wly_cent >= a.acct_aal_wearable_wly_cent then 'TAB'
else 'WEAR' end as tab_wear_fl,
b.apple_sp_aal,
b.andr_sp_aal,
a.device_grouping
--count(*) as lines
from hqmkt_prd_qmtbls.knw_message_code_base_1 a

inner join hqmkt_prd_qmtbls.knw_message_code_base_1 z
on a.cust_id=z.cust_id
and a.acct_num=z.acct_num
and a.cust_line_seq_id=z.cust_line_seq_id
and z.primary_line='Y'

inner join 
(
select a.cust_id,a.acct_num,b.cust_line_seq_id,
sum(case when eqp_desc='Apple Smartphone' then 1 else 0 end) apple_sp_aal,
sum(case when eqp_desc='Android Smartphone' then 1 else 0 end) as andr_sp_aal
--count(*) as accts
from ntl_prd_allvm.equip_sum_fact_v a
left join hqmkt_prd_qmtbls.knw_message_code_base_1 b
on a.cust_id=b.cust_id
and a.acct_num=b.acct_num
and b.primary_line='Y'
where a.fin_tot_flag = 'Y'
and a.net_sales > 0
and a.pymnt_dt >= date - 25
group by 1,2,3

) b
on a.cust_id = b.cust_id
and a.acct_num = b.acct_num



where a.cust_id not in 
(
select distinct cust_id
from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
--where message_cd in ('AAL_TAB_ESP_IOS_P')
where message_cd in ('AAL_TAB_ESP_P','AAL_WEARABLE_ESP_P')
)

and a.mth_typ = 'C' --pulls current month so you don't need to change any dates
and a.eom_lines = 1 --line is active
and a.mtn_status_ind in ('A','S') --line is active, second source to be extra safe
and a.acct_estb_dt < date - 60 --account is over 60 days old, so we skip the onboard period
and a.past_due_ind = 'N' --no past due
and a.crm_elig = 'Y' --eligible for crm campaign, excludes certain eleu profiles
and a.acct_tot_lines < 30 --account has under 30 lines
and a.line_in_svc_cnt < 30 --account has under 30 lines, second source to be extra safe
--and a.acct_aal_tbl_wly_cent >= a.acct_aal_wearable_wly_cent

group by 1,2,3,4,5,6,7
) b
on a.cust_id=b.cust_id
and a.acct_num=b.acct_num
and a.cust_line_seq_id=b.cust_line_seq_id

and message_cd is not null
--qualify row_number () over (partition by a.cust_id, a.acct_num
--order by a.cust_line_seq_id asc) = 1
;

---- 637,771


*/


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--THIS SECTION CREATES the 2 Broad Message codes  
--Split OS, most of the base 31M accounts
--Eric n MM 07182022

--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
CASE 
WHEN device_grouping='Apple' THEN 'AAL_IOS_P' 
ELSE 'AAL_ANDR_P' end
---device_grouping='Android' then 'AAL_ANDR_P' 
AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) 
OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025	
;


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--AAL_IOS_SMSPUSH_P
--JC 2025_06_20

--2025-06-23 - UPDATED TO ADD IN RCS TEST SUPP
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SELECT A.CUST_ID, A.ACCT_NUM, A.CUST_LINE_SEQ_ID
,'AAL_IOS_SMSPUSH_P' AS MESSAGE_CD
,TRTMNT_CTRL_IND, PULL_THRU, REACTIVE, SCORE_CENTILE, SCORE_VALUE, ORIG_VALUE, ASTER_IND
FROM 	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 A
INNER JOIN ADBCMP_PRD_ALLVM.CUSTOMER_PROFILE_UNIV_ALL_V P ON A.CUST_ID = P.CUST_ID AND A.ACCT_NUM = P.ACCT_NUM AND A.CUST_LINE_SEQ_ID = P.CUST_LINE_SEQ_ID
LEFT OUTER JOIN
(--JEFF M BYOD RCS TEST COHORT - NEED TO SUPP
SELECT tp.cust_id, tp.acct_num
FROM ntl_prd_allvm.tp_crm_delivery_v tp
WHERE 
vehicle_sys_cd = 'ACE'
AND campaign_nm LIKE 'AAL_ESP_BYODplusDiscount_NVCT_30638_MV'
AND event_dt = DATE '2025-06-19'
AND segment_nm_2 LIKE ANY ('S1%','S2%','S3%','S4%','S5%') -- BYODplus TEST groups
GROUP BY 1,2
)TP ON A.CUST_ID = TP.CUST_ID AND A.ACCT_NUM = TP.ACCT_NUM
WHERE message_cd = 'AAL_IOS_P'
AND ( 
(SMS_BASE = 'Y'  AND SMS_SPRSS_IND = 'N') --SMS 
or
(PUSH_BASE = 'Y' AND PUSH_ENABLED = 'Y' AND PUSH_LESS_DNS = 'Y') --PUSH
)
AND TP.CUST_ID IS NULL --NOT PART OF TEST COHORT
;




--Add O/S splits to ESP MCs
/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
where message_cd in
(
'AAL_MBB_ESP_IOS_P'
,'AAL_MBB_ESP_ANDR_P'
,'AAL_VOICE_SL_ESP_IOS_P'
,'AAL_VOICE_SL_ESP_ANDR_P'
,'AAL_VOICE_ESP_IOS_P'
,'AAL_VOICE_ESP_ANDR_P'
,'AAL_TAB_ESP_IOS_P'
,'AAL_TAB_ESP_ANDR_P'
,'AAL_WEARABLE_ESP_IOS_P'
,'AAL_WEARABLE_ESP_ANDR_P'
,'AAL_DAILY_RESP_ESP_IOS_P'
,'AAL_DAILY_RESP_ESP_ANDR_P'
,'AAL_WEBSEARCH_2021_ESP_IOS_P'
,'AAL_WEBSEARCH_2021_ESP_ANDR_P'
,'AAL_TAB_IOS_P'
,'AAL_TAB_ANDR_P'
,'AAL_DO_GET_TABLET_IOS_P'
,'AAL_DO_GET_TABLET_ANDR_P'
)
;
*/

-----  OSOSOSOSOS  
----- Split the message codes by APPLE AND ANDROID , iOS vs ANDR

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

CASE 
WHEN b.device_grouping = 'Apple' THEN 
Substr (a.message_cd, 1,
Length (a.message_cd)-1) || 'IOS_P'
ELSE 
Substr (a.message_cd, 1, Length (a.message_cd)-1) || 'ANDR_P'
end AS new_message_cd,

a.trtmnt_ctrl_ind,
a.pull_thru,
a.reactive,
a.score_centile,
a.score_value,
a.orig_value,
a.aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.mth_typ = 'C'
AND b.eom_lines = 1

WHERE	a.message_cd
IN
(
'AAL_MBB_ESP_P',
'AAL_TAB_ESP_P',
'AAL_VOICE_ESP_P',
'AAL_VOICE_SL_ESP_P',
'AAL_VOICE_SL_P',
'AAL_VOICE_SL_DYN_P',
'AAL_VOICE_SL_DYN_ESP_P',
'AAL_WEARABLE_ESP_P',
'AAL_WEBSEARCH_2021_ESP_P',
'AAL_DAILY_RESP_ESP_P',
'AAL_WEARABLE_P',  --3/10/25
'AAL_TAB_P',
'AAL_DO_GET_TABLET_P',
'AAL_WEARABLE_DYN_P',
'AAL_TAB_DYN_P',
'AAL_WEAR250_DYN_ESP_P', 
'AAL_WEAR200_DYN_ESP_P',
'AAL_WEAR150_DYN_ESP_P',
'AAL_WEAR100_DYN_ESP_P',
'AAL_TAB250_DYN_ESP_P',
'AAL_TAB200_DYN_ESP_P',
'AAL_TAB150_DYN_ESP_P',
'AAL_TAB100_DYN_ESP_P',

'AAL_WEAR250_DYN_P',   --4/28/25 ADDED WEAR AND TAB OFFER AMT MCs FOR FC/LT
'AAL_WEAR200_DYN_P',
'AAL_WEAR150_DYN_P',
'AAL_WEAR100_DYN_P',
'AAL_TAB250_DYN_P',
'AAL_TAB200_DYN_P',
'AAL_TAB150_DYN_P',
'AAL_TAB100_DYN_P',

'AAL_SL_RET_RET_ESP_P',
'AAL_SL_RET_DIG_ESP_P'
)
AND new_message_cd IS NOT NULL
;





/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Wearable - Apple and Andr (moved to post OSOSOS to populate based on OS spilt MCs

--Added by JC 3/11/25
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SELECT A.CUST_ID, A.ACCT_NUM, CUST_LINE_SEQ_ID
,CASE WHEN MESSAGE_CD = 'AAL_WEARABLE_ANDR_P' THEN 'AAL_WEARABLE_ANDROID_P'
WHEN MESSAGE_CD = 'AAL_WEARABLE_IOS_P' THEN 'AAL_WEARABLE_APPLE_P'
ELSE NULL END AS MESSAGE_CD
,TRTMNT_CTRL_IND, PULL_THRU, REACTIVE, SCORE_CENTILE, SCORE_VALUE, ORIG_VALUE, ASTER_IND
FROM 	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 A
WHERE message_cd IN ('AAL_WEARABLE_ANDR_P', 'AAL_WEARABLE_IOS_P')  --BAU ONLY
;




/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--This creates 7  Message code for Paid Search to supress CPNI list from original MCs

--Added by MM 08182022
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

---- insert the cpni  records in a table 

INSERT INTO hqmkt_prd_qmtbls.mm_cpni_lines

SELECT	CUST_ID,
ACCT_NUM, CUST_LINE_SEQ_ID 
FROM
(
SELECT	A.CUST_ID
, A.ACCT_NUM
, A.CUST_LINE_SEQ_ID
, B.ORIG_ACCT_ESTB_DT
,
B.ACCT_ESTB_DT
, A.LINE_ACT_DT
, B.ACCT_STATUS_IND
, B.VSN_CUST_TYPE_CD
,
A.LAST_UPD_DT AS LINE_LAST_UPD_DT
, B.LAST_UPD_DT AS ACCT_LAST_UPD_DT
,
A.PREPAID_IND
-- Creating a new flag 'NC' to identify New Connects within the last 33 days otherwise, the CPNI_IND is used.
-- The ONLY purpose for creating this additional flag is for count creation / validation.  It has not bearing on selection criteria.
,
CASE 
WHEN (B.ACCT_ESTB_DT >= Current_Date - 33 
OR A.LINE_ACT_DT >= Current_Date - 33) THEN 'NC' 
ELSE A.CPNI_IND
END AS CPNI_IND
FROM	NTL_PRD_ALLVM.CUST_ACCT_LINE_V A
JOIN NTL_PRD_ALLVM.CUST_ACCT_V B 
ON A.CUST_ID = B.CUST_ID
AND A.ACCT_NUM = B.ACCT_NUM
-- Where statement filters for:
-- CPNI_IND indicators  (Values Y or O)
-- OR acct_estb_dt -  new within the last 33 days
-- OR line_act_dt - new within the last 33 days
WHERE	(A.CPNI_IND IN ('Y',
'O') 
OR B.ACCT_ESTB_DT >= Current_Date - 33 
OR A.LINE_ACT_DT >= Current_Date - 33)
-- A customer may override a previously selected option.  The qualify statement deduplicates records forcing the latest customer disposition
-- sorting in descending last_upd_dt
QUALIFY	Row_Number() Over(
PARTITION BY A.CUST_ID, A.ACCT_NUM, A.CUST_LINE_SEQ_ID 
ORDER BY A.LAST_UPD_DT DESC, B.LAST_UPD_DT DESC)= 1
) OPTOUT
GROUP BY 1,2,3
;

--6/2/25 - removed the MCs







/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Smart Family Promotion MC for no App installed or no gizmo device
--By Drew and Mo on 1241016
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
CASE WHEN b.CHILD_IN_HSHLD_FLAG = 'Y' THEN 'PRD_KIDS_NO_SF_GZMO_P'
ELSE 'PRD_NO_KIDS_NO_SF_GZMO_P' end AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'

ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM    hqmkt_prd_qmtbls.knw_message_code_base_1 a

LEFT JOIN (

SELECT a.CUST_ID,
a.ACCT_NUM,
d.CHILD_IN_HSHLD_FLAG,
Max(CASE WHEN Upper(a.DEVICE_BRAND_NM) LIKE '%GIZMO%' THEN 1 ELSE 0 end) AS GIZMO_FLAG,
Max(CASE WHEN Upper(c.SVC_PROD_DESC) LIKE '%SMART FAM%' AND 
(b.SVC_PROD_DEACT_DT >= Current_Date OR b.SVC_PROD_DEACT_DT IS NULL) THEN 1 ELSE 0 end) AS SMART_FAMILY_FLAG
		    
FROM HQMKT_PRD_QMTBLS.KNW_MESSAGE_CODE_BASE_1 a
	
LEFT JOIN udm_prd_tbls.cust_acct_svc_prod_trans b
ON a.CUST_ID = b.CUST_ID
AND a.ACCT_NUM = b.ACCT_NUM
	    
LEFT JOIN udm_prd_tbls.service_product c
ON b.SVC_PROD_ID = c.SVC_PROD_ID
	    
LEFT JOIN (
	
SEL b.cust_id, 
b.acct_num, 
Max(a.CHILD_IN_HSHLD_FLAG) CHILD_IN_HSHLD_FLAG
FROM NTL_PRD_ACXVM.ACXIOM_DEMOGRAPHIC_V a
INNER JOIN NTL_PRD_ACXVM.CUST_ACCT_DEMOGRAPHIC_V b
ON a.CONSUMER_LINK=b.CONSUMER_LINK
AND a.ADDRESS_LINK=b.ADDRESS_LINK	
INNER JOIN udm_prdusr_allvm.crm_cust_acct_line_prcng_mpng_v c
ON b.cust_id = c.cust_id
AND b.acct_num = c.acct_num
GROUP BY 1,2
	
) d
ON a.cust_id = d.cust_id
AND a.acct_num = d.acct_num
	
WHERE a.mth_typ = 'C' 
AND a.eom_lines = 1 
AND a.mtn_status_ind IN ('A','S') 
	    
GROUP BY 1,2,3

) b
ON a.cust_id = b.cust_id
AND a.acct_num = b.acct_num
AND b.GIZMO_FLAG = 0 				-- Exclude customers with a Gizmo device
AND b.SMART_FAMILY_FLAG = 0			-- Exclude customers that have Smart Family


WHERE   a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
AND a.vsn_cust_type_cd IN ('BE','PE')
;


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--This creates the message codes for Future Disconect accounts

--Added by DH 12042024 - Commented out on 12/5 due to change in direction from strategy team
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

--INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
--SEL
--a.cust_id,
--a.acct_num,
--a.cust_line_seq_id,
--
--		CASE
--		WHEN a.acct_pho_lines >= 2 AND b.PORT_OUT_FLAG = 0 AND a.dmsf_highest_in_mkt_score > 70 THEN 'PRD_FUT_DISCO_ML_INMKT_P'
--		WHEN a.acct_pho_lines >= 2 AND b.PORT_OUT_FLAG = 1 AND a.dmsf_highest_in_mkt_score > 70 THEN 'PRD_FUT_DISCO_ML_PO_INMKT_P'
--        WHEN a.acct_pho_lines = 1 AND a.dmsf_highest_in_mkt_score > 70 THEN 'PRD_FUT_DISCO_SL_INMKT_P'
--        ELSE 'PRD_FUT_DISCO_EE_P'
--		END AS message_cd,
--		
--		CASE
--			WHEN a.phog = 'Y' THEN 'P'
--			WHEN a.ohog_AAL = 'Y' THEN 'O'
----when a.ohog_UPGRADE = 'Y' then 'O'
----when a.ohog_PRICING = 'Y' then 'O'
--			ELSE 'T'
--		end AS trtmnt_ctrl_ind,
----normally we won't have pull thru for AAL, but keeping the placeholder just in case
--'N' AS pull_thru,
----automatically flags lines that are not eligible for outbound
----should not need to touch this line of code
--		CASE
--			WHEN a.crm_elig = 'N' THEN 'Y'
--			ELSE 'N'
--		end AS reactive,
--a.acct_aal_v_wly_cent AS score_centile,
--a.acct_aal_v_wly_val AS score_value,
--a.acct_aal_v_wly_orig_val AS orig_value,
--'N' AS aster_ind
--
--FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
--
--INNER JOIN (
--
--	select dla.CUST_ID,
--		dla.ACCT_NUM,
--		min(dla.ACTIVITY_DT) as ACTIVITY_DT,
--		max(case when dla.CHANGE_REAS_CD = '91' then 1 else 0 end) as PORT_OUT_FLAG
--		
--	from NTL_PRD_ALLVM.DLY_LINE_ACTIVITY_PENDING_V dla
--	
--	inner join NTL_PRD_ALLVM.SUBS_SUM_FACT_V ssf
--		on dla.CUST_ID = ssf.CUST_ID
--		and dla.ACCT_NUM = ssf.ACCT_NUM
--		and dla.CUST_LINE_SEQ_ID = ssf.CUST_LINE_SEQ_ID
--		and TD_MONTH_BEGIN(dla.TRANS_DT) = ssf.RPT_MTH
--	
--	left join NTL_PRD_ALLVM.CHANGE_REASON_V cr
--		on dla.CHANGE_REAS_CD = cr.CHANGE_REAS_CD
--	
--	where dla.ACTIVITY_DT >= date
--		and ssf.DATA_TIER in ('Smartphone','Basic')
--		and dla.CHANGE_REAS_CD not in ('C1','C5','C4','34','GG')
--		and dla.ACTIVITY_CD in ('DE','D3','D6')
--		and cr.CHANGE_REAS_DESC not in ('Financial Hardship', 'Moving to New Location', 'Moving out VZW footprint',
--			'STOLEN / LOST', 'Activatd New MTN with VZW', 'Domestic Violence', 'Cust Scheduling Issues', 
--			'Never Activated','FRAUD/SUBSCRIPTION')
--		--Standard filters:
--		and ssf.VSN_CUST_TYPE_CD = 'PE'
--		and ssf.REV_GEN_IND = 'Y'
--	    and ssf.MANAGED_IND in ('C','D')
--	    and COALESCE(ssf.PREPAID_IND,'X') <> 'Y'
--	    and COALESCE(ssf.LINE_TYPE_CD,'W') NOT IN ('H','O','T')
--	    
--	group by 1,2
--
--) b
--
--	ON a.CUST_ID = b.CUST_ID
--	AND a.ACCT_NUM = b.ACCT_NUM
--	--AND a.CUST_LINE_SEQ_ID = b.CUST_LINE_SEQ_ID
--
--WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
--	AND a.eom_lines = 1 --line is active
--	AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
--	--AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--	AND a.past_due_ind = 'N' --no past due balance over 60 days old
--	AND (a.crm_elig = 'Y' --eligible for outbound campaigns
--	OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
--	AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--	--AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
--	--AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
--	AND message_cd IS NOT NULL
--	AND a.vsn_cust_type_cd IN ('BE','PE')
--
--;

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--This creates the message codes for Future Disconect accounts, combined into 1 MC  (Revised strategy from above)
--Added 12/6/24 
--updated 6/6/25
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,

'PRD_FUT_DISCO_PO_P' AS message_cd,
		
CASE
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T'
end AS trtmnt_ctrl_ind,
--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,
--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE
WHEN a.crm_elig = 'N' THEN 'Y'
ELSE 'N'
end AS reactive,
a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

INNER JOIN (

SELECT dla.CUST_ID,
dla.ACCT_NUM,
dla.CHANGE_REAS_CD,
Min(dla.ACTIVITY_DT) AS ACTIVITY_DT,
Max(CASE WHEN dla.CHANGE_REAS_CD = '91' THEN 1 ELSE 0 end) AS PORT_OUT_FLAG
		
FROM NTL_PRD_ALLVM.DLY_LINE_ACTIVITY_PENDING_V dla
	
INNER JOIN NTL_PRD_ALLVM.SUBS_SUM_FACT_V ssf
ON dla.CUST_ID = ssf.CUST_ID
AND dla.ACCT_NUM = ssf.ACCT_NUM
AND dla.CUST_LINE_SEQ_ID = ssf.CUST_LINE_SEQ_ID
AND Td_Month_Begin(dla.TRANS_DT) = ssf.RPT_MTH
	
WHERE dla.ACTIVITY_DT >= DATE
AND ssf.DATA_TIER IN ('Smartphone','Basic')
AND dla.CHANGE_REAS_CD = '91'							-- Change Code for PORT OUT DISCONNECTS
AND dla.ACTIVITY_CD IN ('DE','D3','D6')
--Standard filters:
AND ssf.VSN_CUST_TYPE_CD = 'PE'
AND ssf.REV_GEN_IND = 'Y'
AND ssf.MANAGED_IND IN ('C','D')
AND Coalesce(ssf.PREPAID_IND,'X') <> 'Y'
AND Coalesce(ssf.LINE_TYPE_CD,'W') NOT IN ('H','O','T')
AND dla.ORDER_STATUS_IND <> 'LD'
	    
GROUP BY 1,2,3

) b

ON a.CUST_ID = b.CUST_ID
AND a.ACCT_NUM = b.ACCT_NUM
--AND a.CUST_LINE_SEQ_ID = b.CUST_LINE_SEQ_ID

WHERE	a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
--AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
--AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND message_cd IS NOT NULL
AND a.vsn_cust_type_cd IN ('BE','PE')
;



/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--This creates the message codes for Future Dated Non port out Disconect accounts  Added by MM 05/02/2025
--updated 6/6/25
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

INSERT INTO UDM_PRDUSR_TBLS.CUST_ACCT_LINE_MESSAGE_MANUAL
(SOR_ID, CUST_ID, CUST_LINE_SEQ_ID, EFF_DT, EXP_DT, CURR_PREV_IND, ACCT_NUM, 
MESSAGE_CD, INSERT_TIMESTAMP, TRTMNT_CTRL_IND, ACTION_CD, SRC_LOAD_ID)
SEL 
'V' AS SOR_ID,
a.CUST_ID,
a.CUST_LINE_SEQ_ID AS CUST_LINE_SEQ_ID,
Current_Date AS EFF_DT,
DATE '9999-12-31' AS EXP_DT,
'C' AS CURR_PREV_IND,
a.ACCT_NUM,
'PRD_FUT_DISCO_NPO_P' AS MESSAGE_CD,
Current_Time(TIMESTAMP(0)) AS INSERT_TIMESTAMP,
CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,
'U' ACTION_CD,
'U' AS SRC_LOAD_ID 
FROM    hqmkt_prd_qmtbls.knw_message_code_base_1 a
 
 
LEFT JOIN (

SEL DISTINCT CUST_ID, ACCT_NUM  FROM 
(
SELECT dla.CUST_ID,
dla.ACCT_NUM,
--DLA.CUST_LINE_SEQ_ID, 
dla.CHANGE_REAS_CD,
Min(dla.ACTIVITY_DT) AS ACTIVITY_DT,
Max(CASE WHEN dla.CHANGE_REAS_CD = '91' THEN 1 ELSE 0 end) AS PORT_OUT_FLAG
        
FROM NTL_PRD_ALLVM.DLY_LINE_ACTIVITY_PENDING_V dla
    
INNER JOIN NTL_PRD_ALLVM.SUBS_SUM_FACT_V ssf
ON dla.CUST_ID = ssf.CUST_ID
AND dla.ACCT_NUM = ssf.ACCT_NUM
AND dla.CUST_LINE_SEQ_ID = ssf.CUST_LINE_SEQ_ID
AND Td_Month_Begin(dla.TRANS_DT) = ssf.RPT_MTH
    
WHERE dla.ACTIVITY_DT >= DATE
AND ssf.DATA_TIER IN ('Smartphone','Basic')
AND dla.CHANGE_REAS_CD <> '91'                          -- Change Code for PORT OUT DISCONNECTS
AND dla.CHANGE_REAS_CD NOT IN ('C1','C5','C4','34','GG') ---DEATH, DECEASED, ILLNESS, MILITARY
AND dla.ACTIVITY_CD IN ('DE','D3','D6')
--Standard filters:
AND ssf.VSN_CUST_TYPE_CD = 'PE'
AND ssf.REV_GEN_IND = 'Y'
AND ssf.MANAGED_IND IN ('C','D')
AND Coalesce(ssf.PREPAID_IND,'X') <> 'Y'
AND Coalesce(ssf.LINE_TYPE_CD,'W') NOT IN ('H','O','T')
AND dla.ORDER_STATUS_IND <> 'LD'
        
GROUP BY 1,2,3
) A

) DLAP

ON a.CUST_ID = DLAP.CUST_ID
AND a.ACCT_NUM = DLAP.ACCT_NUM
--AND a.CUST_LINE_SEQ_ID = DLAP.CUST_LINE_SEQ_ID
    
LEFT JOIN (
SEL DISTINCT
cust_id,
acct_num,
cust_line_seq_id,
Sum(CASE  WHEN device_grouping ='Wearable Devices' THEN 1 ELSE 0 end) AS wear_lines,
Sum(CASE  WHEN device_grouping ='Tablet' THEN 1 ELSE 0 end) AS tab_lines,
Sum(CASE  WHEN data_tier IN ('Smartphone','Basic') THEN 1 ELSE 0 end) AS pho_lines

FROM ntl_prd_allvm.subs_sum_fact_v c

WHERE c.sor_id = 'V'
AND c.prepaid_ind = 'N'
AND c.line_type_cd IN ('I','W')
AND c.rev_gen_ind = 'Y'
AND c.ending_customers = 1
AND c.rpt_mth = Td_Month_Begin(Current_Date)
AND c.vz2_segmt_cd IN
(
'PFSGL00015' ,
'PFSGL00016' ,
'PFSGL00017' 
)
GROUP BY 1,2,3
) SSF2
ON a.cust_id=SSF2.cust_id
AND a.acct_num=SSF2.acct_num
AND a.cust_line_seq_id = SSF2.cust_line_seq_id

 
WHERE   a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
--AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line 
--AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
--AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND a.vsn_cust_type_cd IN ('BE','PE')
AND DLAP.CUST_ID IS NOT NULL ---------HAS FUTURE DISCO
-- AND SSF.CUST_ID IS NOT NULL ---------ACCT ACTIVE
AND PHO_LINES > 0 ---------------------PHONE COUNT > 0 
;

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--Verizon Family MCs restricting to accounts with 3+ phone lines.

--Added by DH 12042024
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
CASE WHEN b.CHILD_IN_HSHLD_FLAG = 'Y' THEN 'PRD_KIDS_NO_SF_GZMO_3L_P'
ELSE 'PRD_NO_KIDS_NO_SF_GZMO_3L_P' end AS message_cd,

CASE 
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
ELSE 'T' 
end AS trtmnt_ctrl_ind,

--normally we won't have pull thru for AAL, but keeping the placeholder just in case
'N' AS pull_thru,

--automatically flags lines that are not eligible for outbound
--should not need to touch this line of code
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,

a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM    hqmkt_prd_qmtbls.knw_message_code_base_1 a

LEFT JOIN (

SELECT a.CUST_ID,
a.ACCT_NUM,
d.CHILD_IN_HSHLD_FLAG,
Max(CASE WHEN Upper(a.DEVICE_BRAND_NM) LIKE '%GIZMO%' THEN 1 ELSE 0 end) AS GIZMO_FLAG,
Max(CASE WHEN Upper(c.SVC_PROD_DESC) LIKE '%SMART FAM%' AND 
(b.SVC_PROD_DEACT_DT >= Current_Date OR b.SVC_PROD_DEACT_DT IS NULL) THEN 1 ELSE 0 end) AS SMART_FAMILY_FLAG
            
FROM HQMKT_PRD_QMTBLS.KNW_MESSAGE_CODE_BASE_1 a
    
LEFT JOIN udm_prd_tbls.cust_acct_svc_prod_trans b
ON a.CUST_ID = b.CUST_ID
AND a.ACCT_NUM = b.ACCT_NUM
        
LEFT JOIN udm_prd_tbls.service_product c
ON b.SVC_PROD_ID = c.SVC_PROD_ID
        
LEFT JOIN (
    
SEL b.cust_id, 
b.acct_num, 
Max(a.CHILD_IN_HSHLD_FLAG) CHILD_IN_HSHLD_FLAG
FROM NTL_PRD_ACXVM.ACXIOM_DEMOGRAPHIC_V a
INNER JOIN NTL_PRD_ACXVM.CUST_ACCT_DEMOGRAPHIC_V b
ON a.CONSUMER_LINK=b.CONSUMER_LINK
AND a.ADDRESS_LINK=b.ADDRESS_LINK   
INNER JOIN udm_prdusr_allvm.crm_cust_acct_line_prcng_mpng_v c
ON b.cust_id = c.cust_id
AND b.acct_num = c.acct_num
GROUP BY 1,2
    
) d
ON a.cust_id = d.cust_id
AND a.acct_num = d.acct_num
    
WHERE a.mth_typ = 'C' 
AND a.eom_lines = 1 
AND a.mtn_status_ind IN ('A','S')
        
GROUP BY 1,2,3

) b
ON a.cust_id = b.cust_id
AND a.acct_num = b.acct_num
AND b.GIZMO_FLAG = 0                -- Exclude customers with a Gizmo device
AND b.SMART_FAMILY_FLAG = 0         -- Exclude customers that have Smart Family


WHERE   a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
AND a.vsn_cust_type_cd IN ('BE','PE')
AND a.acct_pho_lines >= 3  -- only target accounts with 3 or more phone lines
;






/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--This creates a MC with AAL in prev 7 days, for suppression of Bounceback Comms
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */

/*
del from hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
where message_cd in
(
'AAL_EXCL_7_P'
)
;
*/
INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
'AAL_EXCL_7_P' AS message_cd,
'T' AS trtmnt_ctrl_ind,
'N' AS pull_thru,
CASE 
WHEN a.crm_elig = 'N' THEN 'Y' 
ELSE 'N' 
end AS reactive,
a.acct_aal_v_wly_cent AS score_centile,
a.acct_aal_v_wly_val AS score_value,
a.acct_aal_v_wly_orig_val AS orig_value,
'N' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a

INNER JOIN ntl_prd_allvm.dla_sum_fact_v b
ON a.cust_id = b.cust_id
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.activity_dt >= DATE - 7
AND b.activity_cd = 'AC'

WHERE	a.mth_typ = 'C'
AND a.eom_lines = 1
AND NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
;



/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--PEGA PILOT MCs - DIRECT INTO ESP. NO OHOG.  WILL OVERLAP W SL BAU ESP CODES.  EXCLUDES SL DYN BY DESIGN.
--POC: YASEEN SAYANI AND ERICA MARTINEZ

--Added by JC 3/3/25
--Edited 3/13/25 - delete out overlapping leads from BAU MCs 
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


/*INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SELECT A.CUST_ID, A.ACCT_NUM, CUST_LINE_SEQ_ID
,CASE WHEN MESSAGE_CD = 'AAL_VOICE_SL_ESP_ANDR_P' THEN 'AAL_VOICE_SL_PEGA_ANDR_ESP_P'
WHEN MESSAGE_CD = 'AAL_VOICE_SL_ESP_IOS_P' THEN 'AAL_VOICE_SL_PEGA_IOS_ESP_P'
ELSE NULL END AS MESSAGE_CD
,TRTMNT_CTRL_IND, PULL_THRU, REACTIVE, SCORE_CENTILE, SCORE_VALUE, ORIG_VALUE, ASTER_IND
FROM 	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 A
INNER JOIN
(
SELECT DISTINCT CUST_ID, ACCT_NUM
FROM NTL_PRD_QMTBLS.CRM_CUST_ACCT_NBX_CONTENT
WHERE pilot_grp = 'A'
AND Current_Date BETWEEN eff_dt AND exp_dt

)B ON A.CUST_ID = B.CUST_ID AND A.ACCT_NUM = B.ACCT_NUM
WHERE message_cd IN ('AAL_VOICE_SL_ESP_ANDR_P', 'AAL_VOICE_SL_ESP_IOS_P')  --BAU ONLY. NO DYN
AND TRTMNT_CTRL_IND IN ('T', 'P')  --EXCL OHOG
;

SELECT MESSAGE_CD, COUNT(*) FROM hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 
WHERE MESSAGE_CD IN ('AAL_VOICE_SL_ESP_ANDR_P', 'AAL_VOICE_SL_ESP_IOS_P', 'AAL_VOICE_SL_PEGA_ANDR_ESP_P', 'AAL_VOICE_SL_PEGA_IOS_ESP_P') 
GROUP BY 1;


DELETE FROM  hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
WHERE MESSAGE_CD IN ('AAL_VOICE_SL_ESP_ANDR_P', 'AAL_VOICE_SL_ESP_IOS_P') 
AND (CUST_ID, ACCT_NUM) IN 
(
SELECT DISTINCT CUST_ID, ACCT_NUM
FROM NTL_PRD_QMTBLS.CRM_CUST_ACCT_NBX_CONTENT
WHERE pilot_grp = 'A'
AND Current_Date BETWEEN eff_dt AND exp_dt
)
;*/




/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
THIS SECTION INSERTS THE TEST LINES
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


INSERT INTO hqmkt_prd_qmtbls.knw_message_code_aal_2020q3
SEL
b.cust_id,
b.acct_num,
b.cust_line_seq_id,
a.message_cd,
'T' AS trtmnt_ctrl_ind,
'N' AS pull_thru,
'N' AS reactive,
0 AS score_centile,
0 AS score_value,
0 AS orig_value,
'T' AS aster_ind

FROM	hqmkt_prd_qmtbls.knw_vbm_test_lines_1 b

INNER JOIN
(
SEL
a.message_cd
FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a
WHERE A.MESSAGE_CD NOT LIKE 'AAL%PEGA%'  --EXCLUDE PEGA PILOT MCs
GROUP BY 1
) a 
ON 1=1
;


/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--COUNT THE AAL STAGING TABLE
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


SEL
a.message_cd AS mc,
a.trtmnt_ctrl_ind AS tc,
a.pull_thru AS pt,
a.reactive AS re,
a.aster_ind AS ast,
CASE 
WHEN a.message_cd LIKE '%_ESP_%' 
AND a.message_cd NOT IN
(
'AAL_DAILY_RESP_P'
)
THEN 'Y' 
ELSE 'N' 
end AS esp,
b.vsn_cust_type_cd AS vsn_typ,
Count (*) AS Cnt,
Count (DISTINCT (a.cust_id || ' ' || a.cust_line_seq_id)) AS lines,
Count (DISTINCT (a.cust_id || ' ' || a.acct_num)) AS accts,
Count (DISTINCT (c.cust_id || ' ' || c.cust_line_seq_id)) AS test_lines,
Min (a.score_centile) AS min_cent,
Max (a.score_centile) AS max_cent,
Min (a.score_value) AS min_val,
Max (a.score_value) AS max_val,
Min (a.orig_value) AS min_orig,
Max (a.orig_value) AS max_orig

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.mth_typ = 'C'
AND b.eom_lines = 1

LEFT OUTER JOIN hqmkt_prd_qmtbls.knw_vbm_test_lines_1 c
ON a.cust_id = c.cust_id
AND a.cust_line_seq_id = c.cust_line_seq_id
WHERE NOT EXISTS (SELECT 1 FROM hqmkt_prd_qmtbls.mm_coll_accts COLL WHERE A.CUST_ID = COLL.CUST_ID AND A.ACCT_NUM = COLL.ACCT_NUM) --NOT IN COLLECTIONS; ADDED 06022025
GROUP BY 1,2,3,4,5,6,7
ORDER BY 1,2,3,4,5,6,7
;




/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--ZZZZZ
--THIS SECTION INSERTS INTO THE CALM STAGING TABLE
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */


INSERT INTO udm_prdusr_tbls.cust_acct_line_message_manual 
(sor_id,
cust_id, cust_line_seq_id, eff_dt, exp_dt, curr_prev_ind, acct_num,
		
message_cd, insert_timestamp, trtmnt_ctrl_ind, action_cd, src_load_id)

SEL
'V' AS sor_id,
a.cust_id,
a.cust_line_seq_id,
DATE AS eff_dt,
'9999-12-31' (DATE) AS exp_dt,
'C' AS curr_prev_ind,
a.acct_num,
a.message_cd,
Current_Time (TIMESTAMP(0)) AS insert_timestamp,
a.trtmnt_ctrl_ind,
'U' AS message_action_cd,
'U' AS src_load_id

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

WHERE	a.message_cd NOT IN
(
'UPG_20Q3_IP11_RTGT_C_P',
'UPG_20Q3_IP11_RTGT_C_COMM_P',
'UPG_20Q3_IP11_RTGT_B_P',
'UPG_20Q3_IP11_RTGT_B_COMM_P',
'UPG_20Q3_GS10_RTGT_C_P',
'UPG_20Q3_GS10_RTGT_C_COMM_P',
'UPG_20Q3_GS10_RTGT_B_P',
'UPG_20Q3_GS10_RTGT_B_COMM_P',
'UPG_20Q3_GS20_RTGT_C_P',
'UPG_20Q3_GS20_RTGT_C_COMM_P',
'UPG_20Q3_GS20_RTGT_B_P',
'UPG_20Q3_GS20_RTGT_B_COMM_P',
'UPG_20Q3_NOTE10_RTGT_C_P',
'UPG_20Q3_NOTE10_RTGT_C_COMM_P',
'UPG_20Q3_NOTE10_RTGT_B_P',
'UPG_20Q3_NOTE10_RTGT_B_COMM_P',
'UPG_20Q3_OTH_RTGT_C_P',
'UPG_20Q3_OTH_RTGT_C_COMM_P',
'UPG_20Q3_OTH_RTGT_B_P',
'UPG_20Q3_OTH_RTGT_B_COMM_P',
'AAL_20Q3_RTGT_BROWSE_P',
'AAL_20Q3_RTGT_CART_P'

)
;

INSERT INTO udm_prdusr_tbls.cust_acct_line_message_manual 
(sor_id,
cust_id, cust_line_seq_id, eff_dt, exp_dt, curr_prev_ind, acct_num,
		
message_cd, insert_timestamp, trtmnt_ctrl_ind, action_cd, src_load_id)

SEL
'V' AS sor_id,
a.cust_id,
a.cust_line_seq_id,
--date as eff_dt,
b.event_dt + 2 AS eff_dt,
'9999-12-31' (DATE) AS exp_dt,
'C' AS curr_prev_ind,
a.acct_num,
a.message_cd,
Current_Time (TIMESTAMP(0)) AS insert_timestamp,
--a.trtmnt_ctrl_ind,
b.t_c AS trtmnt_ctrl_ind,
'U' AS message_action_cd,
'U' AS src_load_id

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

INNER JOIN
(
SEL
a.*
	
FROM	ntl_prd_qmtmptbls.knw_mc_25_rtgt_t1_1 a
	
QUALIFY	Row_Number ()
Over (
PARTITION BY a.cust_id, a.acct_num 
ORDER BY a.event_dt DESC, a.delivery_nm ASC,
			
a.vehic, a.t_c) = 1
	
) b 
ON a.cust_id = b.cust_id
AND a.acct_num = b.acct_num

WHERE	a.message_cd IN
(
'UPG_20Q3_IP11_RTGT_C_P',
'UPG_20Q3_IP11_RTGT_C_COMM_P',
'UPG_20Q3_IP11_RTGT_B_P',
'UPG_20Q3_IP11_RTGT_B_COMM_P',
'UPG_20Q3_GS10_RTGT_C_P',
'UPG_20Q3_GS10_RTGT_C_COMM_P',
'UPG_20Q3_GS10_RTGT_B_P',
'UPG_20Q3_GS10_RTGT_B_COMM_P',
'UPG_20Q3_GS20_RTGT_C_P',
'UPG_20Q3_GS20_RTGT_C_COMM_P',
'UPG_20Q3_GS20_RTGT_B_P',
'UPG_20Q3_GS20_RTGT_B_COMM_P',
'UPG_20Q3_NOTE10_RTGT_C_P',
'UPG_20Q3_NOTE10_RTGT_C_COMM_P',
'UPG_20Q3_NOTE10_RTGT_B_P',
'UPG_20Q3_NOTE10_RTGT_B_COMM_P',
'UPG_20Q3_OTH_RTGT_C_P',
'UPG_20Q3_OTH_RTGT_C_COMM_P',
'UPG_20Q3_OTH_RTGT_B_P',
'UPG_20Q3_OTH_RTGT_B_COMM_P',
'AAL_20Q3_RTGT_BROWSE_P',
'AAL_20Q3_RTGT_CART_P'
)
;

/* XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
--UXUXUXUX
--THIS SECTION INSERTS MANUALLY and DIRECTLY into Manual MC table
--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX */
/* 
INSERT INTO udm_prdusr_tbls.cust_acct_line_message_manual 
(sor_id, cust_id, cust_line_seq_id, eff_dt, exp_dt, curr_prev_ind, acct_num, 
message_cd, insert_timestamp, trtmnt_ctrl_ind, action_cd, src_load_id)


SEL
'V' AS sor_id,
a.cust_id,
a.cust_line_seq_id,
b.event_dt AS eff_dt,
'9999-12-31' (DATE) AS exp_dt,
'C' AS curr_prev_ind,
a.acct_num,
CASE WHEN mva_elig_line='Y' AND tx_elig='Y'
THEN 'AAL_PHONE_ABAND_CART_MVA_ESP_P'
WHEN mva_elig_line='N' AND em_elig='Y'
THEN 'AAL_PHONE_ABANDONED_CART_ESP_P' 
ELSE 'AAL_PHONE_ABAND_CART_OUT_ESP_P' 
end 
AS message_cd,
Current_Time (TIMESTAMP(0)) AS insert_timestamp,
CASE 
WHEN c.trtmnt_ctrl_ind = 'L' THEN 'L'
WHEN c.trtmnt_ctrl_ind = 'P' THEN 'P'
WHEN a.phog = 'Y' THEN 'P'
WHEN a.ohog_AAL = 'Y' THEN 'O'
--when a.ohog_UPGRADE = 'Y' then 'O'
--when a.ohog_PRICING = 'Y' then 'O'
ELSE 'T' end AS trtmnt_ctrl_ind,

'U' AS message_action_cd,
'U' AS src_load_id

FROM hqmkt_prd_qmtbls.knw_message_code_base_1 a

LEFT JOIN 
(
SEL  a.cust_id,--a.cust_line_seq_id, 
a.acct_num, --a.mtn,
Max(a.event_dt) event_dt --, a.event_ts


FROM

(SEL cust_id, cust_line_seq_id, acct_num, mtn, event_dt, event_ts, session_id, visitor_id
FROM vzweb_prd_allvm.digital_page_view_vcg_v
WHERE display_chnl_cd IN ('DOTCOM','VZ','VZW','MVA','MOBILEFIRST', 'VZF','VFA') 
AND flow_nm LIKE '%aal%' AND page_activity_nm LIKE ANY ('%expresscheckout%','%promo hub%')
AND flow_nm NOT LIKE ALL ('%prepay%','%5g%','%cband%','%gemini%','%lte%')
AND cust_id IS NOT NULL
AND event_dt BETWEEN Current_Date -20 AND Current_Date) a

LEFT JOIN (SEL event_dt, session_id, visitor_id
FROM ntl_prd_tbls.digital_order_product_vcg a
WHERE order_type_cd LIKE ANY ('%aal%', '%prepa%')
AND display_chnl_cd IN ('DOTCOM','VZ','VZW','MVA','MOBILEFIRST', 'VZF','VFA') 
AND event_dt BETWEEN Current_Date -20 AND Current_Date
) b ON a.session_id=b.session_id AND a.visitor_id=b.visitor_id AND a.event_dt=b.event_dt

LEFT JOIN (SEL  event_dt, session_id, visitor_id
FROM vzweb_prd_allvm.digital_page_view_vcg_v
WHERE page_nm LIKE '%orderconfirmation%'
AND display_chnl_cd IN ('DOTCOM','VZ','VZW','MVA','MOBILEFIRST', 'VZF','VFA') 
AND event_dt BETWEEN Current_Date -20 AND Current_Date) c ON a.session_id=c.session_id AND a.visitor_id=c.visitor_id AND a.event_dt=c.event_dt

WHERE b.session_id IS NULL AND c.session_id IS NULL

GROUP BY 1,2

) b
ON a.cust_id = b.cust_id
AND a.acct_num = b.acct_num


LEFT JOIN 
(
SEL  cust_id, acct_num,Max(trtmnt_ctrl_ind) trtmnt_ctrl_ind, 
Max(event_dt) event_dt
FROM ntl_prd_allvm.tp_crm_delivery_v a
 
WHERE a.match_ind = 'C'
AND 
(a.vehicle_sys_cd = 'AC7'
OR
a.src_vehicle_sys_cd = 'AC7'
)
AND delivery_nm
IN
(
'CRM_M_CU_AC_EM_UPG_99_99_ABANDON_CART_NON_ACCOUNT_OWNER'
,'CRM_M_CU_AC_EM_UPG_99_99_ABANDON_CART_ACCOUNT_OWNER'
)
AND event_dt BETWEEN Current_Date - 20 AND Current_Date
GROUP BY 1,2
) c
ON a.cust_id = c.cust_id
AND a.acct_num = c.acct_num

WHERE a.mth_typ = 'C' --pulls current month so you don't need to change any dates
AND a.eom_lines = 1 --line is active
AND a.mtn_status_ind IN ('A','S') --line is active, checks a different table to be sure
AND a.acct_estb_dt < DATE - 60 --account is over 60 days old, so we skip the onboard period
--and a.dpp_elig = 'Y' --eligible for dpp, no past due and other things, ignore for AAL MCs
AND a.past_due_ind = 'N' --no past due balance over 60 days old
AND (a.crm_elig = 'Y' --eligible for outbound campaigns
OR a.react_phog_univ = 'Y') --eligible for reactive campaigns
AND a.primary_line = 'Y' --only need one line per acct for add-a-line
--and a.line_usg = 'Y' --line has usage, ignore for AAL MCs
--and a.upg_elig = 'Y' --line is upgrade eligible, ignore for AAL MCs
AND (
(a.acct_pho_lines BETWEEN 1 AND 11 
AND a.line_plan_typ1 = 'b) Unl MM'
AND a.pplan_sub_type_desc <> 'Connected Unlimited'
) OR
a.acct_pho_lines BETWEEN 1 AND 9
)

AND a.acct_tot_lines < 30 --can only have 30 devices, so leaves room to add 1
AND a.line_in_svc_cnt < 30 --can only have 30 devices, checks a different table to be sure
AND Coalesce (a.vce_adds_30, 0) = 0 --account not added voice line within 30 days
AND a.vsn_cust_type_cd IN ('BE','PE')
AND b.cust_id IS NOT NULL
AND c.cust_id IS NOT NULL
AND a.acct_MM_pho >= 1
AND message_cd IS NOT NULL
--and pplan_cd in ( '69183','69185','63216','63217','63214','63215')
;

*/



INSERT INTO tntl_prdusr_tbls.crm_unl_pricing_dynamic_v2
(
cust_id,
acct_num,
cust_line_seq_id,
mtn,
mtn_last4,
military_ecpd_flag,
vz_mkt_desc,
pay_diff_level,
pay_diff_int,
pay_diff_fmt,
message_cd,
trtmnt_ctrl_ind,
segment,
pay_bucket,
acct_spend_delta,
total_lines_on_acct,
total_voice_lines_on_acct,
total_smartphone_lines_on_acct,
acct_plan_data_allowance,
acct_plan_makeup_curr,
acct_plan_recmd,
acct_total_lines_recmd,
universe_insert_dt
)
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
b.mtn,
Substr (b.mtn, 7) AS mtn_last4,
b.military AS military_ecpd_flag,
b.area_cd_s AS vz_mkt_desc,
'ACCOUNT' AS pay_diff_level,
b.Delta_Start AS pay_diff_int,
'$' || Trim (b.Delta_Start) AS pay_diff_fmt,
Upper (a.message_cd) AS message_cd,
a.trtmnt_ctrl_ind,
'AAL-PPLAN' AS segment,
'SPEND' AS pay_bucket,
b.Delta_Start AS acct_spend_delta,
b.acct_tot_lines AS total_lines_on_acct,
b.acct_pho_lines AS total_voice_lines_on_acct,
--b.acct_sp_lines as total_smartphone_lines_on_acct,
b.acct_MM_pho AS total_smartphone_lines_on_acct,
--trim (cast (c.gb_allowance as bigint) || ' GB') as acct_plan_data_allowance,
'9999999999 GB' AS acct_plan_data_allowance,
'N/A' AS acct_plan_makeup_curr,
'N/A' AS acct_plan_recmd,
b.acct_tot_lines + 1 AS acct_total_lines_recmd,
DATE AS universe_insert_dt

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.mth_typ = 'C'
AND b.eom_lines = 1

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.cust_line_seq_id,
Count (*) AS Cnt
	
FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
	
WHERE	a.mth_typ = 'C'
AND a.eom_lines = 1
	
HAVING	Cnt > 1
	
GROUP BY 1,2
	
) x 
ON a.cust_id = x.cust_id
AND a.cust_line_seq_id = x.cust_line_seq_id

--inner join udm_prdusr_allvm.dm_price_plan_v c
--on b.pplan_mkt_cd = c.pplan_mkt_cd
--and b.pplan_cd = c.pplan_cd

WHERE	x.cust_id IS NULL
AND a.message_cd IN
(
'AAL_PPLAN_VOICE_ANDR_10_P',
'AAL_PPLAN_VOICE_ANDR_15_P',
'AAL_PPLAN_VOICE_ANDR_20_P',
'AAL_PPLAN_VOICE_ANDR_25_P',
'AAL_PPLAN_VOICE_ANDR_30_P',
'AAL_PPLAN_VOICE_ANDR_5_P',
'AAL_PPLAN_VOICE_ANDR_ESP_P',
'AAL_PPLAN_VOICE_ANDR_P',
'AAL_PPLAN_VOICE_ANDR_SP_10_P',
'AAL_PPLAN_VOICE_ANDR_SP_15_P',
'AAL_PPLAN_VOICE_ANDR_SP_20_P',
'AAL_PPLAN_VOICE_ANDR_SP_25_P',
'AAL_PPLAN_VOICE_ANDR_SP_30_P',
'AAL_PPLAN_VOICE_ANDR_SP_5_P',
'AAL_PPLAN_VOICE_ANDR_SP_ESP_P',
'AAL_PPLAN_VOICE_ANDR_SP_P',
'AAL_PPLAN_VOICE_ESP_10_P',
'AAL_PPLAN_VOICE_ESP_15_P',
'AAL_PPLAN_VOICE_ESP_20_P',
'AAL_PPLAN_VOICE_ESP_25_P',
'AAL_PPLAN_VOICE_ESP_30_P',
'AAL_PPLAN_VOICE_ESP_5_P',
'AAL_PPLAN_VOICE_ESP_P',
'AAL_PPLAN_VOICE_IOS_10_P',
'AAL_PPLAN_VOICE_IOS_15_P',
'AAL_PPLAN_VOICE_IOS_20_P',
'AAL_PPLAN_VOICE_IOS_25_P',
'AAL_PPLAN_VOICE_IOS_30_P',
'AAL_PPLAN_VOICE_IOS_5_P',
'AAL_PPLAN_VOICE_IOS_ESP_P',
'AAL_PPLAN_VOICE_IOS_P',
'AAL_PPLAN_VOICE_IOS_SP_10_P',
'AAL_PPLAN_VOICE_IOS_SP_15_P',
'AAL_PPLAN_VOICE_IOS_SP_20_P',
'AAL_PPLAN_VOICE_IOS_SP_25_P',
'AAL_PPLAN_VOICE_IOS_SP_30_P',
'AAL_PPLAN_VOICE_IOS_SP_5_P',
'AAL_PPLAN_VOICE_IOS_SP_ESP_P',
'AAL_PPLAN_VOICE_IOS_SP_P',
'AAL_PPLAN_VOICE_P',
'AAL_PPLAN_VOICE_SP_ESP_10_P',
'AAL_PPLAN_VOICE_SP_ESP_15_P',
'AAL_PPLAN_VOICE_SP_ESP_20_P',
'AAL_PPLAN_VOICE_SP_ESP_25_P',
'AAL_PPLAN_VOICE_SP_ESP_30_P',
'AAL_PPLAN_VOICE_SP_ESP_5_P',
'AAL_PPLAN_VOICE_SP_ESP_P',
'AAL_PPLAN_VOICE_SP_P'
)
;

DEL 
FROM	tntl_prdusr_tbls.crm_unl_pricing_dynamic_v2
WHERE	message_cd IN
(
'AAL_TAB_ESP_ANDR_P',
'AAL_TAB_ESP_IOS_P',
'AAL_WEARABLE_ESP_ANDR_P',
'AAL_WEARABLE_ESP_IOS_P'
)
;

INSERT INTO tntl_prdusr_tbls.crm_unl_pricing_dynamic_v2
(
cust_id,
acct_num,
cust_line_seq_id,
mtn,
mtn_last4,
military_ecpd_flag,
vz_mkt_desc,
pay_diff_level,
pay_diff_int,
pay_diff_fmt,
message_cd,
trtmnt_ctrl_ind,
segment,
pay_bucket,
acct_spend_delta,
total_lines_on_acct,
total_voice_lines_on_acct,
total_smartphone_lines_on_acct,
acct_plan_data_allowance,
acct_plan_makeup_curr,
acct_plan_recmd,
acct_total_lines_recmd,
universe_insert_dt
)
SEL
a.cust_id,
a.acct_num,
a.cust_line_seq_id,
b.mtn,
Substr (b.mtn, 7) AS mtn_last4,
b.military AS military_ecpd_flag,
b.area_cd_s AS vz_mkt_desc, --30
'LINE' AS pay_diff_level,

CASE 
WHEN a.message_cd IN ('AAL_TAB_ESP_ANDR_P','AAL_TAB_ESP_IOS_P') 
AND c.any_do_get = 'Y' THEN 10
WHEN a.message_cd IN ('AAL_TAB_ESP_ANDR_P','AAL_TAB_ESP_IOS_P') THEN 20
WHEN a.message_cd IN ('AAL_WEARABLE_ESP_ANDR_P','AAL_WEARABLE_ESP_IOS_P') 
AND c.any_do_get = 'Y' THEN 5
WHEN a.message_cd IN ('AAL_WEARABLE_ESP_ANDR_P','AAL_WEARABLE_ESP_IOS_P') THEN 10
ELSE 0 
end AS pay_diff_int,

'$' || Trim 
(
CASE 
WHEN a.message_cd IN ('AAL_TAB_ESP_ANDR_P','AAL_TAB_ESP_IOS_P') 
AND c.any_do_get = 'Y' THEN 10
WHEN a.message_cd IN ('AAL_TAB_ESP_ANDR_P','AAL_TAB_ESP_IOS_P') THEN 20
WHEN a.message_cd IN ('AAL_WEARABLE_ESP_ANDR_P','AAL_WEARABLE_ESP_IOS_P') 
AND c.any_do_get = 'Y' THEN 5
WHEN a.message_cd IN ('AAL_WEARABLE_ESP_ANDR_P','AAL_WEARABLE_ESP_IOS_P') THEN 10
ELSE 0 end
) AS pay_diff_fmt, --13

Upper (a.message_cd) AS message_cd,
a.trtmnt_ctrl_ind,
'AAL-DOGET' AS segment, --10
'SPEND' AS pay_bucket,
--10

CASE 
WHEN a.message_cd IN ('AAL_TAB_ESP_ANDR_P','AAL_TAB_ESP_IOS_P') 
AND c.any_do_get = 'Y' THEN 10
WHEN a.message_cd IN ('AAL_TAB_ESP_ANDR_P','AAL_TAB_ESP_IOS_P') THEN 20
WHEN a.message_cd IN ('AAL_WEARABLE_ESP_ANDR_P','AAL_WEARABLE_ESP_IOS_P') 
AND c.any_do_get = 'Y' THEN 5
WHEN a.message_cd IN ('AAL_WEARABLE_ESP_ANDR_P','AAL_WEARABLE_ESP_IOS_P') THEN 10
ELSE 0 
end AS acct_spend_delta,

b.acct_tot_lines AS total_lines_on_acct,
b.acct_pho_lines AS total_voice_lines_on_acct,
--b.acct_sp_lines as total_smartphone_lines_on_acct,
--b.acct_MM_pho as total_smartphone_lines_on_acct,
ZeroIfNull (c.cnt_do_get) AS total_smartphone_lines_on_acct,
--trim (cast (c.gb_allowance as bigint) || ' GB') as acct_plan_data_allowance,
'N/A' AS acct_plan_data_allowance,
--125
'N/A' AS acct_plan_makeup_curr, --150
'N/A' AS acct_plan_recmd,
--150
b.acct_tot_lines + 1 AS acct_total_lines_recmd,
DATE AS universe_insert_dt

FROM	hqmkt_prd_qmtbls.knw_message_code_aal_2020q3 a

INNER JOIN hqmkt_prd_qmtbls.knw_message_code_base_1 b
ON a.cust_id = b.cust_id
AND a.cust_line_seq_id = b.cust_line_seq_id
AND b.mth_typ = 'C'
AND b.eom_lines = 1

LEFT OUTER JOIN 
(
SEL
a.cust_id,
a.acct_num,
Max (
CASE 
WHEN a.pplan_desc LIKE 'DO%' 
OR a.pplan_desc LIKE 'GET%'
THEN 'Y' 
ELSE 'N' end) AS any_do_get,
Count (
CASE 
WHEN a.pplan_desc LIKE 'DO%' 
OR a.pplan_desc LIKE 'GET%'
THEN a.cust_id 
ELSE NULL end) AS cnt_do_get
	
FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
	
WHERE	a.mth_typ = 'C'
AND a.eom_lines = 1
AND a.data_tier = 'smartphone'
	
GROUP BY 1,2
	
) c 
ON a.cust_id = c.cust_id
AND a.acct_num = c.acct_num

LEFT OUTER JOIN
(
SEL
a.cust_id,
a.cust_line_seq_id,
Count (*) AS Cnt
	
FROM	hqmkt_prd_qmtbls.knw_message_code_base_1 a
	
WHERE	a.mth_typ = 'C'
AND a.eom_lines = 1
	
HAVING	Cnt > 1
	
GROUP BY 1,2
	
) x 
ON a.cust_id = x.cust_id
AND a.cust_line_seq_id = x.cust_line_seq_id

WHERE	x.cust_id IS NULL
AND a.message_cd IN
(
'AAL_TAB_ESP_ANDR_P',
'AAL_TAB_ESP_IOS_P',
'AAL_WEARABLE_ESP_ANDR_P',
'AAL_WEARABLE_ESP_IOS_P'
)
;
